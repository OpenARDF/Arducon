
Arducon.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000254  00800100  0000472a  000047de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000472a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000221  00800354  00800354  00004a32  2**0
                  ALLOC
  3 .eeprom       0000001e  00810000  00810000  00004a32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000005c  00000000  00000000  00004a50  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004aac  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000002d0  00000000  00000000  00004af0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00004193  00000000  00000000  00004dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010dd  00000000  00000000  00008f53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00002d3b  00000000  00000000  0000a030  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000874  00000000  00000000  0000cd6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000154d  00000000  00000000  0000d5e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000031ec  00000000  00000000  0000eb2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000208  00000000  00000000  00011d19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__dtors_end>
       4:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
       8:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
       c:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      10:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      14:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__vector_5>
      18:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      1c:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      20:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__vector_8>
      24:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      28:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      2c:	0c 94 af 0b 	jmp	0x175e	; 0x175e <__vector_11>
      30:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      34:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      38:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__vector_14>
      3c:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      40:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      44:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      48:	0c 94 19 08 	jmp	0x1032	; 0x1032 <__vector_18>
      4c:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <__vector_19>
      50:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      54:	0c 94 b1 07 	jmp	0xf62	; 0xf62 <__vector_21>
      58:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      5c:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      60:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      64:	0c 94 8e 01 	jmp	0x31c	; 0x31c <__bad_interrupt>
      68:	9b 01       	movw	r18, r22
      6a:	a6 01       	movw	r20, r12
      6c:	b1 01       	movw	r22, r2
      6e:	bc 01       	movw	r22, r24
      70:	c7 01       	movw	r24, r14
      72:	d2 01       	movw	r26, r4
      74:	3e 02       	muls	r19, r30
      76:	dd 01       	movw	r26, r26
      78:	3e 02       	muls	r19, r30
      7a:	3e 02       	muls	r19, r30
      7c:	3e 02       	muls	r19, r30
      7e:	e8 01       	movw	r28, r16
      80:	f3 01       	movw	r30, r6
      82:	00 02       	muls	r16, r16
      84:	0d 02       	muls	r16, r29
      86:	1a 02       	muls	r17, r26
      88:	27 02       	muls	r18, r23
      8a:	34 02       	muls	r19, r20
      8c:	49 02       	muls	r20, r25
      8e:	4d 02       	muls	r20, r29
      90:	51 02       	muls	r21, r17
      92:	55 02       	muls	r21, r21
      94:	59 02       	muls	r21, r25
      96:	5d 02       	muls	r21, r29
      98:	77 02       	muls	r23, r23
      9a:	61 02       	muls	r22, r17
      9c:	77 02       	muls	r23, r23
      9e:	77 02       	muls	r23, r23
      a0:	77 02       	muls	r23, r23
      a2:	62 02       	muls	r22, r18
      a4:	66 02       	muls	r22, r22
      a6:	6b 02       	muls	r22, r27
      a8:	6f 02       	muls	r22, r31
      aa:	73 02       	muls	r23, r19
      ac:	89 02       	muls	r24, r25
      ae:	8f 02       	muls	r24, r31
      b0:	95 02       	muls	r25, r21
      b2:	9b 02       	muls	r25, r27
      b4:	a1 02       	muls	r26, r17
      b6:	a7 02       	muls	r26, r23
      b8:	d0 02       	muls	r29, r16
      ba:	ad 02       	muls	r26, r29
      bc:	d0 02       	muls	r29, r16
      be:	d0 02       	muls	r29, r16
      c0:	d0 02       	muls	r29, r16
      c2:	b3 02       	muls	r27, r19
      c4:	b9 02       	muls	r27, r25
      c6:	bf 02       	muls	r27, r31
      c8:	c5 02       	muls	r28, r21
      ca:	cb 02       	muls	r28, r27
      cc:	29 16       	cp	r2, r25
      ce:	29 16       	cp	r2, r25
      d0:	29 16       	cp	r2, r25
      d2:	29 16       	cp	r2, r25
      d4:	29 16       	cp	r2, r25
      d6:	29 16       	cp	r2, r25
      d8:	7c 16       	cp	r7, r28
      da:	7c 16       	cp	r7, r28
      dc:	47 16       	cp	r4, r23
      de:	7c 16       	cp	r7, r28
      e0:	7c 16       	cp	r7, r28
      e2:	7c 16       	cp	r7, r28
      e4:	7c 16       	cp	r7, r28
      e6:	7c 16       	cp	r7, r28
      e8:	7c 16       	cp	r7, r28
      ea:	7c 16       	cp	r7, r28
      ec:	7c 16       	cp	r7, r28
      ee:	47 16       	cp	r4, r23
      f0:	47 16       	cp	r4, r23
      f2:	15 16       	cp	r1, r21
      f4:	1f 16       	cp	r1, r31
      f6:	c5 17       	cp	r28, r21
      f8:	89 17       	cp	r24, r25
      fa:	b5 17       	cp	r27, r21
      fc:	cd 17       	cp	r28, r29
      fe:	b9 17       	cp	r27, r25
     100:	cd 17       	cp	r28, r29
     102:	99 17       	cp	r25, r25
     104:	85 17       	cp	r24, r21
     106:	91 17       	cp	r25, r17
     108:	95 17       	cp	r25, r21
     10a:	cd 17       	cp	r28, r29
     10c:	a9 17       	cp	r26, r25
     10e:	7d 17       	cp	r23, r29
     110:	ad 17       	cp	r26, r29
     112:	79 17       	cp	r23, r25
     114:	8d 17       	cp	r24, r29
     116:	51 17       	cp	r21, r17
     118:	55 17       	cp	r21, r21
     11a:	59 17       	cp	r21, r25
     11c:	5d 17       	cp	r21, r29
     11e:	61 17       	cp	r22, r17
     120:	65 17       	cp	r22, r21
     122:	69 17       	cp	r22, r25
     124:	6d 17       	cp	r22, r29
     126:	71 17       	cp	r23, r17
     128:	75 17       	cp	r23, r21
     12a:	9d 17       	cp	r25, r29
     12c:	a1 17       	cp	r26, r17
     12e:	c9 17       	cp	r28, r25
     130:	a5 17       	cp	r26, r21
     132:	cd 17       	cp	r28, r29
     134:	81 17       	cp	r24, r17
     136:	bd 17       	cp	r27, r29
     138:	d1 17       	cp	r29, r17
     13a:	ed 16       	cp	r14, r29
     13c:	f1 16       	cp	r15, r17
     13e:	f5 16       	cp	r15, r21
     140:	f9 16       	cp	r15, r25
     142:	fd 16       	cp	r15, r29
     144:	01 17       	cp	r16, r17
     146:	05 17       	cp	r16, r21
     148:	09 17       	cp	r16, r25
     14a:	0d 17       	cp	r16, r29
     14c:	11 17       	cp	r17, r17
     14e:	15 17       	cp	r17, r21
     150:	19 17       	cp	r17, r25
     152:	1d 17       	cp	r17, r29
     154:	21 17       	cp	r18, r17
     156:	25 17       	cp	r18, r21
     158:	29 17       	cp	r18, r25
     15a:	2d 17       	cp	r18, r29
     15c:	31 17       	cp	r19, r17
     15e:	35 17       	cp	r19, r21
     160:	39 17       	cp	r19, r25
     162:	3d 17       	cp	r19, r29
     164:	41 17       	cp	r20, r17
     166:	45 17       	cp	r20, r21
     168:	49 17       	cp	r20, r25
     16a:	4d 17       	cp	r20, r29
     16c:	cd 17       	cp	r28, r29
     16e:	cd 17       	cp	r28, r29
     170:	cd 17       	cp	r28, r29
     172:	cd 17       	cp	r28, r29
     174:	b1 17       	cp	r27, r17
     176:	cd 17       	cp	r28, r29
     178:	cd 17       	cp	r28, r29
     17a:	cd 17       	cp	r28, r29
     17c:	cd 17       	cp	r28, r29
     17e:	cd 17       	cp	r28, r29
     180:	cd 17       	cp	r28, r29
     182:	cd 17       	cp	r28, r29
     184:	cd 17       	cp	r28, r29
     186:	cd 17       	cp	r28, r29
     188:	cd 17       	cp	r28, r29
     18a:	cd 17       	cp	r28, r29
     18c:	cd 17       	cp	r28, r29
     18e:	cd 17       	cp	r28, r29
     190:	cd 17       	cp	r28, r29
     192:	cd 17       	cp	r28, r29
     194:	cd 17       	cp	r28, r29
     196:	cd 17       	cp	r28, r29
     198:	cd 17       	cp	r28, r29
     19a:	cd 17       	cp	r28, r29
     19c:	cd 17       	cp	r28, r29
     19e:	cd 17       	cp	r28, r29
     1a0:	cd 17       	cp	r28, r29
     1a2:	cd 17       	cp	r28, r29
     1a4:	cd 17       	cp	r28, r29
     1a6:	cd 17       	cp	r28, r29
     1a8:	cd 17       	cp	r28, r29
     1aa:	cd 17       	cp	r28, r29
     1ac:	cd 17       	cp	r28, r29
     1ae:	c1 17       	cp	r28, r17
     1b0:	05 a8       	ldd	r0, Z+53	; 0x35
     1b2:	4c cd       	rjmp	.-1384   	; 0xfffffc4c <__eeprom_end+0xff7efc2e>
     1b4:	b2 d4       	rcall	.+2404   	; 0xb1a <_Z12linkbus_initm+0x48>
     1b6:	4e b9       	out	0x0e, r20	; 14
     1b8:	38 36       	cpi	r19, 0x68	; 104
     1ba:	a9 02       	muls	r26, r25
     1bc:	0c 50       	subi	r16, 0x0C	; 12
     1be:	b9 91       	ld	r27, Y+
     1c0:	86 88       	ldd	r8, Z+22	; 0x16
     1c2:	08 3c       	cpi	r16, 0xC8	; 200
     1c4:	a6 aa       	std	Z+54, r10	; 0x36
     1c6:	aa 2a       	or	r10, r26
     1c8:	be 00       	.word	0x00be	; ????
     1ca:	00 00       	nop
     1cc:	80 3f       	cpi	r24, 0xF0	; 240

000001ce <__trampolines_end>:
     1ce:	00 40       	sbci	r16, 0x00	; 0
     1d0:	7a 10       	cpse	r7, r10
     1d2:	f3 5a       	subi	r31, 0xA3	; 163
     1d4:	00 a0       	ldd	r0, Z+32	; 0x20
     1d6:	72 4e       	sbci	r23, 0xE2	; 226
     1d8:	18 09       	sbc	r17, r8
     1da:	00 10       	cpse	r0, r0
     1dc:	a5 d4       	rcall	.+2378   	; 0xb28 <_Z17linkbus_send_textPc+0xa>
     1de:	e8 00       	.word	0x00e8	; ????
     1e0:	00 e8       	ldi	r16, 0x80	; 128
     1e2:	76 48       	sbci	r23, 0x86	; 134
     1e4:	17 00       	.word	0x0017	; ????
     1e6:	00 e4       	ldi	r16, 0x40	; 64
     1e8:	0b 54       	subi	r16, 0x4B	; 75
     1ea:	02 00       	.word	0x0002	; ????
     1ec:	00 ca       	rjmp	.-3072   	; 0xfffff5ee <__eeprom_end+0xff7ef5d0>
     1ee:	9a 3b       	cpi	r25, 0xBA	; 186
     1f0:	00 00       	nop
     1f2:	00 e1       	ldi	r16, 0x10	; 16
     1f4:	f5 05       	cpc	r31, r5
     1f6:	00 00       	nop
     1f8:	80 96       	adiw	r24, 0x20	; 32
     1fa:	98 00       	.word	0x0098	; ????
     1fc:	00 00       	nop
     1fe:	40 42       	sbci	r20, 0x20	; 32
     200:	0f 00       	.word	0x000f	; ????
     202:	00 00       	nop
     204:	a0 86       	std	Z+8, r10	; 0x08
     206:	01 00       	.word	0x0001	; ????
     208:	00 00       	nop
     20a:	10 27       	eor	r17, r16
     20c:	00 00       	nop
     20e:	00 00       	nop
     210:	e8 03       	fmulsu	r22, r16
     212:	00 00       	nop
     214:	00 00       	nop
     216:	64 00       	.word	0x0064	; ????
     218:	00 00       	nop
     21a:	00 00       	nop
     21c:	0a 00       	.word	0x000a	; ????
     21e:	00 00       	nop
     220:	00 00       	nop
     222:	01 00       	.word	0x0001	; ????
     224:	00 00       	nop
     226:	00 00       	nop
     228:	2c 76       	andi	r18, 0x6C	; 108
     22a:	d8 88       	ldd	r13, Y+16	; 0x10
     22c:	dc 67       	ori	r29, 0x7C	; 124
     22e:	4f 08       	sbc	r4, r15
     230:	23 df       	rcall	.-442    	; 0x78 <__SREG__+0x39>
     232:	c1 df       	rcall	.-126    	; 0x1b6 <__SREG__+0x177>
     234:	ae 59       	subi	r26, 0x9E	; 158
     236:	e1 b1       	in	r30, 0x01	; 1
     238:	b7 96       	adiw	r30, 0x27	; 39
     23a:	e5 e3       	ldi	r30, 0x35	; 53
     23c:	e4 53       	subi	r30, 0x34	; 52
     23e:	c6 3a       	cpi	r28, 0xA6	; 166
     240:	e6 51       	subi	r30, 0x16	; 22
     242:	99 76       	andi	r25, 0x69	; 105
     244:	96 e8       	ldi	r25, 0x86	; 134
     246:	e6 c2       	rjmp	.+1484   	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     248:	84 26       	eor	r8, r20
     24a:	eb 89       	ldd	r30, Y+19	; 0x13
     24c:	8c 9b       	sbis	0x11, 4	; 17
     24e:	62 ed       	ldi	r22, 0xD2	; 210
     250:	40 7c       	andi	r20, 0xC0	; 192
     252:	6f fc       	.word	0xfc6f	; ????
     254:	ef bc       	out	0x2f, r14	; 47
     256:	9c 9f       	mul	r25, r28
     258:	40 f2       	brcs	.-112    	; 0x1ea <__trampolines_end+0x1c>
     25a:	ba a5       	ldd	r27, Y+42	; 0x2a
     25c:	6f a5       	ldd	r22, Y+47	; 0x2f
     25e:	f4 90       	lpm	r15, Z
     260:	05 5a       	subi	r16, 0xA5	; 165
     262:	2a f7       	brpl	.-54     	; 0x22e <__trampolines_end+0x60>
     264:	5c 93       	st	X, r21
     266:	6b 6c       	ori	r22, 0xCB	; 203
     268:	f9 67       	ori	r31, 0x79	; 121
     26a:	6d c1       	rjmp	.+730    	; 0x546 <_Z12digitalWritehh+0x4a>
     26c:	1b fc       	.word	0xfc1b	; ????
     26e:	e0 e4       	ldi	r30, 0x40	; 64
     270:	0d 47       	sbci	r16, 0x7D	; 125
     272:	fe f5       	brtc	.+126    	; 0x2f2 <__do_clear_bss+0x4>
     274:	20 e6       	ldi	r18, 0x60	; 96
     276:	b5 00       	.word	0x00b5	; ????
     278:	d0 ed       	ldi	r29, 0xD0	; 208
     27a:	90 2e       	mov	r9, r16
     27c:	03 00       	.word	0x0003	; ????
     27e:	94 35       	cpi	r25, 0x54	; 84
     280:	77 05       	cpc	r23, r7
     282:	00 80       	ld	r0, Z
     284:	84 1e       	adc	r8, r20
     286:	08 00       	.word	0x0008	; ????
     288:	00 20       	and	r0, r0
     28a:	4e 0a       	sbc	r4, r30
     28c:	00 00       	nop
     28e:	00 c8       	rjmp	.-4096   	; 0xfffff290 <__eeprom_end+0xff7ef272>
     290:	0c 33       	cpi	r16, 0x3C	; 60
     292:	33 33       	cpi	r19, 0x33	; 51
     294:	33 0f       	add	r19, r19
     296:	98 6e       	ori	r25, 0xE8	; 232
     298:	12 83       	std	Z+2, r17	; 0x02
     29a:	11 41       	sbci	r17, 0x11	; 17
     29c:	ef 8d       	ldd	r30, Y+31	; 0x1f
     29e:	21 14       	cp	r2, r1
     2a0:	89 3b       	cpi	r24, 0xB9	; 185
     2a2:	e6 55       	subi	r30, 0x56	; 86
     2a4:	16 cf       	rjmp	.-468    	; 0xd2 <__SREG__+0x93>
     2a6:	fe e6       	ldi	r31, 0x6E	; 110
     2a8:	db 18       	sub	r13, r11
     2aa:	d1 84       	ldd	r13, Z+9	; 0x09
     2ac:	4b 38       	cpi	r20, 0x8B	; 139
     2ae:	1b f7       	brvc	.-58     	; 0x276 <__trampolines_end+0xa8>
     2b0:	7c 1d       	adc	r23, r12
     2b2:	90 1d       	adc	r25, r0
     2b4:	a4 bb       	out	0x14, r26	; 20
     2b6:	e4 24       	eor	r14, r4
     2b8:	20 32       	cpi	r18, 0x20	; 32
     2ba:	84 72       	andi	r24, 0x24	; 36
     2bc:	5e 22       	and	r5, r30
     2be:	81 00       	.word	0x0081	; ????
     2c0:	c9 f1       	breq	.+114    	; 0x334 <_Z7pinModehh+0x14>
     2c2:	24 ec       	ldi	r18, 0xC4	; 196
     2c4:	a1 e5       	ldi	r26, 0x51	; 81
     2c6:	3d 27       	eor	r19, r29

000002c8 <__ctors_start>:
     2c8:	cc 16       	cp	r12, r28

000002ca <__ctors_end>:
     2ca:	dd 16       	cp	r13, r29

000002cc <__dtors_end>:
     2cc:	11 24       	eor	r1, r1
     2ce:	1f be       	out	0x3f, r1	; 63
     2d0:	cf ef       	ldi	r28, 0xFF	; 255
     2d2:	d8 e0       	ldi	r29, 0x08	; 8
     2d4:	de bf       	out	0x3e, r29	; 62
     2d6:	cd bf       	out	0x3d, r28	; 61

000002d8 <__do_copy_data>:
     2d8:	13 e0       	ldi	r17, 0x03	; 3
     2da:	a0 e0       	ldi	r26, 0x00	; 0
     2dc:	b1 e0       	ldi	r27, 0x01	; 1
     2de:	ea e2       	ldi	r30, 0x2A	; 42
     2e0:	f7 e4       	ldi	r31, 0x47	; 71
     2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <__do_copy_data+0x10>
     2e4:	05 90       	lpm	r0, Z+
     2e6:	0d 92       	st	X+, r0
     2e8:	a4 35       	cpi	r26, 0x54	; 84
     2ea:	b1 07       	cpc	r27, r17
     2ec:	d9 f7       	brne	.-10     	; 0x2e4 <__do_copy_data+0xc>

000002ee <__do_clear_bss>:
     2ee:	25 e0       	ldi	r18, 0x05	; 5
     2f0:	a4 e5       	ldi	r26, 0x54	; 84
     2f2:	b3 e0       	ldi	r27, 0x03	; 3
     2f4:	01 c0       	rjmp	.+2      	; 0x2f8 <.do_clear_bss_start>

000002f6 <.do_clear_bss_loop>:
     2f6:	1d 92       	st	X+, r1

000002f8 <.do_clear_bss_start>:
     2f8:	a5 37       	cpi	r26, 0x75	; 117
     2fa:	b2 07       	cpc	r27, r18
     2fc:	e1 f7       	brne	.-8      	; 0x2f6 <.do_clear_bss_loop>

000002fe <__do_global_ctors>:
     2fe:	11 e0       	ldi	r17, 0x01	; 1
     300:	c5 e6       	ldi	r28, 0x65	; 101
     302:	d1 e0       	ldi	r29, 0x01	; 1
     304:	04 c0       	rjmp	.+8      	; 0x30e <__do_global_ctors+0x10>
     306:	21 97       	sbiw	r28, 0x01	; 1
     308:	fe 01       	movw	r30, r28
     30a:	0e 94 3e 1c 	call	0x387c	; 0x387c <__tablejump2__>
     30e:	c4 36       	cpi	r28, 0x64	; 100
     310:	d1 07       	cpc	r29, r17
     312:	c9 f7       	brne	.-14     	; 0x306 <__do_global_ctors+0x8>
     314:	0e 94 50 06 	call	0xca0	; 0xca0 <main>
     318:	0c 94 88 23 	jmp	0x4710	; 0x4710 <__do_global_dtors>

0000031c <__bad_interrupt>:
     31c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000320 <_Z7pinModehh>:
#include "ardooweeno.h"
#include <util/delay.h>

void pinMode(uint8_t pin, uint8_t mode)
{
	switch(pin)
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	fc 01       	movw	r30, r24
     324:	32 97       	sbiw	r30, 0x02	; 2
     326:	e2 31       	cpi	r30, 0x12	; 18
     328:	f1 05       	cpc	r31, r1
     32a:	08 f0       	brcs	.+2      	; 0x32e <_Z7pinModehh+0xe>
     32c:	a7 c0       	rjmp	.+334    	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     32e:	ec 5c       	subi	r30, 0xCC	; 204
     330:	ff 4f       	sbci	r31, 0xFF	; 255
     332:	0c 94 3e 1c 	jmp	0x387c	; 0x387c <__tablejump2__>
	{
		case D2:
		{
			if(mode == OUTPUT)
     336:	61 30       	cpi	r22, 0x01	; 1
     338:	11 f4       	brne	.+4      	; 0x33e <_Z7pinModehh+0x1e>
			{
				DDRD  |= (1 << PORTD2);
     33a:	52 9a       	sbi	0x0a, 2	; 10
     33c:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD2);
     33e:	52 98       	cbi	0x0a, 2	; 10

				if(mode == INPUT_PULLUP)
     340:	63 30       	cpi	r22, 0x03	; 3
     342:	11 f4       	brne	.+4      	; 0x348 <_Z7pinModehh+0x28>
				{
					PORTD  |= (1 << PORTD2);
     344:	5a 9a       	sbi	0x0b, 2	; 11
     346:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD2);
     348:	5a 98       	cbi	0x0b, 2	; 11
     34a:	08 95       	ret
		}
		break;

		case D3:
		{
			if(mode == OUTPUT)
     34c:	61 30       	cpi	r22, 0x01	; 1
     34e:	11 f4       	brne	.+4      	; 0x354 <_Z7pinModehh+0x34>
			{
				DDRD  |= (1 << PORTD3);
     350:	53 9a       	sbi	0x0a, 3	; 10
     352:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD3);
     354:	53 98       	cbi	0x0a, 3	; 10

				if(mode == INPUT_PULLUP)
     356:	63 30       	cpi	r22, 0x03	; 3
     358:	11 f4       	brne	.+4      	; 0x35e <_Z7pinModehh+0x3e>
				{
					PORTD  |= (1 << PORTD3);
     35a:	5b 9a       	sbi	0x0b, 3	; 11
     35c:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD3);
     35e:	5b 98       	cbi	0x0b, 3	; 11
     360:	08 95       	ret
		}
		break;

		case D4:
		{
			if(mode == OUTPUT)
     362:	61 30       	cpi	r22, 0x01	; 1
     364:	11 f4       	brne	.+4      	; 0x36a <_Z7pinModehh+0x4a>
			{
				DDRD  |= (1 << PORTD4);
     366:	54 9a       	sbi	0x0a, 4	; 10
     368:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD4);
     36a:	54 98       	cbi	0x0a, 4	; 10

				if(mode == INPUT_PULLUP)
     36c:	63 30       	cpi	r22, 0x03	; 3
     36e:	11 f4       	brne	.+4      	; 0x374 <_Z7pinModehh+0x54>
				{
					PORTD  |= (1 << PORTD4);
     370:	5c 9a       	sbi	0x0b, 4	; 11
     372:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD4);
     374:	5c 98       	cbi	0x0b, 4	; 11
     376:	08 95       	ret
		}
		break;

		case D5:
		{
			if(mode == OUTPUT)
     378:	61 30       	cpi	r22, 0x01	; 1
     37a:	11 f4       	brne	.+4      	; 0x380 <_Z7pinModehh+0x60>
			{
				DDRD  |= (1 << PORTD5);
     37c:	55 9a       	sbi	0x0a, 5	; 10
     37e:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD5);
     380:	55 98       	cbi	0x0a, 5	; 10

				if(mode == INPUT_PULLUP)
     382:	63 30       	cpi	r22, 0x03	; 3
     384:	11 f4       	brne	.+4      	; 0x38a <_Z7pinModehh+0x6a>
				{
					PORTD  |= (1 << PORTD5);
     386:	5d 9a       	sbi	0x0b, 5	; 11
     388:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD5);
     38a:	5d 98       	cbi	0x0b, 5	; 11
     38c:	08 95       	ret
		}
		break;

		case D6:
		{
			if(mode == OUTPUT)
     38e:	61 30       	cpi	r22, 0x01	; 1
     390:	11 f4       	brne	.+4      	; 0x396 <_Z7pinModehh+0x76>
			{
				DDRD  |= (1 << PORTD6);
     392:	56 9a       	sbi	0x0a, 6	; 10
     394:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD6);
     396:	56 98       	cbi	0x0a, 6	; 10

				if(mode == INPUT_PULLUP)
     398:	63 30       	cpi	r22, 0x03	; 3
     39a:	11 f4       	brne	.+4      	; 0x3a0 <_Z7pinModehh+0x80>
				{
					PORTD  |= (1 << PORTD6);
     39c:	5e 9a       	sbi	0x0b, 6	; 11
     39e:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD6);
     3a0:	5e 98       	cbi	0x0b, 6	; 11
     3a2:	08 95       	ret
		}
		break;

		case D7:
		{
			if(mode == OUTPUT)
     3a4:	61 30       	cpi	r22, 0x01	; 1
     3a6:	11 f4       	brne	.+4      	; 0x3ac <_Z7pinModehh+0x8c>
			{
				DDRD  |= (1 << PORTD7);
     3a8:	57 9a       	sbi	0x0a, 7	; 10
     3aa:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD7);
     3ac:	57 98       	cbi	0x0a, 7	; 10

				if(mode == INPUT_PULLUP)
     3ae:	63 30       	cpi	r22, 0x03	; 3
     3b0:	11 f4       	brne	.+4      	; 0x3b6 <_Z7pinModehh+0x96>
				{
					PORTD  |= (1 << PORTD7);
     3b2:	5f 9a       	sbi	0x0b, 7	; 11
     3b4:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD7);
     3b6:	5f 98       	cbi	0x0b, 7	; 11
     3b8:	08 95       	ret
		}
		break;

		case D9:
		{
			if(mode == OUTPUT)
     3ba:	61 30       	cpi	r22, 0x01	; 1
     3bc:	11 f4       	brne	.+4      	; 0x3c2 <_Z7pinModehh+0xa2>
			{
				DDRB  |= (1 << PORTB1);
     3be:	21 9a       	sbi	0x04, 1	; 4
     3c0:	08 95       	ret
			}
			else
			{
				DDRB  &= ~(1 << PORTB1);
     3c2:	21 98       	cbi	0x04, 1	; 4

				if(mode == INPUT_PULLUP)
     3c4:	63 30       	cpi	r22, 0x03	; 3
     3c6:	11 f4       	brne	.+4      	; 0x3cc <_Z7pinModehh+0xac>
				{
					PORTD  |= (1 << PORTB1);
     3c8:	59 9a       	sbi	0x0b, 1	; 11
     3ca:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTB1);
     3cc:	59 98       	cbi	0x0b, 1	; 11
     3ce:	08 95       	ret
		}
		break;

		case D13:
		{
			if(mode == OUTPUT)
     3d0:	61 30       	cpi	r22, 0x01	; 1
     3d2:	11 f4       	brne	.+4      	; 0x3d8 <_Z7pinModehh+0xb8>
			{
				DDRB  |= (1 << PORTB5);
     3d4:	25 9a       	sbi	0x04, 5	; 4
     3d6:	08 95       	ret
			}
			else
			{
				DDRB  &= ~(1 << PORTB5);
     3d8:	25 98       	cbi	0x04, 5	; 4

				if(mode == INPUT_PULLUP)
     3da:	63 30       	cpi	r22, 0x03	; 3
     3dc:	11 f4       	brne	.+4      	; 0x3e2 <_Z7pinModehh+0xc2>
				{
					PORTD  |= (1 << PORTB5);
     3de:	5d 9a       	sbi	0x0b, 5	; 11
     3e0:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTB5);
     3e2:	5d 98       	cbi	0x0b, 5	; 11
     3e4:	08 95       	ret
		}
		break;

		case A0:
		{
			if(mode == OUTPUT)
     3e6:	61 30       	cpi	r22, 0x01	; 1
     3e8:	11 f4       	brne	.+4      	; 0x3ee <_Z7pinModehh+0xce>
			{
				DDRC  |= (1 << PORTC0);
     3ea:	38 9a       	sbi	0x07, 0	; 7
     3ec:	0b c0       	rjmp	.+22     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
			}
			else
			{
				DDRC  &= ~(1 << PORTC0);
     3ee:	38 98       	cbi	0x07, 0	; 7

				if(mode == INPUT_PULLUP)
     3f0:	63 30       	cpi	r22, 0x03	; 3
     3f2:	19 f4       	brne	.+6      	; 0x3fa <_Z7pinModehh+0xda>
				{
					PORTC  |= (1 << PORTC0);
     3f4:	40 9a       	sbi	0x08, 0	; 8
			{
				DDRC  |= (1 << PORTC1);
			}
			else
			{
				DDRC  &= ~(1 << PORTC1);
     3f6:	39 98       	cbi	0x07, 1	; 7
     3f8:	0a c0       	rjmp	.+20     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
				{
					PORTC  |= (1 << PORTC0);
				}
				else
				{
					PORTC &= ~(1 << PORTC0);
     3fa:	40 98       	cbi	0x08, 0	; 8
			{
				DDRC  |= (1 << PORTC1);
			}
			else
			{
				DDRC  &= ~(1 << PORTC1);
     3fc:	39 98       	cbi	0x07, 1	; 7
     3fe:	0a c0       	rjmp	.+20     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
			}
		}

		case A1:
		{
			if(mode == OUTPUT)
     400:	61 30       	cpi	r22, 0x01	; 1
     402:	11 f4       	brne	.+4      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
			{
				DDRC  |= (1 << PORTC1);
     404:	39 9a       	sbi	0x07, 1	; 7
     406:	0b c0       	rjmp	.+22     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
			}
			else
			{
				DDRC  &= ~(1 << PORTC1);
     408:	39 98       	cbi	0x07, 1	; 7

				if(mode == INPUT_PULLUP)
     40a:	63 30       	cpi	r22, 0x03	; 3
     40c:	19 f4       	brne	.+6      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
				{
					PORTC  |= (1 << PORTC1);
     40e:	41 9a       	sbi	0x08, 1	; 8
			{
				DDRC  |= (1 << PORTC2);
			}
			else
			{
				DDRC  &= ~(1 << PORTC2);
     410:	3a 98       	cbi	0x07, 2	; 7
     412:	0a c0       	rjmp	.+20     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
				{
					PORTC  |= (1 << PORTC1);
				}
				else
				{
					PORTC &= ~(1 << PORTC1);
     414:	41 98       	cbi	0x08, 1	; 8
			{
				DDRC  |= (1 << PORTC2);
			}
			else
			{
				DDRC  &= ~(1 << PORTC2);
     416:	3a 98       	cbi	0x07, 2	; 7
     418:	0a c0       	rjmp	.+20     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
			}
		}

		case A2:
		{
			if(mode == OUTPUT)
     41a:	61 30       	cpi	r22, 0x01	; 1
     41c:	11 f4       	brne	.+4      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
			{
				DDRC  |= (1 << PORTC2);
     41e:	3a 9a       	sbi	0x07, 2	; 7
     420:	0b c0       	rjmp	.+22     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
			}
			else
			{
				DDRC  &= ~(1 << PORTC2);
     422:	3a 98       	cbi	0x07, 2	; 7

				if(mode == INPUT_PULLUP)
     424:	63 30       	cpi	r22, 0x03	; 3
     426:	19 f4       	brne	.+6      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
				{
					PORTC  |= (1 << PORTC2);
     428:	42 9a       	sbi	0x08, 2	; 8
			{
				DDRC  |= (1 << PORTC3);
			}
			else
			{
				DDRC  &= ~(1 << PORTC3);
     42a:	3b 98       	cbi	0x07, 3	; 7
     42c:	0a c0       	rjmp	.+20     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
				{
					PORTC  |= (1 << PORTC2);
				}
				else
				{
					PORTC &= ~(1 << PORTC2);
     42e:	42 98       	cbi	0x08, 2	; 8
			{
				DDRC  |= (1 << PORTC3);
			}
			else
			{
				DDRC  &= ~(1 << PORTC3);
     430:	3b 98       	cbi	0x07, 3	; 7
     432:	0a c0       	rjmp	.+20     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
			}
		}

		case A3:
		{
			if(mode == OUTPUT)
     434:	61 30       	cpi	r22, 0x01	; 1
     436:	11 f4       	brne	.+4      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
			{
				DDRC  |= (1 << PORTC3);
     438:	3b 9a       	sbi	0x07, 3	; 7
     43a:	0b c0       	rjmp	.+22     	; 0x452 <__EEPROM_REGION_LENGTH__+0x52>
			}
			else
			{
				DDRC  &= ~(1 << PORTC3);
     43c:	3b 98       	cbi	0x07, 3	; 7

				if(mode == INPUT_PULLUP)
     43e:	63 30       	cpi	r22, 0x03	; 3
     440:	19 f4       	brne	.+6      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
				{
					PORTC  |= (1 << PORTC3);
     442:	43 9a       	sbi	0x08, 3	; 8
			{
				DDRC  |= (1 << PORTC4);
			}
			else
			{
				DDRC  &= ~(1 << PORTC4);
     444:	3c 98       	cbi	0x07, 4	; 7
     446:	0a c0       	rjmp	.+20     	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
				{
					PORTC  |= (1 << PORTC3);
				}
				else
				{
					PORTC &= ~(1 << PORTC3);
     448:	43 98       	cbi	0x08, 3	; 8
			{
				DDRC  |= (1 << PORTC4);
			}
			else
			{
				DDRC  &= ~(1 << PORTC4);
     44a:	3c 98       	cbi	0x07, 4	; 7
     44c:	0a c0       	rjmp	.+20     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
			}
		}

		case A4:
		{
			if(mode == OUTPUT)
     44e:	61 30       	cpi	r22, 0x01	; 1
     450:	11 f4       	brne	.+4      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
			{
				DDRC  |= (1 << PORTC4);
     452:	3c 9a       	sbi	0x07, 4	; 7
     454:	0b c0       	rjmp	.+22     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
			}
			else
			{
				DDRC  &= ~(1 << PORTC4);
     456:	3c 98       	cbi	0x07, 4	; 7

				if(mode == INPUT_PULLUP)
     458:	63 30       	cpi	r22, 0x03	; 3
     45a:	19 f4       	brne	.+6      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
				{
					PORTC  |= (1 << PORTC4);
     45c:	44 9a       	sbi	0x08, 4	; 8
			{
				DDRC  |= (1 << PORTC5);
			}
			else
			{
				DDRC  &= ~(1 << PORTC5);
     45e:	3d 98       	cbi	0x07, 5	; 7
     460:	0a c0       	rjmp	.+20     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
				{
					PORTC  |= (1 << PORTC4);
				}
				else
				{
					PORTC &= ~(1 << PORTC4);
     462:	44 98       	cbi	0x08, 4	; 8
			{
				DDRC  |= (1 << PORTC5);
			}
			else
			{
				DDRC  &= ~(1 << PORTC5);
     464:	3d 98       	cbi	0x07, 5	; 7
     466:	09 c0       	rjmp	.+18     	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
			}
		}

		case A5:
		{
			if(mode == OUTPUT)
     468:	61 30       	cpi	r22, 0x01	; 1
     46a:	11 f4       	brne	.+4      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
			{
				DDRC  |= (1 << PORTC5);
     46c:	3d 9a       	sbi	0x07, 5	; 7
     46e:	08 95       	ret
			}
			else
			{
				DDRC  &= ~(1 << PORTC5);
     470:	3d 98       	cbi	0x07, 5	; 7

				if(mode == INPUT_PULLUP)
     472:	63 30       	cpi	r22, 0x03	; 3
     474:	11 f4       	brne	.+4      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
				{
					PORTC  |= (1 << PORTC5);
     476:	45 9a       	sbi	0x08, 5	; 8
     478:	08 95       	ret
				}
				else
				{
					PORTC &= ~(1 << PORTC5);
     47a:	45 98       	cbi	0x08, 5	; 8
     47c:	08 95       	ret

0000047e <_Z11digitalReadh>:

BOOL digitalRead(uint8_t pin)
{
	int result = 0;

	switch(pin)
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	fc 01       	movw	r30, r24
     482:	32 97       	sbiw	r30, 0x02	; 2
     484:	e0 31       	cpi	r30, 0x10	; 16
     486:	f1 05       	cpc	r31, r1
     488:	90 f5       	brcc	.+100    	; 0x4ee <_Z11digitalReadh+0x70>
     48a:	ea 5b       	subi	r30, 0xBA	; 186
     48c:	ff 4f       	sbci	r31, 0xFF	; 255
     48e:	0c 94 3e 1c 	jmp	0x387c	; 0x387c <__tablejump2__>
	{
		case D2:
		{
			result = PIND & (1 << PORTD2);
     492:	29 b1       	in	r18, 0x09	; 9
     494:	24 70       	andi	r18, 0x04	; 4
     496:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     498:	2c c0       	rjmp	.+88     	; 0x4f2 <_Z11digitalReadh+0x74>

		case D3:
		{
			result = PIND & (1 << PORTD3);
     49a:	29 b1       	in	r18, 0x09	; 9
     49c:	28 70       	andi	r18, 0x08	; 8
     49e:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4a0:	28 c0       	rjmp	.+80     	; 0x4f2 <_Z11digitalReadh+0x74>

		case D4:
		{
			result = PIND & (1 << PORTD4);
     4a2:	29 b1       	in	r18, 0x09	; 9
     4a4:	20 71       	andi	r18, 0x10	; 16
     4a6:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4a8:	24 c0       	rjmp	.+72     	; 0x4f2 <_Z11digitalReadh+0x74>

		case D5:
		{
			result = PIND & (1 << PORTD5);
     4aa:	29 b1       	in	r18, 0x09	; 9
     4ac:	20 72       	andi	r18, 0x20	; 32
     4ae:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4b0:	20 c0       	rjmp	.+64     	; 0x4f2 <_Z11digitalReadh+0x74>

		case D6:
		{
			result = PIND & (1 << PORTD6);
     4b2:	29 b1       	in	r18, 0x09	; 9
     4b4:	20 74       	andi	r18, 0x40	; 64
     4b6:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4b8:	1c c0       	rjmp	.+56     	; 0x4f2 <_Z11digitalReadh+0x74>

		case D7:
		{
			result = PIND & (1 << PORTD7);
     4ba:	29 b1       	in	r18, 0x09	; 9
     4bc:	20 78       	andi	r18, 0x80	; 128
     4be:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4c0:	18 c0       	rjmp	.+48     	; 0x4f2 <_Z11digitalReadh+0x74>

		case D9:
		{
			result = PINB & (1 << PORTB1);
     4c2:	83 b1       	in	r24, 0x03	; 3
		}

		case D13:
		{
			result = PINB & (1 << PORTB5);
     4c4:	23 b1       	in	r18, 0x03	; 3
     4c6:	20 72       	andi	r18, 0x20	; 32
     4c8:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4ca:	13 c0       	rjmp	.+38     	; 0x4f2 <_Z11digitalReadh+0x74>

		case A0:
		{
			result = PINC & (1 << PORTC0);
     4cc:	86 b1       	in	r24, 0x06	; 6
     4ce:	28 2f       	mov	r18, r24
     4d0:	21 70       	andi	r18, 0x01	; 1
     4d2:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4d4:	0e c0       	rjmp	.+28     	; 0x4f2 <_Z11digitalReadh+0x74>

		case A1:
		{
			result = PINC & (1 << PORTC1);
     4d6:	26 b1       	in	r18, 0x06	; 6
     4d8:	22 70       	andi	r18, 0x02	; 2
     4da:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4dc:	0a c0       	rjmp	.+20     	; 0x4f2 <_Z11digitalReadh+0x74>

		case A2:
		{
			result = PINC & (1 << PORTC2);
     4de:	26 b1       	in	r18, 0x06	; 6
     4e0:	24 70       	andi	r18, 0x04	; 4
     4e2:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4e4:	06 c0       	rjmp	.+12     	; 0x4f2 <_Z11digitalReadh+0x74>

		case A3:
		{
			result = PINC & (1 << PORTC3);
     4e6:	26 b1       	in	r18, 0x06	; 6
     4e8:	28 70       	andi	r18, 0x08	; 8
     4ea:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <_Z11digitalReadh+0x74>
	}
}

BOOL digitalRead(uint8_t pin)
{
	int result = 0;
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
		{
		}
		break;
	}

	return(result != 0);
     4f2:	81 e0       	ldi	r24, 0x01	; 1
     4f4:	23 2b       	or	r18, r19
     4f6:	09 f4       	brne	.+2      	; 0x4fa <_Z11digitalReadh+0x7c>
     4f8:	80 e0       	ldi	r24, 0x00	; 0
}
     4fa:	08 95       	ret

000004fc <_Z12digitalWritehh>:

void digitalWrite(uint8_t pin, uint8_t value)
{
	switch(pin)
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	fc 01       	movw	r30, r24
     500:	32 97       	sbiw	r30, 0x02	; 2
     502:	e0 31       	cpi	r30, 0x10	; 16
     504:	f1 05       	cpc	r31, r1
     506:	08 f0       	brcs	.+2      	; 0x50a <_Z12digitalWritehh+0xe>
     508:	4b c0       	rjmp	.+150    	; 0x5a0 <_Z12digitalWritehh+0xa4>
     50a:	ea 5a       	subi	r30, 0xAA	; 170
     50c:	ff 4f       	sbci	r31, 0xFF	; 255
     50e:	0c 94 3e 1c 	jmp	0x387c	; 0x387c <__tablejump2__>
	{
		case D2:
		{
			if(value)
     512:	66 23       	and	r22, r22
     514:	11 f0       	breq	.+4      	; 0x51a <_Z12digitalWritehh+0x1e>
			{
				PORTD  |= (1 << PORTD2);
     516:	5a 9a       	sbi	0x0b, 2	; 11
     518:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD2);
     51a:	5a 98       	cbi	0x0b, 2	; 11
     51c:	08 95       	ret
		}
		break;

		case D3:
		{
			if(value)
     51e:	66 23       	and	r22, r22
     520:	11 f0       	breq	.+4      	; 0x526 <_Z12digitalWritehh+0x2a>
			{
				PORTD  |= (1 << PORTD3);
     522:	5b 9a       	sbi	0x0b, 3	; 11
     524:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD3);
     526:	5b 98       	cbi	0x0b, 3	; 11
     528:	08 95       	ret
		}
		break;

		case D4:
		{
			if(value)
     52a:	66 23       	and	r22, r22
     52c:	11 f0       	breq	.+4      	; 0x532 <_Z12digitalWritehh+0x36>
			{
				PORTD  |= (1 << PORTD4);
     52e:	5c 9a       	sbi	0x0b, 4	; 11
     530:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD4);
     532:	5c 98       	cbi	0x0b, 4	; 11
     534:	08 95       	ret
		}
		break;

		case D5:
		{
			if(value)
     536:	66 23       	and	r22, r22
     538:	11 f0       	breq	.+4      	; 0x53e <_Z12digitalWritehh+0x42>
			{
				PORTD  |= (1 << PORTD5);
     53a:	5d 9a       	sbi	0x0b, 5	; 11
     53c:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD5);
     53e:	5d 98       	cbi	0x0b, 5	; 11
     540:	08 95       	ret
		}
		break;

		case D6:
		{
			if(value)
     542:	66 23       	and	r22, r22
     544:	11 f0       	breq	.+4      	; 0x54a <_Z12digitalWritehh+0x4e>
			{
				PORTD  |= (1 << PORTD6);
     546:	5e 9a       	sbi	0x0b, 6	; 11
     548:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD6);
     54a:	5e 98       	cbi	0x0b, 6	; 11
     54c:	08 95       	ret
		}
		break;

		case D7:
		{
			if(value)
     54e:	66 23       	and	r22, r22
     550:	11 f0       	breq	.+4      	; 0x556 <_Z12digitalWritehh+0x5a>
			{
				PORTD  |= (1 << PORTD7);
     552:	5f 9a       	sbi	0x0b, 7	; 11
     554:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD7);
     556:	5f 98       	cbi	0x0b, 7	; 11
     558:	08 95       	ret
		}
		break;

		case D9:
		{
			if(value)
     55a:	66 23       	and	r22, r22
     55c:	11 f0       	breq	.+4      	; 0x562 <_Z12digitalWritehh+0x66>
			{
				PORTB  |= (1 << PORTB1);
     55e:	29 9a       	sbi	0x05, 1	; 5
     560:	08 95       	ret
			}
			else
			{
				PORTB  &= ~(1 << PORTB1);
     562:	29 98       	cbi	0x05, 1	; 5
     564:	08 95       	ret
		}
		break;

		case D13:
		{
			if(value)
     566:	66 23       	and	r22, r22
     568:	11 f0       	breq	.+4      	; 0x56e <_Z12digitalWritehh+0x72>
			{
				PORTB  |= (1 << PORTB5);
     56a:	2d 9a       	sbi	0x05, 5	; 5
     56c:	08 95       	ret
			}
			else
			{
				PORTB  &= ~(1 << PORTB5);
     56e:	2d 98       	cbi	0x05, 5	; 5
     570:	08 95       	ret
		}
		break;

		case A0:
		{
			if(value)
     572:	66 23       	and	r22, r22
     574:	11 f0       	breq	.+4      	; 0x57a <_Z12digitalWritehh+0x7e>
			{
				PORTC  |= (1 << PORTC0);
     576:	40 9a       	sbi	0x08, 0	; 8
     578:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC0);
     57a:	40 98       	cbi	0x08, 0	; 8
     57c:	08 95       	ret
		}
		break;

		case A1:
		{
			if(value)
     57e:	66 23       	and	r22, r22
     580:	11 f0       	breq	.+4      	; 0x586 <_Z12digitalWritehh+0x8a>
			{
				PORTC  |= (1 << PORTC1);
     582:	41 9a       	sbi	0x08, 1	; 8
     584:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC1);
     586:	41 98       	cbi	0x08, 1	; 8
     588:	08 95       	ret
		}
		break;

		case A2:
		{
			if(value)
     58a:	66 23       	and	r22, r22
     58c:	11 f0       	breq	.+4      	; 0x592 <_Z12digitalWritehh+0x96>
			{
				PORTC  |= (1 << PORTC2);
     58e:	42 9a       	sbi	0x08, 2	; 8
     590:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC2);
     592:	42 98       	cbi	0x08, 2	; 8
     594:	08 95       	ret
		}
		break;

		case A3:
		{
			if(value)
     596:	66 23       	and	r22, r22
     598:	11 f0       	breq	.+4      	; 0x59e <_Z12digitalWritehh+0xa2>
			{
				PORTC  |= (1 << PORTC3);
     59a:	43 9a       	sbi	0x08, 3	; 8
     59c:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC3);
     59e:	43 98       	cbi	0x08, 3	; 8
     5a0:	08 95       	ret

000005a2 <_ZN8GoertzelC1Eff>:
int _index = 0;
bool _samplesReady = false;

int* testData;

Goertzel::Goertzel(float N, float sampling_frequency)
     5a2:	ef 92       	push	r14
     5a4:	ff 92       	push	r15
     5a6:	0f 93       	push	r16
     5a8:	1f 93       	push	r17
     5aa:	cf 93       	push	r28
     5ac:	df 93       	push	r29
     5ae:	e4 2e       	mov	r14, r20
     5b0:	f5 2e       	mov	r15, r21
     5b2:	d6 2f       	mov	r29, r22
     5b4:	c7 2f       	mov	r28, r23
{
	_SAMPLING_FREQUENCY = sampling_frequency;   /*on 16mhz, ~8928.57142857143, on 8mhz ~44444 */
     5b6:	00 93 6b 03 	sts	0x036B, r16	; 0x80036b <_SAMPLING_FREQUENCY>
     5ba:	10 93 6c 03 	sts	0x036C, r17	; 0x80036c <_SAMPLING_FREQUENCY+0x1>
     5be:	20 93 6d 03 	sts	0x036D, r18	; 0x80036d <_SAMPLING_FREQUENCY+0x2>
     5c2:	30 93 6e 03 	sts	0x036E, r19	; 0x80036e <_SAMPLING_FREQUENCY+0x3>
	_N = CLAMP(100, N, MAXN);
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	41 e5       	ldi	r20, 0x51	; 81
     5cc:	53 e4       	ldi	r21, 0x43	; 67
     5ce:	6e 2d       	mov	r22, r14
     5d0:	7f 2d       	mov	r23, r15
     5d2:	8d 2f       	mov	r24, r29
     5d4:	9c 2f       	mov	r25, r28
     5d6:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__gesf2>
     5da:	18 16       	cp	r1, r24
     5dc:	6c f0       	brlt	.+26     	; 0x5f8 <_ZN8GoertzelC1Eff+0x56>
     5de:	20 e0       	ldi	r18, 0x00	; 0
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	48 ec       	ldi	r20, 0xC8	; 200
     5e4:	52 e4       	ldi	r21, 0x42	; 66
     5e6:	6e 2d       	mov	r22, r14
     5e8:	7f 2d       	mov	r23, r15
     5ea:	8d 2f       	mov	r24, r29
     5ec:	9c 2f       	mov	r25, r28
     5ee:	0e 94 77 19 	call	0x32ee	; 0x32ee <__cmpsf2>
     5f2:	88 23       	and	r24, r24
     5f4:	34 f0       	brlt	.+12     	; 0x602 <_ZN8GoertzelC1Eff+0x60>
     5f6:	09 c0       	rjmp	.+18     	; 0x60a <_ZN8GoertzelC1Eff+0x68>
     5f8:	e1 2c       	mov	r14, r1
     5fa:	f1 2c       	mov	r15, r1
     5fc:	d1 e5       	ldi	r29, 0x51	; 81
     5fe:	c3 e4       	ldi	r28, 0x43	; 67
     600:	04 c0       	rjmp	.+8      	; 0x60a <_ZN8GoertzelC1Eff+0x68>
     602:	e1 2c       	mov	r14, r1
     604:	f1 2c       	mov	r15, r1
     606:	d8 ec       	ldi	r29, 0xC8	; 200
     608:	c2 e4       	ldi	r28, 0x42	; 66
     60a:	6e 2d       	mov	r22, r14
     60c:	7f 2d       	mov	r23, r15
     60e:	8d 2f       	mov	r24, r29
     610:	9c 2f       	mov	r25, r28
     612:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <__fixsfsi>
     616:	70 93 66 03 	sts	0x0366, r23	; 0x800366 <_N+0x1>
     61a:	60 93 65 03 	sts	0x0365, r22	; 0x800365 <_N>
	testData = (int*)malloc(_N * sizeof(int));
     61e:	cb 01       	movw	r24, r22
     620:	88 0f       	add	r24, r24
     622:	99 1f       	adc	r25, r25
     624:	0e 94 73 1c 	call	0x38e6	; 0x38e6 <malloc>
     628:	90 93 55 03 	sts	0x0355, r25	; 0x800355 <__data_end+0x1>
     62c:	80 93 54 03 	sts	0x0354, r24	; 0x800354 <__data_end>
}
     630:	df 91       	pop	r29
     632:	cf 91       	pop	r28
     634:	1f 91       	pop	r17
     636:	0f 91       	pop	r16
     638:	ff 90       	pop	r15
     63a:	ef 90       	pop	r14
     63c:	08 95       	ret

0000063e <_ZN8GoertzelD1Ev>:

Goertzel::~Goertzel()
{
	free(testData);
     63e:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <__data_end>
     642:	90 91 55 03 	lds	r25, 0x0355	; 0x800355 <__data_end+0x1>
     646:	0e 94 0b 1d 	call	0x3a16	; 0x3a16 <free>
     64a:	08 95       	ret

0000064c <_ZN8Goertzel13ResetGoertzelEv>:
}

/* Call this routine before every "block" (size=N) of samples. */
void Goertzel::ResetGoertzel(void)
{
	Q2 = 0;
     64c:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <Q2>
     650:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <Q2+0x1>
     654:	10 92 5b 03 	sts	0x035B, r1	; 0x80035b <Q2+0x2>
     658:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <Q2+0x3>
	Q1 = 0;
     65c:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <Q1>
     660:	10 92 5e 03 	sts	0x035E, r1	; 0x80035e <Q1+0x1>
     664:	10 92 5f 03 	sts	0x035F, r1	; 0x80035f <Q1+0x2>
     668:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <Q1+0x3>
	_samplesReady = false;
     66c:	10 92 56 03 	sts	0x0356, r1	; 0x800356 <_samplesReady>
     670:	08 95       	ret

00000672 <_ZN8Goertzel18SetTargetFrequencyEf>:
{
	free(testData);
}

void Goertzel::SetTargetFrequency(float target_frequency)
{
     672:	8f 92       	push	r8
     674:	9f 92       	push	r9
     676:	af 92       	push	r10
     678:	bf 92       	push	r11
     67a:	cf 92       	push	r12
     67c:	df 92       	push	r13
     67e:	ef 92       	push	r14
     680:	ff 92       	push	r15
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	ec 01       	movw	r28, r24
     688:	4a 01       	movw	r8, r20
     68a:	5b 01       	movw	r10, r22
	float floatN = (float)_N;
     68c:	60 91 65 03 	lds	r22, 0x0365	; 0x800365 <_N>
     690:	70 91 66 03 	lds	r23, 0x0366	; 0x800366 <_N+0x1>
     694:	07 2e       	mov	r0, r23
     696:	00 0c       	add	r0, r0
     698:	88 0b       	sbc	r24, r24
     69a:	99 0b       	sbc	r25, r25
     69c:	0e 94 2b 1a 	call	0x3456	; 0x3456 <__floatsisf>
     6a0:	6b 01       	movw	r12, r22
     6a2:	7c 01       	movw	r14, r24

	_TARGET_FREQUENCY = target_frequency;   /*should be integer of SAMPLING_RATE/N */
     6a4:	80 92 67 03 	sts	0x0367, r8	; 0x800367 <_TARGET_FREQUENCY>
     6a8:	90 92 68 03 	sts	0x0368, r9	; 0x800368 <_TARGET_FREQUENCY+0x1>
     6ac:	a0 92 69 03 	sts	0x0369, r10	; 0x800369 <_TARGET_FREQUENCY+0x2>
     6b0:	b0 92 6a 03 	sts	0x036A, r11	; 0x80036a <_TARGET_FREQUENCY+0x3>
	int k = (int)(0.5 + ((floatN * _TARGET_FREQUENCY) / _SAMPLING_FREQUENCY));
	float w = (2.0 * PI * k) / floatN;
	g_coeff = 2.0 * cos(w);
     6b4:	a5 01       	movw	r20, r10
     6b6:	94 01       	movw	r18, r8
     6b8:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
     6bc:	20 91 6b 03 	lds	r18, 0x036B	; 0x80036b <_SAMPLING_FREQUENCY>
     6c0:	30 91 6c 03 	lds	r19, 0x036C	; 0x80036c <_SAMPLING_FREQUENCY+0x1>
     6c4:	40 91 6d 03 	lds	r20, 0x036D	; 0x80036d <_SAMPLING_FREQUENCY+0x2>
     6c8:	50 91 6e 03 	lds	r21, 0x036E	; 0x80036e <_SAMPLING_FREQUENCY+0x3>
     6cc:	0e 94 81 19 	call	0x3302	; 0x3302 <__divsf3>
     6d0:	20 e0       	ldi	r18, 0x00	; 0
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	40 e0       	ldi	r20, 0x00	; 0
     6d6:	5f e3       	ldi	r21, 0x3F	; 63
     6d8:	0e 94 0b 19 	call	0x3216	; 0x3216 <__addsf3>
     6dc:	0e 94 f3 19 	call	0x33e6	; 0x33e6 <__fixsfsi>
     6e0:	07 2e       	mov	r0, r23
     6e2:	00 0c       	add	r0, r0
     6e4:	88 0b       	sbc	r24, r24
     6e6:	99 0b       	sbc	r25, r25
     6e8:	0e 94 2b 1a 	call	0x3456	; 0x3456 <__floatsisf>
     6ec:	2b ed       	ldi	r18, 0xDB	; 219
     6ee:	3f e0       	ldi	r19, 0x0F	; 15
     6f0:	49 ec       	ldi	r20, 0xC9	; 201
     6f2:	50 e4       	ldi	r21, 0x40	; 64
     6f4:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
     6f8:	a7 01       	movw	r20, r14
     6fa:	96 01       	movw	r18, r12
     6fc:	0e 94 81 19 	call	0x3302	; 0x3302 <__divsf3>
     700:	0e 94 7c 19 	call	0x32f8	; 0x32f8 <cos>
     704:	9b 01       	movw	r18, r22
     706:	ac 01       	movw	r20, r24
     708:	0e 94 0b 19 	call	0x3216	; 0x3216 <__addsf3>
     70c:	60 93 61 03 	sts	0x0361, r22	; 0x800361 <g_coeff>
     710:	70 93 62 03 	sts	0x0362, r23	; 0x800362 <g_coeff+0x1>
     714:	80 93 63 03 	sts	0x0363, r24	; 0x800363 <g_coeff+0x2>
     718:	90 93 64 03 	sts	0x0364, r25	; 0x800364 <g_coeff+0x3>
	ResetGoertzel();
     71c:	ce 01       	movw	r24, r28
     71e:	0e 94 26 03 	call	0x64c	; 0x64c <_ZN8Goertzel13ResetGoertzelEv>
}
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	ff 90       	pop	r15
     728:	ef 90       	pop	r14
     72a:	df 90       	pop	r13
     72c:	cf 90       	pop	r12
     72e:	bf 90       	pop	r11
     730:	af 90       	pop	r10
     732:	9f 90       	pop	r9
     734:	8f 90       	pop	r8
     736:	08 95       	ret

00000738 <_ZN8Goertzel13ProcessSampleEi>:
	_samplesReady = false;
}

/* Call this routine for every sample. */
void Goertzel::ProcessSample(int sample)
{
     738:	8f 92       	push	r8
     73a:	9f 92       	push	r9
     73c:	af 92       	push	r10
     73e:	bf 92       	push	r11
     740:	cf 92       	push	r12
     742:	df 92       	push	r13
     744:	ef 92       	push	r14
     746:	ff 92       	push	r15
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	eb 01       	movw	r28, r22
	float Q0 = g_coeff * Q1 - Q2 + (float)(sample - ADCCENTER);
     74e:	c0 90 5d 03 	lds	r12, 0x035D	; 0x80035d <Q1>
     752:	d0 90 5e 03 	lds	r13, 0x035E	; 0x80035e <Q1+0x1>
     756:	e0 90 5f 03 	lds	r14, 0x035F	; 0x80035f <Q1+0x2>
     75a:	f0 90 60 03 	lds	r15, 0x0360	; 0x800360 <Q1+0x3>
     75e:	20 91 61 03 	lds	r18, 0x0361	; 0x800361 <g_coeff>
     762:	30 91 62 03 	lds	r19, 0x0362	; 0x800362 <g_coeff+0x1>
     766:	40 91 63 03 	lds	r20, 0x0363	; 0x800363 <g_coeff+0x2>
     76a:	50 91 64 03 	lds	r21, 0x0364	; 0x800364 <g_coeff+0x3>
     76e:	c7 01       	movw	r24, r14
     770:	b6 01       	movw	r22, r12
     772:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
     776:	20 91 59 03 	lds	r18, 0x0359	; 0x800359 <Q2>
     77a:	30 91 5a 03 	lds	r19, 0x035A	; 0x80035a <Q2+0x1>
     77e:	40 91 5b 03 	lds	r20, 0x035B	; 0x80035b <Q2+0x2>
     782:	50 91 5c 03 	lds	r21, 0x035C	; 0x80035c <Q2+0x3>
     786:	0e 94 0a 19 	call	0x3214	; 0x3214 <__subsf3>
     78a:	4b 01       	movw	r8, r22
     78c:	5c 01       	movw	r10, r24
     78e:	be 01       	movw	r22, r28
     790:	72 50       	subi	r23, 0x02	; 2
     792:	07 2e       	mov	r0, r23
     794:	00 0c       	add	r0, r0
     796:	88 0b       	sbc	r24, r24
     798:	99 0b       	sbc	r25, r25
     79a:	0e 94 2b 1a 	call	0x3456	; 0x3456 <__floatsisf>
     79e:	9b 01       	movw	r18, r22
     7a0:	ac 01       	movw	r20, r24
     7a2:	c5 01       	movw	r24, r10
     7a4:	b4 01       	movw	r22, r8
     7a6:	0e 94 0b 19 	call	0x3216	; 0x3216 <__addsf3>

	Q2 = Q1;
     7aa:	c0 92 59 03 	sts	0x0359, r12	; 0x800359 <Q2>
     7ae:	d0 92 5a 03 	sts	0x035A, r13	; 0x80035a <Q2+0x1>
     7b2:	e0 92 5b 03 	sts	0x035B, r14	; 0x80035b <Q2+0x2>
     7b6:	f0 92 5c 03 	sts	0x035C, r15	; 0x80035c <Q2+0x3>
	Q1 = Q0;
     7ba:	60 93 5d 03 	sts	0x035D, r22	; 0x80035d <Q1>
     7be:	70 93 5e 03 	sts	0x035E, r23	; 0x80035e <Q1+0x1>
     7c2:	80 93 5f 03 	sts	0x035F, r24	; 0x80035f <Q1+0x2>
     7c6:	90 93 60 03 	sts	0x0360, r25	; 0x800360 <Q1+0x3>
}
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	ff 90       	pop	r15
     7d0:	ef 90       	pop	r14
     7d2:	df 90       	pop	r13
     7d4:	cf 90       	pop	r12
     7d6:	bf 90       	pop	r11
     7d8:	af 90       	pop	r10
     7da:	9f 90       	pop	r9
     7dc:	8f 90       	pop	r8
     7de:	08 95       	ret

000007e0 <_ZN8Goertzel9DataPointEi>:

bool Goertzel::DataPoint(int data)
{
	if(_samplesReady)
     7e0:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <_samplesReady>
     7e4:	81 11       	cpse	r24, r1
     7e6:	27 c0       	rjmp	.+78     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
	{
		return(_samplesReady);
	}

	testData[_index] = data;
     7e8:	e0 91 57 03 	lds	r30, 0x0357	; 0x800357 <_index>
     7ec:	f0 91 58 03 	lds	r31, 0x0358	; 0x800358 <_index+0x1>
     7f0:	ee 0f       	add	r30, r30
     7f2:	ff 1f       	adc	r31, r31
     7f4:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <__data_end>
     7f8:	90 91 55 03 	lds	r25, 0x0355	; 0x800355 <__data_end+0x1>
     7fc:	e8 0f       	add	r30, r24
     7fe:	f9 1f       	adc	r31, r25
     800:	71 83       	std	Z+1, r23	; 0x01
     802:	60 83       	st	Z, r22
	_index++;
     804:	80 91 57 03 	lds	r24, 0x0357	; 0x800357 <_index>
     808:	90 91 58 03 	lds	r25, 0x0358	; 0x800358 <_index+0x1>
     80c:	01 96       	adiw	r24, 0x01	; 1
     80e:	90 93 58 03 	sts	0x0358, r25	; 0x800358 <_index+0x1>
     812:	80 93 57 03 	sts	0x0357, r24	; 0x800357 <_index>
	if(_index >= _N)
     816:	20 91 65 03 	lds	r18, 0x0365	; 0x800365 <_N>
     81a:	30 91 66 03 	lds	r19, 0x0366	; 0x800366 <_N+0x1>
     81e:	82 17       	cp	r24, r18
     820:	93 07       	cpc	r25, r19
     822:	3c f0       	brlt	.+14     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
	{
		_index = 0;
     824:	10 92 58 03 	sts	0x0358, r1	; 0x800358 <_index+0x1>
     828:	10 92 57 03 	sts	0x0357, r1	; 0x800357 <_index>
		_samplesReady = true;
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	80 93 56 03 	sts	0x0356, r24	; 0x800356 <_samplesReady>
	}

	return(_samplesReady);
     832:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <_samplesReady>
}
     836:	08 95       	ret

00000838 <_ZN8Goertzel12SamplesReadyEv>:

bool Goertzel::SamplesReady(void)
{
	return(_samplesReady);
}
     838:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <_samplesReady>
     83c:	08 95       	ret

0000083e <_ZN8Goertzel10Magnitude2Ev>:

float Goertzel::Magnitude2()
{
     83e:	4f 92       	push	r4
     840:	5f 92       	push	r5
     842:	6f 92       	push	r6
     844:	7f 92       	push	r7
     846:	8f 92       	push	r8
     848:	9f 92       	push	r9
     84a:	af 92       	push	r10
     84c:	bf 92       	push	r11
     84e:	cf 92       	push	r12
     850:	df 92       	push	r13
     852:	ef 92       	push	r14
     854:	ff 92       	push	r15
     856:	0f 93       	push	r16
     858:	1f 93       	push	r17
     85a:	cf 93       	push	r28
     85c:	df 93       	push	r29
     85e:	8c 01       	movw	r16, r24
	float magnitude2;

	/* Process the samples. */
	for(int index = 0; index < _N; index++)
     860:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <_N>
     864:	90 91 66 03 	lds	r25, 0x0366	; 0x800366 <_N+0x1>
     868:	18 16       	cp	r1, r24
     86a:	19 06       	cpc	r1, r25
     86c:	c4 f4       	brge	.+48     	; 0x89e <_ZN8Goertzel10Magnitude2Ev+0x60>
     86e:	c0 e0       	ldi	r28, 0x00	; 0
     870:	d0 e0       	ldi	r29, 0x00	; 0
	{
		ProcessSample(testData[index]);
     872:	ce 01       	movw	r24, r28
     874:	88 0f       	add	r24, r24
     876:	99 1f       	adc	r25, r25
     878:	e0 91 54 03 	lds	r30, 0x0354	; 0x800354 <__data_end>
     87c:	f0 91 55 03 	lds	r31, 0x0355	; 0x800355 <__data_end+0x1>
     880:	e8 0f       	add	r30, r24
     882:	f9 1f       	adc	r31, r25
     884:	60 81       	ld	r22, Z
     886:	71 81       	ldd	r23, Z+1	; 0x01
     888:	c8 01       	movw	r24, r16
     88a:	0e 94 9c 03 	call	0x738	; 0x738 <_ZN8Goertzel13ProcessSampleEi>
float Goertzel::Magnitude2()
{
	float magnitude2;

	/* Process the samples. */
	for(int index = 0; index < _N; index++)
     88e:	21 96       	adiw	r28, 0x01	; 1
     890:	80 91 65 03 	lds	r24, 0x0365	; 0x800365 <_N>
     894:	90 91 66 03 	lds	r25, 0x0366	; 0x800366 <_N+0x1>
     898:	c8 17       	cp	r28, r24
     89a:	d9 07       	cpc	r29, r25
     89c:	54 f3       	brlt	.-44     	; 0x872 <_ZN8Goertzel10Magnitude2Ev+0x34>
	{
		ProcessSample(testData[index]);
	}

	magnitude2 = Q1 * Q1 + Q2 * Q2 - g_coeff * Q1 * Q2;
     89e:	80 90 5d 03 	lds	r8, 0x035D	; 0x80035d <Q1>
     8a2:	90 90 5e 03 	lds	r9, 0x035E	; 0x80035e <Q1+0x1>
     8a6:	a0 90 5f 03 	lds	r10, 0x035F	; 0x80035f <Q1+0x2>
     8aa:	b0 90 60 03 	lds	r11, 0x0360	; 0x800360 <Q1+0x3>
     8ae:	c0 90 59 03 	lds	r12, 0x0359	; 0x800359 <Q2>
     8b2:	d0 90 5a 03 	lds	r13, 0x035A	; 0x80035a <Q2+0x1>
     8b6:	e0 90 5b 03 	lds	r14, 0x035B	; 0x80035b <Q2+0x2>
     8ba:	f0 90 5c 03 	lds	r15, 0x035C	; 0x80035c <Q2+0x3>
     8be:	a5 01       	movw	r20, r10
     8c0:	94 01       	movw	r18, r8
     8c2:	c5 01       	movw	r24, r10
     8c4:	b4 01       	movw	r22, r8
     8c6:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
     8ca:	2b 01       	movw	r4, r22
     8cc:	3c 01       	movw	r6, r24
     8ce:	a7 01       	movw	r20, r14
     8d0:	96 01       	movw	r18, r12
     8d2:	c7 01       	movw	r24, r14
     8d4:	b6 01       	movw	r22, r12
     8d6:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
     8da:	9b 01       	movw	r18, r22
     8dc:	ac 01       	movw	r20, r24
     8de:	c3 01       	movw	r24, r6
     8e0:	b2 01       	movw	r22, r4
     8e2:	0e 94 0b 19 	call	0x3216	; 0x3216 <__addsf3>
     8e6:	2b 01       	movw	r4, r22
     8e8:	3c 01       	movw	r6, r24
     8ea:	20 91 61 03 	lds	r18, 0x0361	; 0x800361 <g_coeff>
     8ee:	30 91 62 03 	lds	r19, 0x0362	; 0x800362 <g_coeff+0x1>
     8f2:	40 91 63 03 	lds	r20, 0x0363	; 0x800363 <g_coeff+0x2>
     8f6:	50 91 64 03 	lds	r21, 0x0364	; 0x800364 <g_coeff+0x3>
     8fa:	c5 01       	movw	r24, r10
     8fc:	b4 01       	movw	r22, r8
     8fe:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
     902:	a7 01       	movw	r20, r14
     904:	96 01       	movw	r18, r12
     906:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
     90a:	9b 01       	movw	r18, r22
     90c:	ac 01       	movw	r20, r24
     90e:	c3 01       	movw	r24, r6
     910:	b2 01       	movw	r22, r4
     912:	0e 94 0a 19 	call	0x3214	; 0x3214 <__subsf3>
     916:	6b 01       	movw	r12, r22
     918:	7c 01       	movw	r14, r24

	ResetGoertzel();
     91a:	c8 01       	movw	r24, r16
     91c:	0e 94 26 03 	call	0x64c	; 0x64c <_ZN8Goertzel13ResetGoertzelEv>
	return( magnitude2);
}
     920:	c7 01       	movw	r24, r14
     922:	b6 01       	movw	r22, r12
     924:	df 91       	pop	r29
     926:	cf 91       	pop	r28
     928:	1f 91       	pop	r17
     92a:	0f 91       	pop	r16
     92c:	ff 90       	pop	r15
     92e:	ef 90       	pop	r14
     930:	df 90       	pop	r13
     932:	cf 90       	pop	r12
     934:	bf 90       	pop	r11
     936:	af 90       	pop	r10
     938:	9f 90       	pop	r9
     93a:	8f 90       	pop	r8
     93c:	7f 90       	pop	r7
     93e:	6f 90       	pop	r6
     940:	5f 90       	pop	r5
     942:	4f 90       	pop	r4
     944:	08 95       	ret

00000946 <_Z16nextFullTxBufferv>:

void lb_send_value(uint16_t value, char* label)
{
	sprintf(g_tempMsgBuff, "> %s=%d%s", label, value, lineTerm);
	linkbus_send_text(g_tempMsgBuff);
}
     946:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <_ZZ16nextFullTxBuffervE11bufferIndex>
     94a:	94 e0       	ldi	r25, 0x04	; 4
     94c:	59 e2       	ldi	r21, 0x29	; 41
     94e:	28 2f       	mov	r18, r24
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	52 9f       	mul	r21, r18
     954:	f0 01       	movw	r30, r0
     956:	53 9f       	mul	r21, r19
     958:	f0 0d       	add	r31, r0
     95a:	11 24       	eor	r1, r1
     95c:	eb 54       	subi	r30, 0x4B	; 75
     95e:	fc 4f       	sbci	r31, 0xFC	; 252
     960:	40 81       	ld	r20, Z
     962:	41 11       	cpse	r20, r1
     964:	0c c0       	rjmp	.+24     	; 0x97e <_Z16nextFullTxBufferv+0x38>
     966:	91 50       	subi	r25, 0x01	; 1
     968:	29 f0       	breq	.+10     	; 0x974 <_Z16nextFullTxBufferv+0x2e>
     96a:	8f 5f       	subi	r24, 0xFF	; 255
     96c:	84 30       	cpi	r24, 0x04	; 4
     96e:	78 f3       	brcs	.-34     	; 0x94e <_Z16nextFullTxBufferv+0x8>
     970:	80 e0       	ldi	r24, 0x00	; 0
     972:	ed cf       	rjmp	.-38     	; 0x94e <_Z16nextFullTxBufferv+0x8>
     974:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <_ZZ16nextFullTxBuffervE11bufferIndex>
     978:	80 e0       	ldi	r24, 0x00	; 0
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	08 95       	ret
     97e:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <_ZZ16nextFullTxBuffervE11bufferIndex>
     982:	49 e2       	ldi	r20, 0x29	; 41
     984:	42 9f       	mul	r20, r18
     986:	c0 01       	movw	r24, r0
     988:	43 9f       	mul	r20, r19
     98a:	90 0d       	add	r25, r0
     98c:	11 24       	eor	r1, r1
     98e:	8b 54       	subi	r24, 0x4B	; 75
     990:	9c 4f       	sbci	r25, 0xFC	; 252
     992:	08 95       	ret

00000994 <_Z17nextEmptyTxBufferv>:
     994:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <_ZZ17nextEmptyTxBuffervE11bufferIndex>
     998:	94 e0       	ldi	r25, 0x04	; 4
     99a:	59 e2       	ldi	r21, 0x29	; 41
     99c:	28 2f       	mov	r18, r24
     99e:	30 e0       	ldi	r19, 0x00	; 0
     9a0:	52 9f       	mul	r21, r18
     9a2:	f0 01       	movw	r30, r0
     9a4:	53 9f       	mul	r21, r19
     9a6:	f0 0d       	add	r31, r0
     9a8:	11 24       	eor	r1, r1
     9aa:	eb 54       	subi	r30, 0x4B	; 75
     9ac:	fc 4f       	sbci	r31, 0xFC	; 252
     9ae:	40 81       	ld	r20, Z
     9b0:	44 23       	and	r20, r20
     9b2:	61 f0       	breq	.+24     	; 0x9cc <_Z17nextEmptyTxBufferv+0x38>
     9b4:	91 50       	subi	r25, 0x01	; 1
     9b6:	29 f0       	breq	.+10     	; 0x9c2 <_Z17nextEmptyTxBufferv+0x2e>
     9b8:	8f 5f       	subi	r24, 0xFF	; 255
     9ba:	84 30       	cpi	r24, 0x04	; 4
     9bc:	78 f3       	brcs	.-34     	; 0x99c <_Z17nextEmptyTxBufferv+0x8>
     9be:	80 e0       	ldi	r24, 0x00	; 0
     9c0:	ed cf       	rjmp	.-38     	; 0x99c <_Z17nextEmptyTxBufferv+0x8>
     9c2:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <_ZZ17nextEmptyTxBuffervE11bufferIndex>
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	08 95       	ret
     9cc:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <_ZZ17nextEmptyTxBuffervE11bufferIndex>
     9d0:	49 e2       	ldi	r20, 0x29	; 41
     9d2:	42 9f       	mul	r20, r18
     9d4:	c0 01       	movw	r24, r0
     9d6:	43 9f       	mul	r20, r19
     9d8:	90 0d       	add	r25, r0
     9da:	11 24       	eor	r1, r1
     9dc:	8b 54       	subi	r24, 0x4B	; 75
     9de:	9c 4f       	sbci	r25, 0xFC	; 252
     9e0:	08 95       	ret

000009e2 <_Z17nextEmptyRxBufferv>:
     9e2:	80 91 70 03 	lds	r24, 0x0370	; 0x800370 <_ZZ17nextEmptyRxBuffervE11bufferIndex>
     9e6:	28 2f       	mov	r18, r24
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	91 e2       	ldi	r25, 0x21	; 33
     9ec:	89 9f       	mul	r24, r25
     9ee:	f0 01       	movw	r30, r0
     9f0:	11 24       	eor	r1, r1
     9f2:	ed 58       	subi	r30, 0x8D	; 141
     9f4:	fc 4f       	sbci	r31, 0xFC	; 252
     9f6:	41 81       	ldd	r20, Z+1	; 0x01
     9f8:	52 81       	ldd	r21, Z+2	; 0x02
     9fa:	45 2b       	or	r20, r21
     9fc:	a9 f0       	breq	.+42     	; 0xa28 <_Z17nextEmptyRxBufferv+0x46>
     9fe:	8f 5f       	subi	r24, 0xFF	; 255
     a00:	82 30       	cpi	r24, 0x02	; 2
     a02:	08 f0       	brcs	.+2      	; 0xa06 <_Z17nextEmptyRxBufferv+0x24>
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	28 2f       	mov	r18, r24
     a08:	30 e0       	ldi	r19, 0x00	; 0
     a0a:	91 e2       	ldi	r25, 0x21	; 33
     a0c:	89 9f       	mul	r24, r25
     a0e:	f0 01       	movw	r30, r0
     a10:	11 24       	eor	r1, r1
     a12:	ed 58       	subi	r30, 0x8D	; 141
     a14:	fc 4f       	sbci	r31, 0xFC	; 252
     a16:	41 81       	ldd	r20, Z+1	; 0x01
     a18:	52 81       	ldd	r21, Z+2	; 0x02
     a1a:	45 2b       	or	r20, r21
     a1c:	29 f0       	breq	.+10     	; 0xa28 <_Z17nextEmptyRxBufferv+0x46>
     a1e:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <_ZZ17nextEmptyRxBuffervE11bufferIndex>
     a22:	80 e0       	ldi	r24, 0x00	; 0
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	08 95       	ret
     a28:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <_ZZ17nextEmptyRxBuffervE11bufferIndex>
     a2c:	41 e2       	ldi	r20, 0x21	; 33
     a2e:	42 9f       	mul	r20, r18
     a30:	c0 01       	movw	r24, r0
     a32:	43 9f       	mul	r20, r19
     a34:	90 0d       	add	r25, r0
     a36:	11 24       	eor	r1, r1
     a38:	8d 58       	subi	r24, 0x8D	; 141
     a3a:	9c 4f       	sbci	r25, 0xFC	; 252
     a3c:	08 95       	ret

00000a3e <_Z16nextFullRxBufferv>:
     a3e:	80 91 6f 03 	lds	r24, 0x036F	; 0x80036f <_ZZ16nextFullRxBuffervE11bufferIndex>
     a42:	28 2f       	mov	r18, r24
     a44:	30 e0       	ldi	r19, 0x00	; 0
     a46:	91 e2       	ldi	r25, 0x21	; 33
     a48:	89 9f       	mul	r24, r25
     a4a:	f0 01       	movw	r30, r0
     a4c:	11 24       	eor	r1, r1
     a4e:	ed 58       	subi	r30, 0x8D	; 141
     a50:	fc 4f       	sbci	r31, 0xFC	; 252
     a52:	41 81       	ldd	r20, Z+1	; 0x01
     a54:	52 81       	ldd	r21, Z+2	; 0x02
     a56:	45 2b       	or	r20, r21
     a58:	a9 f4       	brne	.+42     	; 0xa84 <_Z16nextFullRxBufferv+0x46>
     a5a:	8f 5f       	subi	r24, 0xFF	; 255
     a5c:	82 30       	cpi	r24, 0x02	; 2
     a5e:	08 f0       	brcs	.+2      	; 0xa62 <_Z16nextFullRxBufferv+0x24>
     a60:	80 e0       	ldi	r24, 0x00	; 0
     a62:	28 2f       	mov	r18, r24
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	91 e2       	ldi	r25, 0x21	; 33
     a68:	89 9f       	mul	r24, r25
     a6a:	f0 01       	movw	r30, r0
     a6c:	11 24       	eor	r1, r1
     a6e:	ed 58       	subi	r30, 0x8D	; 141
     a70:	fc 4f       	sbci	r31, 0xFC	; 252
     a72:	41 81       	ldd	r20, Z+1	; 0x01
     a74:	52 81       	ldd	r21, Z+2	; 0x02
     a76:	45 2b       	or	r20, r21
     a78:	29 f4       	brne	.+10     	; 0xa84 <_Z16nextFullRxBufferv+0x46>
     a7a:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <_ZZ16nextFullRxBuffervE11bufferIndex>
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	08 95       	ret
     a84:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <_ZZ16nextFullRxBuffervE11bufferIndex>
     a88:	41 e2       	ldi	r20, 0x21	; 33
     a8a:	42 9f       	mul	r20, r18
     a8c:	c0 01       	movw	r24, r0
     a8e:	43 9f       	mul	r20, r19
     a90:	90 0d       	add	r25, r0
     a92:	11 24       	eor	r1, r1
     a94:	8d 58       	subi	r24, 0x8D	; 141
     a96:	9c 4f       	sbci	r25, 0xFC	; 252
     a98:	08 95       	ret

00000a9a <_Z16linkbus_start_txv>:
     a9a:	90 91 59 04 	lds	r25, 0x0459	; 0x800459 <_ZL17linkbus_tx_active>
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	91 11       	cpse	r25, r1
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	91 11       	cpse	r25, r1
     aa6:	08 c0       	rjmp	.+16     	; 0xab8 <_Z16linkbus_start_txv+0x1e>
     aa8:	91 e0       	ldi	r25, 0x01	; 1
     aaa:	90 93 59 04 	sts	0x0459, r25	; 0x800459 <_ZL17linkbus_tx_active>
     aae:	e1 ec       	ldi	r30, 0xC1	; 193
     ab0:	f0 e0       	ldi	r31, 0x00	; 0
     ab2:	90 81       	ld	r25, Z
     ab4:	90 62       	ori	r25, 0x20	; 32
     ab6:	90 83       	st	Z, r25
     ab8:	08 95       	ret

00000aba <_Z14linkbus_end_txv>:
     aba:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <_ZL17linkbus_tx_active>
     abe:	88 23       	and	r24, r24
     ac0:	39 f0       	breq	.+14     	; 0xad0 <_Z14linkbus_end_txv+0x16>
     ac2:	e1 ec       	ldi	r30, 0xC1	; 193
     ac4:	f0 e0       	ldi	r31, 0x00	; 0
     ac6:	80 81       	ld	r24, Z
     ac8:	8f 7d       	andi	r24, 0xDF	; 223
     aca:	80 83       	st	Z, r24
     acc:	10 92 59 04 	sts	0x0459, r1	; 0x800459 <_ZL17linkbus_tx_active>
     ad0:	08 95       	ret

00000ad2 <_Z12linkbus_initm>:
     ad2:	9b 01       	movw	r18, r22
     ad4:	ac 01       	movw	r20, r24
     ad6:	82 e4       	ldi	r24, 0x42	; 66
     ad8:	e3 e7       	ldi	r30, 0x73	; 115
     ada:	f3 e0       	ldi	r31, 0x03	; 3
     adc:	df 01       	movw	r26, r30
     ade:	1d 92       	st	X+, r1
     ae0:	8a 95       	dec	r24
     ae2:	e9 f7       	brne	.-6      	; 0xade <_Z12linkbus_initm+0xc>
     ae4:	e5 eb       	ldi	r30, 0xB5	; 181
     ae6:	f3 e0       	ldi	r31, 0x03	; 3
     ae8:	10 82       	st	Z, r1
     aea:	11 a6       	std	Z+41, r1	; 0x29
     aec:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <_ZL9tx_buffer+0x52>
     af0:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <_ZL9tx_buffer+0x7b>
     af4:	60 e4       	ldi	r22, 0x40	; 64
     af6:	72 e4       	ldi	r23, 0x42	; 66
     af8:	8f e0       	ldi	r24, 0x0F	; 15
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	0e 94 fd 1b 	call	0x37fa	; 0x37fa <__udivmodsi4>
     b00:	21 50       	subi	r18, 0x01	; 1
     b02:	31 09       	sbc	r19, r1
     b04:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     b08:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     b0c:	88 e9       	ldi	r24, 0x98	; 152
     b0e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     b12:	8e e0       	ldi	r24, 0x0E	; 14
     b14:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     b18:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <_ZL14g_bus_disabled>
     b1c:	08 95       	ret

00000b1e <_Z17linkbus_send_textPc>:
     b1e:	0f 93       	push	r16
     b20:	1f 93       	push	r17
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <_ZL14g_bus_disabled>
     b2a:	21 11       	cpse	r18, r1
     b2c:	14 c0       	rjmp	.+40     	; 0xb56 <_Z17linkbus_send_textPc+0x38>
     b2e:	00 97       	sbiw	r24, 0x00	; 0
     b30:	a1 f0       	breq	.+40     	; 0xb5a <_Z17linkbus_send_textPc+0x3c>
     b32:	8c 01       	movw	r16, r24
     b34:	0e 94 ca 04 	call	0x994	; 0x994 <_Z17nextEmptyTxBufferv>
     b38:	00 97       	sbiw	r24, 0x00	; 0
     b3a:	b9 f4       	brne	.+46     	; 0xb6a <_Z17linkbus_send_textPc+0x4c>
     b3c:	c8 ec       	ldi	r28, 0xC8	; 200
     b3e:	d0 e0       	ldi	r29, 0x00	; 0
     b40:	02 c0       	rjmp	.+4      	; 0xb46 <_Z17linkbus_send_textPc+0x28>
     b42:	20 97       	sbiw	r28, 0x00	; 0
     b44:	61 f0       	breq	.+24     	; 0xb5e <_Z17linkbus_send_textPc+0x40>
     b46:	90 91 59 04 	lds	r25, 0x0459	; 0x800459 <_ZL17linkbus_tx_active>
     b4a:	99 23       	and	r25, r25
     b4c:	51 f0       	breq	.+20     	; 0xb62 <_Z17linkbus_send_textPc+0x44>
     b4e:	20 97       	sbiw	r28, 0x00	; 0
     b50:	d1 f0       	breq	.+52     	; 0xb86 <_Z17linkbus_send_textPc+0x68>
     b52:	21 97       	sbiw	r28, 0x01	; 1
     b54:	f8 cf       	rjmp	.-16     	; 0xb46 <_Z17linkbus_send_textPc+0x28>
     b56:	81 e0       	ldi	r24, 0x01	; 1
     b58:	1b c0       	rjmp	.+54     	; 0xb90 <_Z17linkbus_send_textPc+0x72>
     b5a:	81 e0       	ldi	r24, 0x01	; 1
     b5c:	19 c0       	rjmp	.+50     	; 0xb90 <_Z17linkbus_send_textPc+0x72>
     b5e:	81 e0       	ldi	r24, 0x01	; 1
     b60:	17 c0       	rjmp	.+46     	; 0xb90 <_Z17linkbus_send_textPc+0x72>
     b62:	0e 94 ca 04 	call	0x994	; 0x994 <_Z17nextEmptyTxBufferv>
     b66:	00 97       	sbiw	r24, 0x00	; 0
     b68:	61 f3       	breq	.-40     	; 0xb42 <_Z17linkbus_send_textPc+0x24>
     b6a:	1f 93       	push	r17
     b6c:	0f 93       	push	r16
     b6e:	9f 93       	push	r25
     b70:	8f 93       	push	r24
     b72:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     b76:	0e 94 4d 05 	call	0xa9a	; 0xa9a <_Z16linkbus_start_txv>
     b7a:	0f 90       	pop	r0
     b7c:	0f 90       	pop	r0
     b7e:	0f 90       	pop	r0
     b80:	0f 90       	pop	r0
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	05 c0       	rjmp	.+10     	; 0xb90 <_Z17linkbus_send_textPc+0x72>
     b86:	0e 94 ca 04 	call	0x994	; 0x994 <_Z17nextEmptyTxBufferv>
     b8a:	00 97       	sbiw	r24, 0x00	; 0
     b8c:	71 f7       	brne	.-36     	; 0xb6a <_Z17linkbus_send_textPc+0x4c>
     b8e:	81 e0       	ldi	r24, 0x01	; 1
     b90:	df 91       	pop	r29
     b92:	cf 91       	pop	r28
     b94:	1f 91       	pop	r17
     b96:	0f 91       	pop	r16
     b98:	08 95       	ret

00000b9a <_Z17lb_send_NewPromptv>:
     b9a:	85 e8       	ldi	r24, 0x85	; 133
     b9c:	92 e0       	ldi	r25, 0x02	; 2
     b9e:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z17linkbus_send_textPc>
     ba2:	81 11       	cpse	r24, r1
     ba4:	fa cf       	rjmp	.-12     	; 0xb9a <_Z17lb_send_NewPromptv>
     ba6:	08 95       	ret

00000ba8 <_Z15lb_send_NewLinev>:
     ba8:	88 e8       	ldi	r24, 0x88	; 136
     baa:	92 e0       	ldi	r25, 0x02	; 2
     bac:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z17linkbus_send_textPc>
     bb0:	08 95       	ret

00000bb2 <_Z12lb_echo_charh>:
     bb2:	ea e5       	ldi	r30, 0x5A	; 90
     bb4:	f4 e0       	ldi	r31, 0x04	; 4
     bb6:	80 83       	st	Z, r24
     bb8:	11 82       	std	Z+1, r1	; 0x01
     bba:	cf 01       	movw	r24, r30
     bbc:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z17linkbus_send_textPc>
     bc0:	08 95       	ret

00000bc2 <_Z14lb_send_stringPch>:
     bc2:	cf 93       	push	r28
     bc4:	00 97       	sbiw	r24, 0x00	; 0
     bc6:	19 f1       	breq	.+70     	; 0xc0e <_Z14lb_send_stringPch+0x4c>
     bc8:	fc 01       	movw	r30, r24
     bca:	01 90       	ld	r0, Z+
     bcc:	00 20       	and	r0, r0
     bce:	e9 f7       	brne	.-6      	; 0xbca <_Z14lb_send_stringPch+0x8>
     bd0:	31 97       	sbiw	r30, 0x01	; 1
     bd2:	e8 1b       	sub	r30, r24
     bd4:	f9 0b       	sbc	r31, r25
     bd6:	ba 97       	sbiw	r30, 0x2a	; 42
     bd8:	e0 f4       	brcc	.+56     	; 0xc12 <_Z14lb_send_stringPch+0x50>
     bda:	c6 2f       	mov	r28, r22
     bdc:	bc 01       	movw	r22, r24
     bde:	49 e2       	ldi	r20, 0x29	; 41
     be0:	50 e0       	ldi	r21, 0x00	; 0
     be2:	8a e5       	ldi	r24, 0x5A	; 90
     be4:	94 e0       	ldi	r25, 0x04	; 4
     be6:	0e 94 fc 1d 	call	0x3bf8	; 0x3bf8 <strncpy>
     bea:	cc 23       	and	r28, r28
     bec:	59 f0       	breq	.+22     	; 0xc04 <_Z14lb_send_stringPch+0x42>
     bee:	8a e5       	ldi	r24, 0x5A	; 90
     bf0:	94 e0       	ldi	r25, 0x04	; 4
     bf2:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z17linkbus_send_textPc>
     bf6:	81 11       	cpse	r24, r1
     bf8:	fa cf       	rjmp	.-12     	; 0xbee <_Z14lb_send_stringPch+0x2c>
     bfa:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <_ZL17linkbus_tx_active>
     bfe:	81 11       	cpse	r24, r1
     c00:	fc cf       	rjmp	.-8      	; 0xbfa <_Z14lb_send_stringPch+0x38>
     c02:	08 c0       	rjmp	.+16     	; 0xc14 <_Z14lb_send_stringPch+0x52>
     c04:	8a e5       	ldi	r24, 0x5A	; 90
     c06:	94 e0       	ldi	r25, 0x04	; 4
     c08:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z17linkbus_send_textPc>
     c0c:	03 c0       	rjmp	.+6      	; 0xc14 <_Z14lb_send_stringPch+0x52>
     c0e:	81 e0       	ldi	r24, 0x01	; 1
     c10:	01 c0       	rjmp	.+2      	; 0xc14 <_Z14lb_send_stringPch+0x52>
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	cf 91       	pop	r28
     c16:	08 95       	ret

00000c18 <_Z12lb_send_Helpv>:

/***********************************************************************
 * lb_send_Help(void)
 ************************************************************************/
void lb_send_Help(void)
{
     c18:	0f 93       	push	r16
     c1a:	1f 93       	push	r17
     c1c:	cf 93       	push	r28
     c1e:	df 93       	push	r29
	if(g_bus_disabled)
     c20:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_ZL14g_bus_disabled>
     c24:	81 11       	cpse	r24, r1
     c26:	37 c0       	rjmp	.+110    	; 0xc96 <_Z12lb_send_Helpv+0x7e>
	{
		return;
	}

	sprintf(g_tempMsgBuff, "\n*** %s Ver. %s ***", PRODUCT_NAME_LONG, SW_REVISION);
     c28:	8d ee       	ldi	r24, 0xED	; 237
     c2a:	91 e0       	ldi	r25, 0x01	; 1
     c2c:	9f 93       	push	r25
     c2e:	8f 93       	push	r24
     c30:	86 ef       	ldi	r24, 0xF6	; 246
     c32:	91 e0       	ldi	r25, 0x01	; 1
     c34:	9f 93       	push	r25
     c36:	8f 93       	push	r24
     c38:	8e ef       	ldi	r24, 0xFE	; 254
     c3a:	91 e0       	ldi	r25, 0x01	; 1
     c3c:	9f 93       	push	r25
     c3e:	8f 93       	push	r24
     c40:	8a e5       	ldi	r24, 0x5A	; 90
     c42:	94 e0       	ldi	r25, 0x04	; 4
     c44:	9f 93       	push	r25
     c46:	8f 93       	push	r24
     c48:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     c4c:	8d b7       	in	r24, 0x3d	; 61
     c4e:	9e b7       	in	r25, 0x3e	; 62
     c50:	08 96       	adiw	r24, 0x08	; 8
     c52:	0f b6       	in	r0, 0x3f	; 63
     c54:	f8 94       	cli
     c56:	9e bf       	out	0x3e, r25	; 62
     c58:	0f be       	out	0x3f, r0	; 63
     c5a:	8d bf       	out	0x3d, r24	; 61

	while(linkbus_send_text(g_tempMsgBuff))
     c5c:	8a e5       	ldi	r24, 0x5A	; 90
     c5e:	94 e0       	ldi	r25, 0x04	; 4
     c60:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z17linkbus_send_textPc>
     c64:	81 11       	cpse	r24, r1
     c66:	fa cf       	rjmp	.-12     	; 0xc5c <_Z12lb_send_Helpv+0x44>
/***********************************************************************
 * linkbusTxInProgress(void)
 ************************************************************************/
BOOL linkbusTxInProgress(void)
{
	return(linkbus_tx_active);
     c68:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <_ZL17linkbus_tx_active>

	while(linkbus_send_text(g_tempMsgBuff))
	{
		;
	}
	while(linkbusTxInProgress())
     c6c:	81 11       	cpse	r24, r1
     c6e:	fc cf       	rjmp	.-8      	; 0xc68 <_Z12lb_send_Helpv+0x50>
     c70:	c2 e1       	ldi	r28, 0x12	; 18
     c72:	d2 e0       	ldi	r29, 0x02	; 2
     c74:	05 e8       	ldi	r16, 0x85	; 133
     c76:	12 e0       	ldi	r17, 0x02	; 2
	}

	size_t n = sizeof(textHelp) / sizeof(textHelp[0]);
	for(uint8_t i = 0; i < n; i++)
	{
		while(linkbus_send_text((char*)textHelp[i]))
     c78:	ce 01       	movw	r24, r28
     c7a:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_Z17linkbus_send_textPc>
     c7e:	81 11       	cpse	r24, r1
     c80:	fb cf       	rjmp	.-10     	; 0xc78 <_Z12lb_send_Helpv+0x60>
/***********************************************************************
 * linkbusTxInProgress(void)
 ************************************************************************/
BOOL linkbusTxInProgress(void)
{
	return(linkbus_tx_active);
     c82:	80 91 59 04 	lds	r24, 0x0459	; 0x800459 <_ZL17linkbus_tx_active>
	{
		while(linkbus_send_text((char*)textHelp[i]))
		{
			;
		}
		while(linkbusTxInProgress())
     c86:	81 11       	cpse	r24, r1
     c88:	fc cf       	rjmp	.-8      	; 0xc82 <_Z12lb_send_Helpv+0x6a>
     c8a:	67 96       	adiw	r28, 0x17	; 23
	{
		;
	}

	size_t n = sizeof(textHelp) / sizeof(textHelp[0]);
	for(uint8_t i = 0; i < n; i++)
     c8c:	c0 17       	cp	r28, r16
     c8e:	d1 07       	cpc	r29, r17
     c90:	99 f7       	brne	.-26     	; 0xc78 <_Z12lb_send_Helpv+0x60>
		{
			;
		}
	}

	lb_send_NewLine();
     c92:	0e 94 d4 05 	call	0xba8	; 0xba8 <_Z15lb_send_NewLinev>
}
     c96:	df 91       	pop	r29
     c98:	cf 91       	pop	r28
     c9a:	1f 91       	pop	r17
     c9c:	0f 91       	pop	r16
     c9e:	08 95       	ret

00000ca0 <main>:
		g_audio_tone_state = ON;
	}
	else
	{
		OCR0A = DEFAULT_TONE_FREQUENCY;
		g_audio_tone_state = OFF;
     ca0:	80 e0       	ldi	r24, 0x00	; 0
     ca2:	0e 94 9d 13 	call	0x273a	; 0x273a <_Z20initializeEEPROMVarsh>
     ca6:	61 e0       	ldi	r22, 0x01	; 1
     ca8:	8d e0       	ldi	r24, 0x0D	; 13
     caa:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     cae:	60 e0       	ldi	r22, 0x00	; 0
     cb0:	8d e0       	ldi	r24, 0x0D	; 13
     cb2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
     cb6:	61 e0       	ldi	r22, 0x01	; 1
     cb8:	8a e0       	ldi	r24, 0x0A	; 10
     cba:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	8a e0       	ldi	r24, 0x0A	; 10
     cc2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
     cc6:	61 e0       	ldi	r22, 0x01	; 1
     cc8:	89 e0       	ldi	r24, 0x09	; 9
     cca:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     cce:	60 e0       	ldi	r22, 0x00	; 0
     cd0:	89 e0       	ldi	r24, 0x09	; 9
     cd2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
     cd6:	63 e0       	ldi	r22, 0x03	; 3
     cd8:	87 e0       	ldi	r24, 0x07	; 7
     cda:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     cde:	63 e0       	ldi	r22, 0x03	; 3
     ce0:	88 e0       	ldi	r24, 0x08	; 8
     ce2:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     ce6:	63 e0       	ldi	r22, 0x03	; 3
     ce8:	8a e0       	ldi	r24, 0x0A	; 10
     cea:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     cee:	63 e0       	ldi	r22, 0x03	; 3
     cf0:	8c e0       	ldi	r24, 0x0C	; 12
     cf2:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     cf6:	60 e0       	ldi	r22, 0x00	; 0
     cf8:	8e e0       	ldi	r24, 0x0E	; 14
     cfa:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     cfe:	63 e0       	ldi	r22, 0x03	; 3
     d00:	8f e0       	ldi	r24, 0x0F	; 15
     d02:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     d06:	63 e0       	ldi	r22, 0x03	; 3
     d08:	80 e1       	ldi	r24, 0x10	; 16
     d0a:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     d0e:	63 e0       	ldi	r22, 0x03	; 3
     d10:	81 e1       	ldi	r24, 0x11	; 17
     d12:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     d16:	63 e0       	ldi	r22, 0x03	; 3
     d18:	82 e1       	ldi	r24, 0x12	; 18
     d1a:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     d1e:	63 e0       	ldi	r22, 0x03	; 3
     d20:	83 e1       	ldi	r24, 0x13	; 19
     d22:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     d26:	60 e0       	ldi	r22, 0x00	; 0
     d28:	84 e1       	ldi	r24, 0x14	; 20
     d2a:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     d2e:	61 e0       	ldi	r22, 0x01	; 1
     d30:	8b e0       	ldi	r24, 0x0B	; 11
     d32:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
     d36:	60 e0       	ldi	r22, 0x00	; 0
     d38:	8b e0       	ldi	r24, 0x0B	; 11
     d3a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
     d3e:	ea e7       	ldi	r30, 0x7A	; 122
     d40:	f0 e0       	ldi	r31, 0x00	; 0
     d42:	10 82       	st	Z, r1
     d44:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
     d48:	ac e7       	ldi	r26, 0x7C	; 124
     d4a:	b0 e0       	ldi	r27, 0x00	; 0
     d4c:	8c 91       	ld	r24, X
     d4e:	86 60       	ori	r24, 0x06	; 6
     d50:	8c 93       	st	X, r24
     d52:	8c 91       	ld	r24, X
     d54:	80 64       	ori	r24, 0x40	; 64
     d56:	8c 93       	st	X, r24
     d58:	8c 91       	ld	r24, X
     d5a:	80 62       	ori	r24, 0x20	; 32
     d5c:	8c 93       	st	X, r24
     d5e:	80 81       	ld	r24, Z
     d60:	86 60       	ori	r24, 0x06	; 6
     d62:	80 83       	st	Z, r24
     d64:	80 81       	ld	r24, Z
     d66:	80 62       	ori	r24, 0x20	; 32
     d68:	80 83       	st	Z, r24
     d6a:	80 81       	ld	r24, Z
     d6c:	88 60       	ori	r24, 0x08	; 8
     d6e:	80 83       	st	Z, r24
     d70:	80 81       	ld	r24, Z
     d72:	80 68       	ori	r24, 0x80	; 128
     d74:	80 83       	st	Z, r24
     d76:	80 81       	ld	r24, Z
     d78:	80 64       	ori	r24, 0x40	; 64
     d7a:	80 83       	st	Z, r24
     d7c:	a0 eb       	ldi	r26, 0xB0	; 176
     d7e:	b0 e0       	ldi	r27, 0x00	; 0
     d80:	1c 92       	st	X, r1
     d82:	e1 eb       	ldi	r30, 0xB1	; 177
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	10 82       	st	Z, r1
     d88:	8c 91       	ld	r24, X
     d8a:	82 60       	ori	r24, 0x02	; 2
     d8c:	8c 93       	st	X, r24
     d8e:	80 81       	ld	r24, Z
     d90:	87 60       	ori	r24, 0x07	; 7
     d92:	80 83       	st	Z, r24
     d94:	8c e0       	ldi	r24, 0x0C	; 12
     d96:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
     d9a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     d9e:	e6 eb       	ldi	r30, 0xB6	; 182
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	80 81       	ld	r24, Z
     da4:	8f 7d       	andi	r24, 0xDF	; 223
     da6:	80 83       	st	Z, r24
     da8:	e0 e7       	ldi	r30, 0x70	; 112
     daa:	f0 e0       	ldi	r31, 0x00	; 0
     dac:	10 82       	st	Z, r1
     dae:	80 81       	ld	r24, Z
     db0:	84 60       	ori	r24, 0x04	; 4
     db2:	80 83       	st	Z, r24
     db4:	14 bc       	out	0x24, r1	; 36
     db6:	84 b5       	in	r24, 0x24	; 36
     db8:	82 60       	ori	r24, 0x02	; 2
     dba:	84 bd       	out	0x24, r24	; 36
     dbc:	15 bc       	out	0x25, r1	; 37
     dbe:	85 b5       	in	r24, 0x25	; 37
     dc0:	84 60       	ori	r24, 0x04	; 4
     dc2:	85 bd       	out	0x25, r24	; 37
     dc4:	8f e2       	ldi	r24, 0x2F	; 47
     dc6:	87 bd       	out	0x27, r24	; 39
     dc8:	ee e6       	ldi	r30, 0x6E	; 110
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	10 82       	st	Z, r1
     dce:	80 81       	ld	r24, Z
     dd0:	82 60       	ori	r24, 0x02	; 2
     dd2:	80 83       	st	Z, r24
     dd4:	ed e6       	ldi	r30, 0x6D	; 109
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	10 82       	st	Z, r1
     dda:	88 e0       	ldi	r24, 0x08	; 8
     ddc:	80 83       	st	Z, r24
     dde:	e8 e6       	ldi	r30, 0x68	; 104
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	10 82       	st	Z, r1
     de4:	84 e0       	ldi	r24, 0x04	; 4
     de6:	80 83       	st	Z, r24
     de8:	78 94       	sei
     dea:	60 e0       	ldi	r22, 0x00	; 0
     dec:	71 ee       	ldi	r23, 0xE1	; 225
     dee:	80 e0       	ldi	r24, 0x00	; 0
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	0e 94 69 05 	call	0xad2	; 0xad2 <_Z12linkbus_initm>
     df6:	60 e0       	ldi	r22, 0x00	; 0
     df8:	87 e2       	ldi	r24, 0x27	; 39
     dfa:	91 e0       	ldi	r25, 0x01	; 1
     dfc:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     e00:	61 e0       	ldi	r22, 0x01	; 1
     e02:	80 e3       	ldi	r24, 0x30	; 48
     e04:	91 e0       	ldi	r25, 0x01	; 1
     e06:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     e0a:	8d eb       	ldi	r24, 0xBD	; 189
     e0c:	94 e0       	ldi	r25, 0x04	; 4
     e0e:	9f 93       	push	r25
     e10:	8f 93       	push	r24
     e12:	80 e4       	ldi	r24, 0x40	; 64
     e14:	91 e0       	ldi	r25, 0x01	; 1
     e16:	9f 93       	push	r25
     e18:	8f 93       	push	r24
     e1a:	c1 ee       	ldi	r28, 0xE1	; 225
     e1c:	d4 e0       	ldi	r29, 0x04	; 4
     e1e:	df 93       	push	r29
     e20:	cf 93       	push	r28
     e22:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     e26:	61 e0       	ldi	r22, 0x01	; 1
     e28:	ce 01       	movw	r24, r28
     e2a:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     e2e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_ZL19g_clock_calibration>
     e32:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <_ZL19g_clock_calibration+0x1>
     e36:	9f 93       	push	r25
     e38:	8f 93       	push	r24
     e3a:	8a e4       	ldi	r24, 0x4A	; 74
     e3c:	91 e0       	ldi	r25, 0x01	; 1
     e3e:	9f 93       	push	r25
     e40:	8f 93       	push	r24
     e42:	df 93       	push	r29
     e44:	cf 93       	push	r28
     e46:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     e4a:	61 e0       	ldi	r22, 0x01	; 1
     e4c:	ce 01       	movw	r24, r28
     e4e:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     e52:	80 91 d4 04 	lds	r24, 0x04D4	; 0x8004d4 <_ZL13g_enable_LEDs>
     e56:	2d b7       	in	r18, 0x3d	; 61
     e58:	3e b7       	in	r19, 0x3e	; 62
     e5a:	24 5f       	subi	r18, 0xF4	; 244
     e5c:	3f 4f       	sbci	r19, 0xFF	; 255
     e5e:	0f b6       	in	r0, 0x3f	; 63
     e60:	f8 94       	cli
     e62:	3e bf       	out	0x3e, r19	; 62
     e64:	0f be       	out	0x3f, r0	; 63
     e66:	2d bf       	out	0x3d, r18	; 61
     e68:	81 11       	cpse	r24, r1
     e6a:	03 c0       	rjmp	.+6      	; 0xe72 <main+0x1d2>
     e6c:	83 e2       	ldi	r24, 0x23	; 35
     e6e:	91 e0       	ldi	r25, 0x01	; 1
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <main+0x1d6>
     e72:	80 e2       	ldi	r24, 0x20	; 32
     e74:	91 e0       	ldi	r25, 0x01	; 1
     e76:	9f 93       	push	r25
     e78:	8f 93       	push	r24
     e7a:	85 e5       	ldi	r24, 0x55	; 85
     e7c:	91 e0       	ldi	r25, 0x01	; 1
     e7e:	9f 93       	push	r25
     e80:	8f 93       	push	r24
     e82:	81 ee       	ldi	r24, 0xE1	; 225
     e84:	94 e0       	ldi	r25, 0x04	; 4
     e86:	9f 93       	push	r25
     e88:	8f 93       	push	r24
     e8a:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     e8e:	61 e0       	ldi	r22, 0x01	; 1
     e90:	81 ee       	ldi	r24, 0xE1	; 225
     e92:	94 e0       	ldi	r25, 0x04	; 4
     e94:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     e98:	80 91 d5 04 	lds	r24, 0x04D5	; 0x8004d5 <_ZL20g_enable_start_timer>
     e9c:	0f 90       	pop	r0
     e9e:	0f 90       	pop	r0
     ea0:	0f 90       	pop	r0
     ea2:	0f 90       	pop	r0
     ea4:	0f 90       	pop	r0
     ea6:	0f 90       	pop	r0
     ea8:	81 11       	cpse	r24, r1
     eaa:	03 c0       	rjmp	.+6      	; 0xeb2 <main+0x212>
     eac:	83 e2       	ldi	r24, 0x23	; 35
     eae:	91 e0       	ldi	r25, 0x01	; 1
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <main+0x216>
     eb2:	80 e2       	ldi	r24, 0x20	; 32
     eb4:	91 e0       	ldi	r25, 0x01	; 1
     eb6:	9f 93       	push	r25
     eb8:	8f 93       	push	r24
     eba:	80 e6       	ldi	r24, 0x60	; 96
     ebc:	91 e0       	ldi	r25, 0x01	; 1
     ebe:	9f 93       	push	r25
     ec0:	8f 93       	push	r24
     ec2:	81 ee       	ldi	r24, 0xE1	; 225
     ec4:	94 e0       	ldi	r25, 0x04	; 4
     ec6:	9f 93       	push	r25
     ec8:	8f 93       	push	r24
     eca:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     ece:	61 e0       	ldi	r22, 0x01	; 1
     ed0:	81 ee       	ldi	r24, 0xE1	; 225
     ed2:	94 e0       	ldi	r25, 0x04	; 4
     ed4:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     ed8:	80 91 d6 04 	lds	r24, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
     edc:	0f 90       	pop	r0
     ede:	0f 90       	pop	r0
     ee0:	0f 90       	pop	r0
     ee2:	0f 90       	pop	r0
     ee4:	0f 90       	pop	r0
     ee6:	0f 90       	pop	r0
     ee8:	81 11       	cpse	r24, r1
     eea:	03 c0       	rjmp	.+6      	; 0xef2 <main+0x252>
     eec:	83 e2       	ldi	r24, 0x23	; 35
     eee:	91 e0       	ldi	r25, 0x01	; 1
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <main+0x256>
     ef2:	80 e2       	ldi	r24, 0x20	; 32
     ef4:	91 e0       	ldi	r25, 0x01	; 1
     ef6:	9f 93       	push	r25
     ef8:	8f 93       	push	r24
     efa:	8b e6       	ldi	r24, 0x6B	; 107
     efc:	91 e0       	ldi	r25, 0x01	; 1
     efe:	9f 93       	push	r25
     f00:	8f 93       	push	r24
     f02:	c1 ee       	ldi	r28, 0xE1	; 225
     f04:	d4 e0       	ldi	r29, 0x04	; 4
     f06:	df 93       	push	r29
     f08:	cf 93       	push	r28
     f0a:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     f0e:	61 e0       	ldi	r22, 0x01	; 1
     f10:	ce 01       	movw	r24, r28
     f12:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     f16:	0f ef       	ldi	r16, 0xFF	; 255
     f18:	14 e0       	ldi	r17, 0x04	; 4
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	44 e0       	ldi	r20, 0x04	; 4
     f1e:	60 e0       	ldi	r22, 0x00	; 0
     f20:	74 e2       	ldi	r23, 0x24	; 36
     f22:	84 e7       	ldi	r24, 0x74	; 116
     f24:	99 e4       	ldi	r25, 0x49	; 73
     f26:	0e 94 53 1c 	call	0x38a6	; 0x38a6 <dtostrf>
     f2a:	c8 01       	movw	r24, r16
     f2c:	9f 93       	push	r25
     f2e:	0f 93       	push	r16
     f30:	86 e7       	ldi	r24, 0x76	; 118
     f32:	91 e0       	ldi	r25, 0x01	; 1
     f34:	9f 93       	push	r25
     f36:	8f 93       	push	r24
     f38:	df 93       	push	r29
     f3a:	cf 93       	push	r28
     f3c:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
     f40:	61 e0       	ldi	r22, 0x01	; 1
     f42:	ce 01       	movw	r24, r28
     f44:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
     f48:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z17lb_send_NewPromptv>
     f4c:	8d b7       	in	r24, 0x3d	; 61
     f4e:	9e b7       	in	r25, 0x3e	; 62
     f50:	0c 96       	adiw	r24, 0x0c	; 12
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	9e bf       	out	0x3e, r25	; 62
     f58:	0f be       	out	0x3f, r0	; 63
     f5a:	8d bf       	out	0x3d, r24	; 61
     f5c:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <_Z4loopv>
     f60:	fd cf       	rjmp	.-6      	; 0xf5c <main+0x2bc>

00000f62 <__vector_21>:
     f62:	1f 92       	push	r1
     f64:	0f 92       	push	r0
     f66:	0f b6       	in	r0, 0x3f	; 63
     f68:	0f 92       	push	r0
     f6a:	11 24       	eor	r1, r1
     f6c:	2f 93       	push	r18
     f6e:	3f 93       	push	r19
     f70:	4f 93       	push	r20
     f72:	5f 93       	push	r21
     f74:	6f 93       	push	r22
     f76:	7f 93       	push	r23
     f78:	8f 93       	push	r24
     f7a:	9f 93       	push	r25
     f7c:	af 93       	push	r26
     f7e:	bf 93       	push	r27
     f80:	ef 93       	push	r30
     f82:	ff 93       	push	r31
     f84:	61 e0       	ldi	r22, 0x01	; 1
     f86:	8b e0       	ldi	r24, 0x0B	; 11
     f88:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
     f8c:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     f90:	70 e0       	ldi	r23, 0x00	; 0
     f92:	80 ee       	ldi	r24, 0xE0	; 224
     f94:	94 e0       	ldi	r25, 0x04	; 4
     f96:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN8Goertzel9DataPointEi>
     f9a:	88 23       	and	r24, r24
     f9c:	29 f0       	breq	.+10     	; 0xfa8 <__vector_21+0x46>
     f9e:	ea e7       	ldi	r30, 0x7A	; 122
     fa0:	f0 e0       	ldi	r31, 0x00	; 0
     fa2:	80 81       	ld	r24, Z
     fa4:	87 7f       	andi	r24, 0xF7	; 247
     fa6:	80 83       	st	Z, r24
     fa8:	60 e0       	ldi	r22, 0x00	; 0
     faa:	8b e0       	ldi	r24, 0x0B	; 11
     fac:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
     fb0:	ff 91       	pop	r31
     fb2:	ef 91       	pop	r30
     fb4:	bf 91       	pop	r27
     fb6:	af 91       	pop	r26
     fb8:	9f 91       	pop	r25
     fba:	8f 91       	pop	r24
     fbc:	7f 91       	pop	r23
     fbe:	6f 91       	pop	r22
     fc0:	5f 91       	pop	r21
     fc2:	4f 91       	pop	r20
     fc4:	3f 91       	pop	r19
     fc6:	2f 91       	pop	r18
     fc8:	0f 90       	pop	r0
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	0f 90       	pop	r0
     fce:	1f 90       	pop	r1
     fd0:	18 95       	reti

00000fd2 <__vector_5>:
     fd2:	1f 92       	push	r1
     fd4:	0f 92       	push	r0
     fd6:	0f b6       	in	r0, 0x3f	; 63
     fd8:	0f 92       	push	r0
     fda:	11 24       	eor	r1, r1
     fdc:	2f 93       	push	r18
     fde:	3f 93       	push	r19
     fe0:	4f 93       	push	r20
     fe2:	5f 93       	push	r21
     fe4:	6f 93       	push	r22
     fe6:	7f 93       	push	r23
     fe8:	8f 93       	push	r24
     fea:	9f 93       	push	r25
     fec:	af 93       	push	r26
     fee:	bf 93       	push	r27
     ff0:	ef 93       	push	r30
     ff2:	ff 93       	push	r31
     ff4:	84 e0       	ldi	r24, 0x04	; 4
     ff6:	0e 94 3f 02 	call	0x47e	; 0x47e <_Z11digitalReadh>
     ffa:	88 23       	and	r24, r24
     ffc:	29 f0       	breq	.+10     	; 0x1008 <__vector_5+0x36>
     ffe:	80 91 a7 04 	lds	r24, 0x04A7	; 0x8004a7 <g_sync_pin_stable>
    1002:	81 11       	cpse	r24, r1
    1004:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <_Z17doSynchronizationv>
    1008:	10 92 a6 04 	sts	0x04A6, r1	; 0x8004a6 <g_sync_pin_timer+0x1>
    100c:	10 92 a5 04 	sts	0x04A5, r1	; 0x8004a5 <g_sync_pin_timer>
    1010:	ff 91       	pop	r31
    1012:	ef 91       	pop	r30
    1014:	bf 91       	pop	r27
    1016:	af 91       	pop	r26
    1018:	9f 91       	pop	r25
    101a:	8f 91       	pop	r24
    101c:	7f 91       	pop	r23
    101e:	6f 91       	pop	r22
    1020:	5f 91       	pop	r21
    1022:	4f 91       	pop	r20
    1024:	3f 91       	pop	r19
    1026:	2f 91       	pop	r18
    1028:	0f 90       	pop	r0
    102a:	0f be       	out	0x3f, r0	; 63
    102c:	0f 90       	pop	r0
    102e:	1f 90       	pop	r1
    1030:	18 95       	reti

00001032 <__vector_18>:
    1032:	1f 92       	push	r1
    1034:	0f 92       	push	r0
    1036:	0f b6       	in	r0, 0x3f	; 63
    1038:	0f 92       	push	r0
    103a:	11 24       	eor	r1, r1
    103c:	1f 93       	push	r17
    103e:	2f 93       	push	r18
    1040:	3f 93       	push	r19
    1042:	4f 93       	push	r20
    1044:	5f 93       	push	r21
    1046:	6f 93       	push	r22
    1048:	7f 93       	push	r23
    104a:	8f 93       	push	r24
    104c:	9f 93       	push	r25
    104e:	af 93       	push	r26
    1050:	bf 93       	push	r27
    1052:	cf 93       	push	r28
    1054:	df 93       	push	r29
    1056:	ef 93       	push	r30
    1058:	ff 93       	push	r31
    105a:	10 91 c6 00 	lds	r17, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    105e:	c0 91 0c 05 	lds	r28, 0x050C	; 0x80050c <_ZZ11__vector_18E4buff>
    1062:	d0 91 0d 05 	lds	r29, 0x050D	; 0x80050d <_ZZ11__vector_18E4buff+0x1>
    1066:	20 97       	sbiw	r28, 0x00	; 0
    1068:	51 f4       	brne	.+20     	; 0x107e <__vector_18+0x4c>
    106a:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <_Z17nextEmptyRxBufferv>
    106e:	ec 01       	movw	r28, r24
    1070:	90 93 0d 05 	sts	0x050D, r25	; 0x80050d <_ZZ11__vector_18E4buff+0x1>
    1074:	80 93 0c 05 	sts	0x050C, r24	; 0x80050c <_ZZ11__vector_18E4buff>
    1078:	89 2b       	or	r24, r25
    107a:	09 f4       	brne	.+2      	; 0x107e <__vector_18+0x4c>
    107c:	86 c1       	rjmp	.+780    	; 0x138a <__vector_18+0x358>
    107e:	81 2f       	mov	r24, r17
    1080:	90 e0       	ldi	r25, 0x00	; 0
    1082:	0e 94 d9 1d 	call	0x3bb2	; 0x3bb2 <toupper>
    1086:	9c 01       	movw	r18, r24
    1088:	80 91 0e 05 	lds	r24, 0x050E	; 0x80050e <_ZZ11__vector_18E11ignoreCount>
    108c:	88 23       	and	r24, r24
    108e:	21 f0       	breq	.+8      	; 0x1098 <__vector_18+0x66>
    1090:	81 50       	subi	r24, 0x01	; 1
    1092:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <_ZZ11__vector_18E11ignoreCount>
    1096:	79 c1       	rjmp	.+754    	; 0x138a <__vector_18+0x358>
    1098:	2b 31       	cpi	r18, 0x1B	; 27
    109a:	21 f4       	brne	.+8      	; 0x10a4 <__vector_18+0x72>
    109c:	82 e0       	ldi	r24, 0x02	; 2
    109e:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <_ZZ11__vector_18E11ignoreCount>
    10a2:	73 c1       	rjmp	.+742    	; 0x138a <__vector_18+0x358>
    10a4:	2d 30       	cpi	r18, 0x0D	; 13
    10a6:	09 f0       	breq	.+2      	; 0x10aa <__vector_18+0x78>
    10a8:	44 c0       	rjmp	.+136    	; 0x1132 <__vector_18+0x100>
    10aa:	80 91 31 05 	lds	r24, 0x0531	; 0x800531 <_ZZ11__vector_18E13receiving_msg>
    10ae:	88 23       	and	r24, r24
    10b0:	59 f1       	breq	.+86     	; 0x1108 <__vector_18+0xd6>
    10b2:	e0 91 0f 05 	lds	r30, 0x050F	; 0x80050f <_ZZ11__vector_18E9charIndex>
    10b6:	ee 23       	and	r30, r30
    10b8:	21 f1       	breq	.+72     	; 0x1102 <__vector_18+0xd0>
    10ba:	82 e0       	ldi	r24, 0x02	; 2
    10bc:	88 83       	st	Y, r24
    10be:	80 91 32 05 	lds	r24, 0x0532	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    10c2:	90 91 33 05 	lds	r25, 0x0533	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    10c6:	9a 83       	std	Y+2, r25	; 0x02
    10c8:	89 83       	std	Y+1, r24	; 0x01
    10ca:	80 91 34 05 	lds	r24, 0x0534	; 0x800534 <_ZZ11__vector_18E11field_index>
    10ce:	88 23       	and	r24, r24
    10d0:	a1 f0       	breq	.+40     	; 0x10fa <__vector_18+0xc8>
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	01 97       	sbiw	r24, 0x01	; 1
    10d6:	20 91 35 05 	lds	r18, 0x0535	; 0x800535 <_ZZ11__vector_18E9field_len>
    10da:	ac 01       	movw	r20, r24
    10dc:	44 0f       	add	r20, r20
    10de:	55 1f       	adc	r21, r21
    10e0:	88 0f       	add	r24, r24
    10e2:	99 1f       	adc	r25, r25
    10e4:	88 0f       	add	r24, r24
    10e6:	99 1f       	adc	r25, r25
    10e8:	88 0f       	add	r24, r24
    10ea:	99 1f       	adc	r25, r25
    10ec:	84 0f       	add	r24, r20
    10ee:	95 1f       	adc	r25, r21
    10f0:	c8 0f       	add	r28, r24
    10f2:	d9 1f       	adc	r29, r25
    10f4:	c2 0f       	add	r28, r18
    10f6:	d1 1d       	adc	r29, r1
    10f8:	1b 82       	std	Y+3, r1	; 0x03
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	e0 5f       	subi	r30, 0xF0	; 240
    10fe:	fa 4f       	sbci	r31, 0xFA	; 250
    1100:	10 82       	st	Z, r1
    1102:	0e 94 d4 05 	call	0xba8	; 0xba8 <_Z15lb_send_NewLinev>
    1106:	04 c0       	rjmp	.+8      	; 0x1110 <__vector_18+0xde>
    1108:	8f ef       	ldi	r24, 0xFF	; 255
    110a:	9f e7       	ldi	r25, 0x7F	; 127
    110c:	9a 83       	std	Y+2, r25	; 0x02
    110e:	89 83       	std	Y+1, r24	; 0x01
    1110:	10 92 0f 05 	sts	0x050F, r1	; 0x80050f <_ZZ11__vector_18E9charIndex>
    1114:	10 92 35 05 	sts	0x0535, r1	; 0x800535 <_ZZ11__vector_18E9field_len>
    1118:	10 92 33 05 	sts	0x0533, r1	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    111c:	10 92 32 05 	sts	0x0532, r1	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    1120:	10 92 34 05 	sts	0x0534, r1	; 0x800534 <_ZZ11__vector_18E11field_index>
    1124:	10 92 0d 05 	sts	0x050D, r1	; 0x80050d <_ZZ11__vector_18E4buff+0x1>
    1128:	10 92 0c 05 	sts	0x050C, r1	; 0x80050c <_ZZ11__vector_18E4buff>
    112c:	10 92 31 05 	sts	0x0531, r1	; 0x800531 <_ZZ11__vector_18E13receiving_msg>
    1130:	2c c1       	rjmp	.+600    	; 0x138a <__vector_18+0x358>
    1132:	22 23       	and	r18, r18
    1134:	09 f4       	brne	.+2      	; 0x1138 <__vector_18+0x106>
    1136:	29 c1       	rjmp	.+594    	; 0x138a <__vector_18+0x358>
    1138:	e0 91 0f 05 	lds	r30, 0x050F	; 0x80050f <_ZZ11__vector_18E9charIndex>
    113c:	4e 2f       	mov	r20, r30
    113e:	50 e0       	ldi	r21, 0x00	; 0
    1140:	da 01       	movw	r26, r20
    1142:	a0 5f       	subi	r26, 0xF0	; 240
    1144:	ba 4f       	sbci	r27, 0xFA	; 250
    1146:	2c 93       	st	X, r18
    1148:	ee 23       	and	r30, r30
    114a:	09 f4       	brne	.+2      	; 0x114e <__vector_18+0x11c>
    114c:	f5 c0       	rjmp	.+490    	; 0x1338 <__vector_18+0x306>
    114e:	2f 37       	cpi	r18, 0x7F	; 127
    1150:	09 f0       	breq	.+2      	; 0x1154 <__vector_18+0x122>
    1152:	76 c0       	rjmp	.+236    	; 0x1240 <__vector_18+0x20e>
    1154:	e1 50       	subi	r30, 0x01	; 1
    1156:	e0 93 0f 05 	sts	0x050F, r30	; 0x80050f <_ZZ11__vector_18E9charIndex>
    115a:	80 91 34 05 	lds	r24, 0x0534	; 0x800534 <_ZZ11__vector_18E11field_index>
    115e:	81 11       	cpse	r24, r1
    1160:	13 c0       	rjmp	.+38     	; 0x1188 <__vector_18+0x156>
    1162:	f0 e0       	ldi	r31, 0x00	; 0
    1164:	e0 5f       	subi	r30, 0xF0	; 240
    1166:	fa 4f       	sbci	r31, 0xFA	; 250
    1168:	40 81       	ld	r20, Z
    116a:	80 91 32 05 	lds	r24, 0x0532	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    116e:	90 91 33 05 	lds	r25, 0x0533	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    1172:	84 1b       	sub	r24, r20
    1174:	91 09       	sbc	r25, r1
    1176:	6a e0       	ldi	r22, 0x0A	; 10
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	0e 94 e9 1b 	call	0x37d2	; 0x37d2 <__divmodhi4>
    117e:	70 93 33 05 	sts	0x0533, r23	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    1182:	60 93 32 05 	sts	0x0532, r22	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    1186:	50 c0       	rjmp	.+160    	; 0x1228 <__vector_18+0x1f6>
    1188:	90 91 35 05 	lds	r25, 0x0535	; 0x800535 <_ZZ11__vector_18E9field_len>
    118c:	99 23       	and	r25, r25
    118e:	b9 f0       	breq	.+46     	; 0x11be <__vector_18+0x18c>
    1190:	4f ef       	ldi	r20, 0xFF	; 255
    1192:	49 0f       	add	r20, r25
    1194:	40 93 35 05 	sts	0x0535, r20	; 0x800535 <_ZZ11__vector_18E9field_len>
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	01 97       	sbiw	r24, 0x01	; 1
    119c:	bc 01       	movw	r22, r24
    119e:	66 0f       	add	r22, r22
    11a0:	77 1f       	adc	r23, r23
    11a2:	88 0f       	add	r24, r24
    11a4:	99 1f       	adc	r25, r25
    11a6:	88 0f       	add	r24, r24
    11a8:	99 1f       	adc	r25, r25
    11aa:	88 0f       	add	r24, r24
    11ac:	99 1f       	adc	r25, r25
    11ae:	86 0f       	add	r24, r22
    11b0:	97 1f       	adc	r25, r23
    11b2:	c8 0f       	add	r28, r24
    11b4:	d9 1f       	adc	r29, r25
    11b6:	c4 0f       	add	r28, r20
    11b8:	d1 1d       	adc	r29, r1
    11ba:	1b 82       	std	Y+3, r1	; 0x03
    11bc:	35 c0       	rjmp	.+106    	; 0x1228 <__vector_18+0x1f6>
    11be:	f0 e0       	ldi	r31, 0x00	; 0
    11c0:	e0 5f       	subi	r30, 0xF0	; 240
    11c2:	fa 4f       	sbci	r31, 0xFA	; 250
    11c4:	90 81       	ld	r25, Z
    11c6:	90 32       	cpi	r25, 0x20	; 32
    11c8:	e1 f4       	brne	.+56     	; 0x1202 <__vector_18+0x1d0>
    11ca:	81 50       	subi	r24, 0x01	; 1
    11cc:	80 93 34 05 	sts	0x0534, r24	; 0x800534 <_ZZ11__vector_18E11field_index>
    11d0:	90 e0       	ldi	r25, 0x00	; 0
    11d2:	ac 01       	movw	r20, r24
    11d4:	44 0f       	add	r20, r20
    11d6:	55 1f       	adc	r21, r21
    11d8:	88 0f       	add	r24, r24
    11da:	99 1f       	adc	r25, r25
    11dc:	88 0f       	add	r24, r24
    11de:	99 1f       	adc	r25, r25
    11e0:	88 0f       	add	r24, r24
    11e2:	99 1f       	adc	r25, r25
    11e4:	84 0f       	add	r24, r20
    11e6:	95 1f       	adc	r25, r21
    11e8:	03 96       	adiw	r24, 0x03	; 3
    11ea:	c8 0f       	add	r28, r24
    11ec:	d9 1f       	adc	r29, r25
    11ee:	fe 01       	movw	r30, r28
    11f0:	01 90       	ld	r0, Z+
    11f2:	00 20       	and	r0, r0
    11f4:	e9 f7       	brne	.-6      	; 0x11f0 <__vector_18+0x1be>
    11f6:	31 97       	sbiw	r30, 0x01	; 1
    11f8:	ec 1b       	sub	r30, r28
    11fa:	fd 0b       	sbc	r31, r29
    11fc:	e0 93 35 05 	sts	0x0535, r30	; 0x800535 <_ZZ11__vector_18E9field_len>
    1200:	13 c0       	rjmp	.+38     	; 0x1228 <__vector_18+0x1f6>
    1202:	48 2f       	mov	r20, r24
    1204:	50 e0       	ldi	r21, 0x00	; 0
    1206:	ba 01       	movw	r22, r20
    1208:	66 0f       	add	r22, r22
    120a:	77 1f       	adc	r23, r23
    120c:	44 0f       	add	r20, r20
    120e:	55 1f       	adc	r21, r21
    1210:	44 0f       	add	r20, r20
    1212:	55 1f       	adc	r21, r21
    1214:	44 0f       	add	r20, r20
    1216:	55 1f       	adc	r21, r21
    1218:	46 0f       	add	r20, r22
    121a:	57 1f       	adc	r21, r23
    121c:	c4 0f       	add	r28, r20
    121e:	d5 1f       	adc	r29, r21
    1220:	1b 82       	std	Y+3, r1	; 0x03
    1222:	81 50       	subi	r24, 0x01	; 1
    1224:	80 93 34 05 	sts	0x0534, r24	; 0x800534 <_ZZ11__vector_18E11field_index>
    1228:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <_ZZ11__vector_18E9charIndex>
    122c:	e8 2f       	mov	r30, r24
    122e:	f0 e0       	ldi	r31, 0x00	; 0
    1230:	e0 5f       	subi	r30, 0xF0	; 240
    1232:	fa 4f       	sbci	r31, 0xFA	; 250
    1234:	10 82       	st	Z, r1
    1236:	81 11       	cpse	r24, r1
    1238:	9b c0       	rjmp	.+310    	; 0x1370 <__vector_18+0x33e>
    123a:	10 92 31 05 	sts	0x0531, r1	; 0x800531 <_ZZ11__vector_18E13receiving_msg>
    123e:	98 c0       	rjmp	.+304    	; 0x1370 <__vector_18+0x33e>
    1240:	20 32       	cpi	r18, 0x20	; 32
    1242:	99 f5       	brne	.+102    	; 0x12aa <__vector_18+0x278>
    1244:	fa 01       	movw	r30, r20
    1246:	e1 5f       	subi	r30, 0xF1	; 241
    1248:	fa 4f       	sbci	r31, 0xFA	; 250
    124a:	80 81       	ld	r24, Z
    124c:	80 32       	cpi	r24, 0x20	; 32
    124e:	09 f4       	brne	.+2      	; 0x1252 <__vector_18+0x220>
    1250:	9c c0       	rjmp	.+312    	; 0x138a <__vector_18+0x358>
    1252:	60 91 34 05 	lds	r22, 0x0534	; 0x800534 <_ZZ11__vector_18E11field_index>
    1256:	86 2f       	mov	r24, r22
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	fc 01       	movw	r30, r24
    125c:	31 96       	adiw	r30, 0x01	; 1
    125e:	33 97       	sbiw	r30, 0x03	; 3
    1260:	0c f0       	brlt	.+2      	; 0x1264 <__vector_18+0x232>
    1262:	93 c0       	rjmp	.+294    	; 0x138a <__vector_18+0x358>
    1264:	66 23       	and	r22, r22
    1266:	99 f0       	breq	.+38     	; 0x128e <__vector_18+0x25c>
    1268:	01 97       	sbiw	r24, 0x01	; 1
    126a:	70 91 35 05 	lds	r23, 0x0535	; 0x800535 <_ZZ11__vector_18E9field_len>
    126e:	fc 01       	movw	r30, r24
    1270:	ee 0f       	add	r30, r30
    1272:	ff 1f       	adc	r31, r31
    1274:	88 0f       	add	r24, r24
    1276:	99 1f       	adc	r25, r25
    1278:	88 0f       	add	r24, r24
    127a:	99 1f       	adc	r25, r25
    127c:	88 0f       	add	r24, r24
    127e:	99 1f       	adc	r25, r25
    1280:	8e 0f       	add	r24, r30
    1282:	9f 1f       	adc	r25, r31
    1284:	c8 0f       	add	r28, r24
    1286:	d9 1f       	adc	r29, r25
    1288:	c7 0f       	add	r28, r23
    128a:	d1 1d       	adc	r29, r1
    128c:	1b 82       	std	Y+3, r1	; 0x03
    128e:	6f 5f       	subi	r22, 0xFF	; 255
    1290:	60 93 34 05 	sts	0x0534, r22	; 0x800534 <_ZZ11__vector_18E11field_index>
    1294:	10 92 35 05 	sts	0x0535, r1	; 0x800535 <_ZZ11__vector_18E9field_len>
    1298:	4f 5f       	subi	r20, 0xFF	; 255
    129a:	5f 4f       	sbci	r21, 0xFF	; 255
    129c:	40 32       	cpi	r20, 0x20	; 32
    129e:	51 05       	cpc	r21, r1
    12a0:	0c f0       	brlt	.+2      	; 0x12a4 <__vector_18+0x272>
    12a2:	40 e2       	ldi	r20, 0x20	; 32
    12a4:	40 93 0f 05 	sts	0x050F, r20	; 0x80050f <_ZZ11__vector_18E9charIndex>
    12a8:	63 c0       	rjmp	.+198    	; 0x1370 <__vector_18+0x33e>
    12aa:	40 91 35 05 	lds	r20, 0x0535	; 0x800535 <_ZZ11__vector_18E9field_len>
    12ae:	4a 30       	cpi	r20, 0x0A	; 10
    12b0:	08 f0       	brcs	.+2      	; 0x12b4 <__vector_18+0x282>
    12b2:	6b c0       	rjmp	.+214    	; 0x138a <__vector_18+0x358>
    12b4:	80 91 34 05 	lds	r24, 0x0534	; 0x800534 <_ZZ11__vector_18E11field_index>
    12b8:	81 11       	cpse	r24, r1
    12ba:	19 c0       	rjmp	.+50     	; 0x12ee <__vector_18+0x2bc>
    12bc:	80 91 32 05 	lds	r24, 0x0532	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    12c0:	90 91 33 05 	lds	r25, 0x0533	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    12c4:	bc 01       	movw	r22, r24
    12c6:	66 0f       	add	r22, r22
    12c8:	77 1f       	adc	r23, r23
    12ca:	88 0f       	add	r24, r24
    12cc:	99 1f       	adc	r25, r25
    12ce:	88 0f       	add	r24, r24
    12d0:	99 1f       	adc	r25, r25
    12d2:	88 0f       	add	r24, r24
    12d4:	99 1f       	adc	r25, r25
    12d6:	86 0f       	add	r24, r22
    12d8:	97 1f       	adc	r25, r23
    12da:	82 0f       	add	r24, r18
    12dc:	91 1d       	adc	r25, r1
    12de:	90 93 33 05 	sts	0x0533, r25	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    12e2:	80 93 32 05 	sts	0x0532, r24	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    12e6:	4f 5f       	subi	r20, 0xFF	; 255
    12e8:	40 93 35 05 	sts	0x0535, r20	; 0x800535 <_ZZ11__vector_18E9field_len>
    12ec:	1a c0       	rjmp	.+52     	; 0x1322 <__vector_18+0x2f0>
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	01 97       	sbiw	r24, 0x01	; 1
    12f2:	51 e0       	ldi	r21, 0x01	; 1
    12f4:	54 0f       	add	r21, r20
    12f6:	50 93 35 05 	sts	0x0535, r21	; 0x800535 <_ZZ11__vector_18E9field_len>
    12fa:	bc 01       	movw	r22, r24
    12fc:	66 0f       	add	r22, r22
    12fe:	77 1f       	adc	r23, r23
    1300:	88 0f       	add	r24, r24
    1302:	99 1f       	adc	r25, r25
    1304:	88 0f       	add	r24, r24
    1306:	99 1f       	adc	r25, r25
    1308:	88 0f       	add	r24, r24
    130a:	99 1f       	adc	r25, r25
    130c:	86 0f       	add	r24, r22
    130e:	97 1f       	adc	r25, r23
    1310:	c8 0f       	add	r28, r24
    1312:	d9 1f       	adc	r29, r25
    1314:	fe 01       	movw	r30, r28
    1316:	e4 0f       	add	r30, r20
    1318:	f1 1d       	adc	r31, r1
    131a:	23 83       	std	Z+3, r18	; 0x03
    131c:	c5 0f       	add	r28, r21
    131e:	d1 1d       	adc	r29, r1
    1320:	1b 82       	std	Y+3, r1	; 0x03
    1322:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <_ZZ11__vector_18E9charIndex>
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	01 96       	adiw	r24, 0x01	; 1
    132a:	80 32       	cpi	r24, 0x20	; 32
    132c:	91 05       	cpc	r25, r1
    132e:	0c f0       	brlt	.+2      	; 0x1332 <__vector_18+0x300>
    1330:	80 e2       	ldi	r24, 0x20	; 32
    1332:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <_ZZ11__vector_18E9charIndex>
    1336:	1c c0       	rjmp	.+56     	; 0x1370 <__vector_18+0x33e>
    1338:	2f 37       	cpi	r18, 0x7F	; 127
    133a:	41 f4       	brne	.+16     	; 0x134c <__vector_18+0x31a>
    133c:	80 91 32 05 	lds	r24, 0x0532	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    1340:	90 91 33 05 	lds	r25, 0x0533	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    1344:	18 16       	cp	r1, r24
    1346:	19 06       	cpc	r1, r25
    1348:	bc f0       	brlt	.+46     	; 0x1378 <__vector_18+0x346>
    134a:	1b c0       	rjmp	.+54     	; 0x1382 <__vector_18+0x350>
    134c:	20 32       	cpi	r18, 0x20	; 32
    134e:	e9 f0       	breq	.+58     	; 0x138a <__vector_18+0x358>
    1350:	10 92 34 05 	sts	0x0534, r1	; 0x800534 <_ZZ11__vector_18E11field_index>
    1354:	c9 01       	movw	r24, r18
    1356:	99 27       	eor	r25, r25
    1358:	90 93 33 05 	sts	0x0533, r25	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    135c:	80 93 32 05 	sts	0x0532, r24	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    1360:	1b 82       	std	Y+3, r1	; 0x03
    1362:	1d 86       	std	Y+13, r1	; 0x0d
    1364:	1f 8a       	std	Y+23, r1	; 0x17
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	80 93 31 05 	sts	0x0531, r24	; 0x800531 <_ZZ11__vector_18E13receiving_msg>
    136c:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <_ZZ11__vector_18E9charIndex>
    1370:	82 2f       	mov	r24, r18
    1372:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <_Z12lb_echo_charh>
    1376:	09 c0       	rjmp	.+18     	; 0x138a <__vector_18+0x358>
    1378:	10 92 33 05 	sts	0x0533, r1	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    137c:	10 92 32 05 	sts	0x0532, r1	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    1380:	f7 cf       	rjmp	.-18     	; 0x1370 <__vector_18+0x33e>
    1382:	10 92 33 05 	sts	0x0533, r1	; 0x800533 <_ZZ11__vector_18E6msg_ID+0x1>
    1386:	10 92 32 05 	sts	0x0532, r1	; 0x800532 <_ZZ11__vector_18E6msg_ID>
    138a:	ff 91       	pop	r31
    138c:	ef 91       	pop	r30
    138e:	df 91       	pop	r29
    1390:	cf 91       	pop	r28
    1392:	bf 91       	pop	r27
    1394:	af 91       	pop	r26
    1396:	9f 91       	pop	r25
    1398:	8f 91       	pop	r24
    139a:	7f 91       	pop	r23
    139c:	6f 91       	pop	r22
    139e:	5f 91       	pop	r21
    13a0:	4f 91       	pop	r20
    13a2:	3f 91       	pop	r19
    13a4:	2f 91       	pop	r18
    13a6:	1f 91       	pop	r17
    13a8:	0f 90       	pop	r0
    13aa:	0f be       	out	0x3f, r0	; 63
    13ac:	0f 90       	pop	r0
    13ae:	1f 90       	pop	r1
    13b0:	18 95       	reti

000013b2 <__vector_19>:
    13b2:	1f 92       	push	r1
    13b4:	0f 92       	push	r0
    13b6:	0f b6       	in	r0, 0x3f	; 63
    13b8:	0f 92       	push	r0
    13ba:	11 24       	eor	r1, r1
    13bc:	2f 93       	push	r18
    13be:	3f 93       	push	r19
    13c0:	4f 93       	push	r20
    13c2:	5f 93       	push	r21
    13c4:	6f 93       	push	r22
    13c6:	7f 93       	push	r23
    13c8:	8f 93       	push	r24
    13ca:	9f 93       	push	r25
    13cc:	af 93       	push	r26
    13ce:	bf 93       	push	r27
    13d0:	ef 93       	push	r30
    13d2:	ff 93       	push	r31
    13d4:	80 91 36 05 	lds	r24, 0x0536	; 0x800536 <_ZZ11__vector_19E4buff>
    13d8:	90 91 37 05 	lds	r25, 0x0537	; 0x800537 <_ZZ11__vector_19E4buff+0x1>
    13dc:	89 2b       	or	r24, r25
    13de:	31 f4       	brne	.+12     	; 0x13ec <__vector_19+0x3a>
    13e0:	0e 94 a3 04 	call	0x946	; 0x946 <_Z16nextFullTxBufferv>
    13e4:	90 93 37 05 	sts	0x0537, r25	; 0x800537 <_ZZ11__vector_19E4buff+0x1>
    13e8:	80 93 36 05 	sts	0x0536, r24	; 0x800536 <_ZZ11__vector_19E4buff>
    13ec:	e0 91 36 05 	lds	r30, 0x0536	; 0x800536 <_ZZ11__vector_19E4buff>
    13f0:	f0 91 37 05 	lds	r31, 0x0537	; 0x800537 <_ZZ11__vector_19E4buff+0x1>
    13f4:	80 91 38 05 	lds	r24, 0x0538	; 0x800538 <_ZZ11__vector_19E9charIndex>
    13f8:	df 01       	movw	r26, r30
    13fa:	a8 0f       	add	r26, r24
    13fc:	b1 1d       	adc	r27, r1
    13fe:	9c 91       	ld	r25, X
    1400:	99 23       	and	r25, r25
    1402:	31 f0       	breq	.+12     	; 0x1410 <__vector_19+0x5e>
    1404:	8f 5f       	subi	r24, 0xFF	; 255
    1406:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <_ZZ11__vector_19E9charIndex>
    140a:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    140e:	0d c0       	rjmp	.+26     	; 0x142a <__vector_19+0x78>
    1410:	10 92 38 05 	sts	0x0538, r1	; 0x800538 <_ZZ11__vector_19E9charIndex>
    1414:	10 82       	st	Z, r1
    1416:	0e 94 a3 04 	call	0x946	; 0x946 <_Z16nextFullTxBufferv>
    141a:	90 93 37 05 	sts	0x0537, r25	; 0x800537 <_ZZ11__vector_19E4buff+0x1>
    141e:	80 93 36 05 	sts	0x0536, r24	; 0x800536 <_ZZ11__vector_19E4buff>
    1422:	89 2b       	or	r24, r25
    1424:	11 f4       	brne	.+4      	; 0x142a <__vector_19+0x78>
    1426:	0e 94 5d 05 	call	0xaba	; 0xaba <_Z14linkbus_end_txv>
    142a:	ff 91       	pop	r31
    142c:	ef 91       	pop	r30
    142e:	bf 91       	pop	r27
    1430:	af 91       	pop	r26
    1432:	9f 91       	pop	r25
    1434:	8f 91       	pop	r24
    1436:	7f 91       	pop	r23
    1438:	6f 91       	pop	r22
    143a:	5f 91       	pop	r21
    143c:	4f 91       	pop	r20
    143e:	3f 91       	pop	r19
    1440:	2f 91       	pop	r18
    1442:	0f 90       	pop	r0
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	0f 90       	pop	r0
    1448:	1f 90       	pop	r1
    144a:	18 95       	reti

0000144c <__vector_8>:
    144c:	1f 92       	push	r1
    144e:	0f 92       	push	r0
    1450:	0f b6       	in	r0, 0x3f	; 63
    1452:	0f 92       	push	r0
    1454:	11 24       	eor	r1, r1
    1456:	2f 93       	push	r18
    1458:	3f 93       	push	r19
    145a:	4f 93       	push	r20
    145c:	5f 93       	push	r21
    145e:	6f 93       	push	r22
    1460:	7f 93       	push	r23
    1462:	8f 93       	push	r24
    1464:	9f 93       	push	r25
    1466:	af 93       	push	r26
    1468:	bf 93       	push	r27
    146a:	ef 93       	push	r30
    146c:	ff 93       	push	r31
    146e:	cf 93       	push	r28
    1470:	df 93       	push	r29
    1472:	00 d0       	rcall	.+0      	; 0x1474 <__vector_8+0x28>
    1474:	cd b7       	in	r28, 0x3d	; 61
    1476:	de b7       	in	r29, 0x3e	; 62
    1478:	80 91 dc 04 	lds	r24, 0x04DC	; 0x8004dc <g_tick_count>
    147c:	90 91 dd 04 	lds	r25, 0x04DD	; 0x8004dd <g_tick_count+0x1>
    1480:	a0 91 de 04 	lds	r26, 0x04DE	; 0x8004de <g_tick_count+0x2>
    1484:	b0 91 df 04 	lds	r27, 0x04DF	; 0x8004df <g_tick_count+0x3>
    1488:	01 96       	adiw	r24, 0x01	; 1
    148a:	a1 1d       	adc	r26, r1
    148c:	b1 1d       	adc	r27, r1
    148e:	80 93 dc 04 	sts	0x04DC, r24	; 0x8004dc <g_tick_count>
    1492:	90 93 dd 04 	sts	0x04DD, r25	; 0x8004dd <g_tick_count+0x1>
    1496:	a0 93 de 04 	sts	0x04DE, r26	; 0x8004de <g_tick_count+0x2>
    149a:	b0 93 df 04 	sts	0x04DF, r27	; 0x8004df <g_tick_count+0x3>
    149e:	81 e0       	ldi	r24, 0x01	; 1
    14a0:	89 83       	std	Y+1, r24	; 0x01
    14a2:	1a 82       	std	Y+2, r1	; 0x02
    14a4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <g_sync_enabled>
    14a8:	88 23       	and	r24, r24
    14aa:	19 f1       	breq	.+70     	; 0x14f2 <__vector_8+0xa6>
    14ac:	84 e0       	ldi	r24, 0x04	; 4
    14ae:	0e 94 3f 02 	call	0x47e	; 0x47e <_Z11digitalReadh>
    14b2:	81 11       	cpse	r24, r1
    14b4:	1e c0       	rjmp	.+60     	; 0x14f2 <__vector_8+0xa6>
    14b6:	80 91 a5 04 	lds	r24, 0x04A5	; 0x8004a5 <g_sync_pin_timer>
    14ba:	90 91 a6 04 	lds	r25, 0x04A6	; 0x8004a6 <g_sync_pin_timer+0x1>
    14be:	8b 3b       	cpi	r24, 0xBB	; 187
    14c0:	90 41       	sbci	r25, 0x10	; 16
    14c2:	4c f4       	brge	.+18     	; 0x14d6 <__vector_8+0x8a>
    14c4:	80 91 a5 04 	lds	r24, 0x04A5	; 0x8004a5 <g_sync_pin_timer>
    14c8:	90 91 a6 04 	lds	r25, 0x04A6	; 0x8004a6 <g_sync_pin_timer+0x1>
    14cc:	01 96       	adiw	r24, 0x01	; 1
    14ce:	90 93 a6 04 	sts	0x04A6, r25	; 0x8004a6 <g_sync_pin_timer+0x1>
    14d2:	80 93 a5 04 	sts	0x04A5, r24	; 0x8004a5 <g_sync_pin_timer>
    14d6:	80 91 a5 04 	lds	r24, 0x04A5	; 0x8004a5 <g_sync_pin_timer>
    14da:	90 91 a6 04 	lds	r25, 0x04A6	; 0x8004a6 <g_sync_pin_timer+0x1>
    14de:	85 39       	cpi	r24, 0x95	; 149
    14e0:	95 40       	sbci	r25, 0x05	; 5
    14e2:	3c f0       	brlt	.+14     	; 0x14f2 <__vector_8+0xa6>
    14e4:	81 e0       	ldi	r24, 0x01	; 1
    14e6:	80 93 a7 04 	sts	0x04A7, r24	; 0x8004a7 <g_sync_pin_stable>
    14ea:	61 e0       	ldi	r22, 0x01	; 1
    14ec:	8d e0       	ldi	r24, 0x0D	; 13
    14ee:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    14f2:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <_ZZ10__vector_8E13blink_counter>
    14f6:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <_ZZ10__vector_8E13blink_counter+0x1>
    14fa:	2c 30       	cpi	r18, 0x0C	; 12
    14fc:	8e ef       	ldi	r24, 0xFE	; 254
    14fe:	38 07       	cpc	r19, r24
    1500:	34 f4       	brge	.+12     	; 0x150e <__vector_8+0xc2>
    1502:	81 e0       	ldi	r24, 0x01	; 1
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <_ZZ10__vector_8E21blink_count_direction+0x1>
    150a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <_ZZ10__vector_8E21blink_count_direction>
    150e:	25 36       	cpi	r18, 0x65	; 101
    1510:	31 05       	cpc	r19, r1
    1512:	34 f0       	brlt	.+12     	; 0x1520 <__vector_8+0xd4>
    1514:	8f ef       	ldi	r24, 0xFF	; 255
    1516:	9f ef       	ldi	r25, 0xFF	; 255
    1518:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <_ZZ10__vector_8E21blink_count_direction+0x1>
    151c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <_ZZ10__vector_8E21blink_count_direction>
    1520:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <_ZZ10__vector_8E21blink_count_direction>
    1524:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <_ZZ10__vector_8E21blink_count_direction+0x1>
    1528:	82 0f       	add	r24, r18
    152a:	93 1f       	adc	r25, r19
    152c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <_ZZ10__vector_8E13blink_counter+0x1>
    1530:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <_ZZ10__vector_8E13blink_counter>
    1534:	99 23       	and	r25, r25
    1536:	24 f4       	brge	.+8      	; 0x1540 <__vector_8+0xf4>
    1538:	81 e0       	ldi	r24, 0x01	; 1
    153a:	80 93 96 04 	sts	0x0496, r24	; 0x800496 <g_blinky_time>
    153e:	02 c0       	rjmp	.+4      	; 0x1544 <__vector_8+0xf8>
    1540:	10 92 96 04 	sts	0x0496, r1	; 0x800496 <g_blinky_time>
    1544:	80 91 d5 04 	lds	r24, 0x04D5	; 0x8004d5 <_ZL20g_enable_start_timer>
    1548:	88 23       	and	r24, r24
    154a:	09 f4       	brne	.+2      	; 0x154e <__vector_8+0x102>
    154c:	58 c0       	rjmp	.+176    	; 0x15fe <__vector_8+0x1b2>
    154e:	80 91 a4 04 	lds	r24, 0x04A4	; 0x8004a4 <g_lastSeconds>
    1552:	90 91 39 05 	lds	r25, 0x0539	; 0x800539 <_ZZ10__vector_8E14hold_last10sec>
    1556:	98 17       	cp	r25, r24
    1558:	b1 f0       	breq	.+44     	; 0x1586 <__vector_8+0x13a>
    155a:	80 91 a4 04 	lds	r24, 0x04A4	; 0x8004a4 <g_lastSeconds>
    155e:	80 93 39 05 	sts	0x0539, r24	; 0x800539 <_ZZ10__vector_8E14hold_last10sec>
    1562:	88 23       	and	r24, r24
    1564:	49 f0       	breq	.+18     	; 0x1578 <__vector_8+0x12c>
    1566:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <_ZZ10__vector_8E9playMorse>
    156a:	83 e6       	ldi	r24, 0x63	; 99
    156c:	90 e0       	ldi	r25, 0x00	; 0
    156e:	90 93 3b 05 	sts	0x053B, r25	; 0x80053b <_ZZ10__vector_8E13starting_blip+0x1>
    1572:	80 93 3a 05 	sts	0x053A, r24	; 0x80053a <_ZZ10__vector_8E13starting_blip>
    1576:	14 c0       	rjmp	.+40     	; 0x15a0 <__vector_8+0x154>
    1578:	10 92 3b 05 	sts	0x053B, r1	; 0x80053b <_ZZ10__vector_8E13starting_blip+0x1>
    157c:	10 92 3a 05 	sts	0x053A, r1	; 0x80053a <_ZZ10__vector_8E13starting_blip>
    1580:	87 e2       	ldi	r24, 0x27	; 39
    1582:	9b e0       	ldi	r25, 0x0B	; 11
    1584:	28 c0       	rjmp	.+80     	; 0x15d6 <__vector_8+0x18a>
    1586:	80 91 3a 05 	lds	r24, 0x053A	; 0x80053a <_ZZ10__vector_8E13starting_blip>
    158a:	90 91 3b 05 	lds	r25, 0x053B	; 0x80053b <_ZZ10__vector_8E13starting_blip+0x1>
    158e:	00 97       	sbiw	r24, 0x00	; 0
    1590:	e1 f0       	breq	.+56     	; 0x15ca <__vector_8+0x17e>
    1592:	01 97       	sbiw	r24, 0x01	; 1
    1594:	90 93 3b 05 	sts	0x053B, r25	; 0x80053b <_ZZ10__vector_8E13starting_blip+0x1>
    1598:	80 93 3a 05 	sts	0x053A, r24	; 0x80053a <_ZZ10__vector_8E13starting_blip>
    159c:	89 2b       	or	r24, r25
    159e:	81 f0       	breq	.+32     	; 0x15c0 <__vector_8+0x174>
    15a0:	80 91 a4 04 	lds	r24, 0x04A4	; 0x8004a4 <g_lastSeconds>
    15a4:	86 30       	cpi	r24, 0x06	; 6
    15a6:	30 f0       	brcs	.+12     	; 0x15b4 <__vector_8+0x168>
    15a8:	8f e3       	ldi	r24, 0x3F	; 63
    15aa:	87 bd       	out	0x27, r24	; 39
    15ac:	81 e0       	ldi	r24, 0x01	; 1
    15ae:	80 93 a3 04 	sts	0x04A3, r24	; 0x8004a3 <g_audio_tone_state>
    15b2:	25 c0       	rjmp	.+74     	; 0x15fe <__vector_8+0x1b2>
    15b4:	8f e1       	ldi	r24, 0x1F	; 31
    15b6:	87 bd       	out	0x27, r24	; 39
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	80 93 a3 04 	sts	0x04A3, r24	; 0x8004a3 <g_audio_tone_state>
    15be:	1f c0       	rjmp	.+62     	; 0x15fe <__vector_8+0x1b2>
    15c0:	8f e2       	ldi	r24, 0x2F	; 47
    15c2:	87 bd       	out	0x27, r24	; 39
    15c4:	10 92 a3 04 	sts	0x04A3, r1	; 0x8004a3 <g_audio_tone_state>
    15c8:	1a c0       	rjmp	.+52     	; 0x15fe <__vector_8+0x1b2>
    15ca:	80 91 3c 05 	lds	r24, 0x053C	; 0x80053c <_ZZ10__vector_8E13starting_boop>
    15ce:	90 91 3d 05 	lds	r25, 0x053D	; 0x80053d <_ZZ10__vector_8E13starting_boop+0x1>
    15d2:	00 97       	sbiw	r24, 0x00	; 0
    15d4:	a1 f0       	breq	.+40     	; 0x15fe <__vector_8+0x1b2>
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	90 93 3d 05 	sts	0x053D, r25	; 0x80053d <_ZZ10__vector_8E13starting_boop+0x1>
    15dc:	80 93 3c 05 	sts	0x053C, r24	; 0x80053c <_ZZ10__vector_8E13starting_boop>
    15e0:	89 2b       	or	r24, r25
    15e2:	41 f4       	brne	.+16     	; 0x15f4 <__vector_8+0x1a8>
    15e4:	8f e2       	ldi	r24, 0x2F	; 47
    15e6:	87 bd       	out	0x27, r24	; 39
    15e8:	10 92 a3 04 	sts	0x04A3, r1	; 0x8004a3 <g_audio_tone_state>
    15ec:	81 e0       	ldi	r24, 0x01	; 1
    15ee:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <_ZZ10__vector_8E9playMorse>
    15f2:	05 c0       	rjmp	.+10     	; 0x15fe <__vector_8+0x1b2>
    15f4:	8f e4       	ldi	r24, 0x4F	; 79
    15f6:	87 bd       	out	0x27, r24	; 39
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	80 93 a3 04 	sts	0x04A3, r24	; 0x8004a3 <g_audio_tone_state>
    15fe:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <g_on_the_air>
    1602:	90 91 92 04 	lds	r25, 0x0492	; 0x800492 <g_on_the_air+0x1>
    1606:	18 16       	cp	r1, r24
    1608:	19 06       	cpc	r1, r25
    160a:	0c f0       	brlt	.+2      	; 0x160e <__vector_8+0x1c2>
    160c:	6d c0       	rjmp	.+218    	; 0x16e8 <__vector_8+0x29c>
    160e:	80 91 3e 05 	lds	r24, 0x053E	; 0x80053e <_ZZ10__vector_8E7codeInc>
    1612:	90 91 3f 05 	lds	r25, 0x053F	; 0x80053f <_ZZ10__vector_8E7codeInc+0x1>
    1616:	00 97       	sbiw	r24, 0x00	; 0
    1618:	09 f4       	brne	.+2      	; 0x161c <__vector_8+0x1d0>
    161a:	44 c0       	rjmp	.+136    	; 0x16a4 <__vector_8+0x258>
    161c:	01 97       	sbiw	r24, 0x01	; 1
    161e:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <_ZZ10__vector_8E7codeInc+0x1>
    1622:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <_ZZ10__vector_8E7codeInc>
    1626:	89 2b       	or	r24, r25
    1628:	09 f0       	breq	.+2      	; 0x162c <__vector_8+0x1e0>
    162a:	84 c0       	rjmp	.+264    	; 0x1734 <__vector_8+0x2e8>
    162c:	ae 01       	movw	r20, r28
    162e:	4e 5f       	subi	r20, 0xFE	; 254
    1630:	5f 4f       	sbci	r21, 0xFF	; 255
    1632:	be 01       	movw	r22, r28
    1634:	6f 5f       	subi	r22, 0xFF	; 255
    1636:	7f 4f       	sbci	r23, 0xFF	; 255
    1638:	80 e0       	ldi	r24, 0x00	; 0
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	0e 94 d5 17 	call	0x2faa	; 0x2faa <_Z9makeMorsePcPhS0_>
    1640:	80 93 40 05 	sts	0x0540, r24	; 0x800540 <_ZZ10__vector_8E3key>
    1644:	99 81       	ldd	r25, Y+1	; 0x01
    1646:	91 11       	cpse	r25, r1
    1648:	11 c0       	rjmp	.+34     	; 0x166c <__vector_8+0x220>
    164a:	9a 81       	ldd	r25, Y+2	; 0x02
    164c:	99 23       	and	r25, r25
    164e:	71 f0       	breq	.+28     	; 0x166c <__vector_8+0x220>
    1650:	10 92 40 05 	sts	0x0540, r1	; 0x800540 <_ZZ10__vector_8E3key>
    1654:	81 e0       	ldi	r24, 0x01	; 1
    1656:	80 93 95 04 	sts	0x0495, r24	; 0x800495 <g_callsign_sent>
    165a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <_ZZ10__vector_8E9playMorse>
    165e:	88 23       	and	r24, r24
    1660:	09 f4       	brne	.+2      	; 0x1664 <__vector_8+0x218>
    1662:	68 c0       	rjmp	.+208    	; 0x1734 <__vector_8+0x2e8>
    1664:	80 e0       	ldi	r24, 0x00	; 0
    1666:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <_Z13sendMorseToneh>
    166a:	17 c0       	rjmp	.+46     	; 0x169a <__vector_8+0x24e>
    166c:	88 23       	and	r24, r24
    166e:	81 f0       	breq	.+32     	; 0x1690 <__vector_8+0x244>
    1670:	80 91 0b 05 	lds	r24, 0x050B	; 0x80050b <_ZL16g_LEDs_Timed_Out>
    1674:	81 11       	cpse	r24, r1
    1676:	04 c0       	rjmp	.+8      	; 0x1680 <__vector_8+0x234>
    1678:	61 e0       	ldi	r22, 0x01	; 1
    167a:	8d e0       	ldi	r24, 0x0D	; 13
    167c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    1680:	80 91 d6 04 	lds	r24, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
    1684:	88 23       	and	r24, r24
    1686:	21 f0       	breq	.+8      	; 0x1690 <__vector_8+0x244>
    1688:	61 e0       	ldi	r22, 0x01	; 1
    168a:	8a e0       	ldi	r24, 0x0A	; 10
    168c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    1690:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <_ZZ10__vector_8E9playMorse>
    1694:	88 23       	and	r24, r24
    1696:	09 f4       	brne	.+2      	; 0x169a <__vector_8+0x24e>
    1698:	4d c0       	rjmp	.+154    	; 0x1734 <__vector_8+0x2e8>
    169a:	80 91 40 05 	lds	r24, 0x0540	; 0x800540 <_ZZ10__vector_8E3key>
    169e:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <_Z13sendMorseToneh>
    16a2:	48 c0       	rjmp	.+144    	; 0x1734 <__vector_8+0x2e8>
    16a4:	80 91 0b 05 	lds	r24, 0x050B	; 0x80050b <_ZL16g_LEDs_Timed_Out>
    16a8:	81 11       	cpse	r24, r1
    16aa:	04 c0       	rjmp	.+8      	; 0x16b4 <__vector_8+0x268>
    16ac:	80 91 a7 04 	lds	r24, 0x04A7	; 0x8004a7 <g_sync_pin_stable>
    16b0:	88 23       	and	r24, r24
    16b2:	d1 f1       	breq	.+116    	; 0x1728 <__vector_8+0x2dc>
    16b4:	80 91 d6 04 	lds	r24, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
    16b8:	88 23       	and	r24, r24
    16ba:	29 f0       	breq	.+10     	; 0x16c6 <__vector_8+0x27a>
    16bc:	60 91 40 05 	lds	r22, 0x0540	; 0x800540 <_ZZ10__vector_8E3key>
    16c0:	8a e0       	ldi	r24, 0x0A	; 10
    16c2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    16c6:	80 91 93 04 	lds	r24, 0x0493	; 0x800493 <g_code_throttle>
    16ca:	90 91 94 04 	lds	r25, 0x0494	; 0x800494 <g_code_throttle+0x1>
    16ce:	90 93 3f 05 	sts	0x053F, r25	; 0x80053f <_ZZ10__vector_8E7codeInc+0x1>
    16d2:	80 93 3e 05 	sts	0x053E, r24	; 0x80053e <_ZZ10__vector_8E7codeInc>
    16d6:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <_ZZ10__vector_8E9playMorse>
    16da:	88 23       	and	r24, r24
    16dc:	59 f1       	breq	.+86     	; 0x1734 <__vector_8+0x2e8>
    16de:	80 91 40 05 	lds	r24, 0x0540	; 0x800540 <_ZZ10__vector_8E3key>
    16e2:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <_Z13sendMorseToneh>
    16e6:	26 c0       	rjmp	.+76     	; 0x1734 <__vector_8+0x2e8>
    16e8:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <g_on_the_air>
    16ec:	90 91 92 04 	lds	r25, 0x0492	; 0x800492 <g_on_the_air+0x1>
    16f0:	89 2b       	or	r24, r25
    16f2:	01 f5       	brne	.+64     	; 0x1734 <__vector_8+0x2e8>
    16f4:	80 91 40 05 	lds	r24, 0x0540	; 0x800540 <_ZZ10__vector_8E3key>
    16f8:	88 23       	and	r24, r24
    16fa:	71 f0       	breq	.+28     	; 0x1718 <__vector_8+0x2cc>
    16fc:	10 92 40 05 	sts	0x0540, r1	; 0x800540 <_ZZ10__vector_8E3key>
    1700:	80 91 a7 04 	lds	r24, 0x04A7	; 0x8004a7 <g_sync_pin_stable>
    1704:	81 11       	cpse	r24, r1
    1706:	04 c0       	rjmp	.+8      	; 0x1710 <__vector_8+0x2c4>
    1708:	60 e0       	ldi	r22, 0x00	; 0
    170a:	8d e0       	ldi	r24, 0x0D	; 13
    170c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    1710:	60 e0       	ldi	r22, 0x00	; 0
    1712:	8a e0       	ldi	r24, 0x0A	; 10
    1714:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    1718:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <_ZZ10__vector_8E9playMorse>
    171c:	88 23       	and	r24, r24
    171e:	51 f0       	breq	.+20     	; 0x1734 <__vector_8+0x2e8>
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <_Z13sendMorseToneh>
    1726:	06 c0       	rjmp	.+12     	; 0x1734 <__vector_8+0x2e8>
    1728:	60 91 40 05 	lds	r22, 0x0540	; 0x800540 <_ZZ10__vector_8E3key>
    172c:	8d e0       	ldi	r24, 0x0D	; 13
    172e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    1732:	c0 cf       	rjmp	.-128    	; 0x16b4 <__vector_8+0x268>
    1734:	0f 90       	pop	r0
    1736:	0f 90       	pop	r0
    1738:	df 91       	pop	r29
    173a:	cf 91       	pop	r28
    173c:	ff 91       	pop	r31
    173e:	ef 91       	pop	r30
    1740:	bf 91       	pop	r27
    1742:	af 91       	pop	r26
    1744:	9f 91       	pop	r25
    1746:	8f 91       	pop	r24
    1748:	7f 91       	pop	r23
    174a:	6f 91       	pop	r22
    174c:	5f 91       	pop	r21
    174e:	4f 91       	pop	r20
    1750:	3f 91       	pop	r19
    1752:	2f 91       	pop	r18
    1754:	0f 90       	pop	r0
    1756:	0f be       	out	0x3f, r0	; 63
    1758:	0f 90       	pop	r0
    175a:	1f 90       	pop	r1
    175c:	18 95       	reti

0000175e <__vector_11>:
    175e:	1f 92       	push	r1
    1760:	0f 92       	push	r0
    1762:	0f b6       	in	r0, 0x3f	; 63
    1764:	0f 92       	push	r0
    1766:	11 24       	eor	r1, r1
    1768:	2f 93       	push	r18
    176a:	3f 93       	push	r19
    176c:	4f 93       	push	r20
    176e:	5f 93       	push	r21
    1770:	6f 93       	push	r22
    1772:	7f 93       	push	r23
    1774:	8f 93       	push	r24
    1776:	9f 93       	push	r25
    1778:	af 93       	push	r26
    177a:	bf 93       	push	r27
    177c:	ef 93       	push	r30
    177e:	ff 93       	push	r31
    1780:	80 91 8c 04 	lds	r24, 0x048C	; 0x80048c <g_seconds_since_sync>
    1784:	90 91 8d 04 	lds	r25, 0x048D	; 0x80048d <g_seconds_since_sync+0x1>
    1788:	a0 91 8e 04 	lds	r26, 0x048E	; 0x80048e <g_seconds_since_sync+0x2>
    178c:	b0 91 8f 04 	lds	r27, 0x048F	; 0x80048f <g_seconds_since_sync+0x3>
    1790:	89 2b       	or	r24, r25
    1792:	8a 2b       	or	r24, r26
    1794:	8b 2b       	or	r24, r27
    1796:	81 f4       	brne	.+32     	; 0x17b8 <__vector_11+0x5a>
    1798:	80 91 a0 04 	lds	r24, 0x04A0	; 0x8004a0 <g_id_interval>
    179c:	90 91 a1 04 	lds	r25, 0x04A1	; 0x8004a1 <g_id_interval+0x1>
    17a0:	90 93 42 05 	sts	0x0542, r25	; 0x800542 <_ZZ11__vector_11E12id_countdown+0x1>
    17a4:	80 93 41 05 	sts	0x0541, r24	; 0x800541 <_ZZ11__vector_11E12id_countdown>
    17a8:	81 e0       	ldi	r24, 0x01	; 1
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <g_fox_counter+0x1>
    17b0:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <g_fox_counter>
    17b4:	10 92 a4 04 	sts	0x04A4, r1	; 0x8004a4 <g_lastSeconds>
    17b8:	80 91 8c 04 	lds	r24, 0x048C	; 0x80048c <g_seconds_since_sync>
    17bc:	90 91 8d 04 	lds	r25, 0x048D	; 0x80048d <g_seconds_since_sync+0x1>
    17c0:	a0 91 8e 04 	lds	r26, 0x048E	; 0x80048e <g_seconds_since_sync+0x2>
    17c4:	b0 91 8f 04 	lds	r27, 0x048F	; 0x80048f <g_seconds_since_sync+0x3>
    17c8:	01 96       	adiw	r24, 0x01	; 1
    17ca:	a1 1d       	adc	r26, r1
    17cc:	b1 1d       	adc	r27, r1
    17ce:	80 93 8c 04 	sts	0x048C, r24	; 0x80048c <g_seconds_since_sync>
    17d2:	90 93 8d 04 	sts	0x048D, r25	; 0x80048d <g_seconds_since_sync+0x1>
    17d6:	a0 93 8e 04 	sts	0x048E, r26	; 0x80048e <g_seconds_since_sync+0x2>
    17da:	b0 93 8f 04 	sts	0x048F, r27	; 0x80048f <g_seconds_since_sync+0x3>
    17de:	80 91 99 04 	lds	r24, 0x0499	; 0x800499 <g_fox_seconds_into_interval>
    17e2:	90 91 9a 04 	lds	r25, 0x049A	; 0x80049a <g_fox_seconds_into_interval+0x1>
    17e6:	01 96       	adiw	r24, 0x01	; 1
    17e8:	90 93 9a 04 	sts	0x049A, r25	; 0x80049a <g_fox_seconds_into_interval+0x1>
    17ec:	80 93 99 04 	sts	0x0499, r24	; 0x800499 <g_fox_seconds_into_interval>
    17f0:	80 91 41 05 	lds	r24, 0x0541	; 0x800541 <_ZZ11__vector_11E12id_countdown>
    17f4:	90 91 42 05 	lds	r25, 0x0542	; 0x800542 <_ZZ11__vector_11E12id_countdown+0x1>
    17f8:	00 97       	sbiw	r24, 0x00	; 0
    17fa:	29 f0       	breq	.+10     	; 0x1806 <__vector_11+0xa8>
    17fc:	01 97       	sbiw	r24, 0x01	; 1
    17fe:	90 93 42 05 	sts	0x0542, r25	; 0x800542 <_ZZ11__vector_11E12id_countdown+0x1>
    1802:	80 93 41 05 	sts	0x0541, r24	; 0x800541 <_ZZ11__vector_11E12id_countdown>
    1806:	80 91 9b 04 	lds	r24, 0x049B	; 0x80049b <g_number_of_foxes>
    180a:	90 91 9c 04 	lds	r25, 0x049C	; 0x80049c <g_number_of_foxes+0x1>
    180e:	89 2b       	or	r24, r25
    1810:	09 f4       	brne	.+2      	; 0x1814 <__vector_11+0xb6>
    1812:	55 c0       	rjmp	.+170    	; 0x18be <__vector_11+0x160>
    1814:	60 91 8c 04 	lds	r22, 0x048C	; 0x80048c <g_seconds_since_sync>
    1818:	70 91 8d 04 	lds	r23, 0x048D	; 0x80048d <g_seconds_since_sync+0x1>
    181c:	80 91 8e 04 	lds	r24, 0x048E	; 0x80048e <g_seconds_since_sync+0x2>
    1820:	90 91 8f 04 	lds	r25, 0x048F	; 0x80048f <g_seconds_since_sync+0x3>
    1824:	20 91 97 04 	lds	r18, 0x0497	; 0x800497 <g_on_air_interval>
    1828:	30 91 98 04 	lds	r19, 0x0498	; 0x800498 <g_on_air_interval+0x1>
    182c:	03 2e       	mov	r0, r19
    182e:	00 0c       	add	r0, r0
    1830:	44 0b       	sbc	r20, r20
    1832:	55 0b       	sbc	r21, r21
    1834:	0e 94 1f 1c 	call	0x383e	; 0x383e <__divmodsi4>
    1838:	67 2b       	or	r22, r23
    183a:	68 2b       	or	r22, r24
    183c:	69 2b       	or	r22, r25
    183e:	09 f4       	brne	.+2      	; 0x1842 <__vector_11+0xe4>
    1840:	60 c0       	rjmp	.+192    	; 0x1902 <__vector_11+0x1a4>
    1842:	3d c0       	rjmp	.+122    	; 0x18be <__vector_11+0x160>
    1844:	81 e0       	ldi	r24, 0x01	; 1
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <g_fox_counter+0x1>
    184c:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <g_fox_counter>
    1850:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <g_sync_enabled>
    1854:	88 23       	and	r24, r24
    1856:	a1 f0       	breq	.+40     	; 0x1880 <__vector_11+0x122>
    1858:	ed e6       	ldi	r30, 0x6D	; 109
    185a:	f0 e0       	ldi	r31, 0x00	; 0
    185c:	80 81       	ld	r24, Z
    185e:	87 7f       	andi	r24, 0xF7	; 247
    1860:	80 83       	st	Z, r24
    1862:	e8 e6       	ldi	r30, 0x68	; 104
    1864:	f0 e0       	ldi	r31, 0x00	; 0
    1866:	80 81       	ld	r24, Z
    1868:	8b 7f       	andi	r24, 0xFB	; 251
    186a:	80 83       	st	Z, r24
    186c:	60 e0       	ldi	r22, 0x00	; 0
    186e:	84 e0       	ldi	r24, 0x04	; 4
    1870:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
    1874:	61 e0       	ldi	r22, 0x01	; 1
    1876:	84 e0       	ldi	r24, 0x04	; 4
    1878:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
    187c:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <g_sync_enabled>
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	80 93 0b 05 	sts	0x050B, r24	; 0x80050b <_ZL16g_LEDs_Timed_Out>
    1886:	60 e0       	ldi	r22, 0x00	; 0
    1888:	8d e0       	ldi	r24, 0x0D	; 13
    188a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    188e:	81 e0       	ldi	r24, 0x01	; 1
    1890:	80 93 9d 04 	sts	0x049D, r24	; 0x80049d <g_fox_transition>
    1894:	10 92 9a 04 	sts	0x049A, r1	; 0x80049a <g_fox_seconds_into_interval+0x1>
    1898:	10 92 99 04 	sts	0x0499, r1	; 0x800499 <g_fox_seconds_into_interval>
    189c:	80 91 41 05 	lds	r24, 0x0541	; 0x800541 <_ZZ11__vector_11E12id_countdown>
    18a0:	90 91 42 05 	lds	r25, 0x0542	; 0x800542 <_ZZ11__vector_11E12id_countdown+0x1>
    18a4:	89 2b       	or	r24, r25
    18a6:	59 f4       	brne	.+22     	; 0x18be <__vector_11+0x160>
    18a8:	80 91 a0 04 	lds	r24, 0x04A0	; 0x8004a0 <g_id_interval>
    18ac:	90 91 a1 04 	lds	r25, 0x04A1	; 0x8004a1 <g_id_interval+0x1>
    18b0:	90 93 42 05 	sts	0x0542, r25	; 0x800542 <_ZZ11__vector_11E12id_countdown+0x1>
    18b4:	80 93 41 05 	sts	0x0541, r24	; 0x800541 <_ZZ11__vector_11E12id_countdown>
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	80 93 a2 04 	sts	0x04A2, r24	; 0x8004a2 <g_time_to_ID>
    18be:	80 91 d5 04 	lds	r24, 0x04D5	; 0x8004d5 <_ZL20g_enable_start_timer>
    18c2:	88 23       	and	r24, r24
    18c4:	a1 f1       	breq	.+104    	; 0x192e <__vector_11+0x1d0>
    18c6:	80 91 8c 04 	lds	r24, 0x048C	; 0x80048c <g_seconds_since_sync>
    18ca:	90 91 8d 04 	lds	r25, 0x048D	; 0x80048d <g_seconds_since_sync+0x1>
    18ce:	a0 91 8e 04 	lds	r26, 0x048E	; 0x80048e <g_seconds_since_sync+0x2>
    18d2:	b0 91 8f 04 	lds	r27, 0x048F	; 0x80048f <g_seconds_since_sync+0x3>
    18d6:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <g_startclock_interval>
    18da:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <g_startclock_interval+0x1>
    18de:	bc 01       	movw	r22, r24
    18e0:	cd 01       	movw	r24, r26
    18e2:	65 5f       	subi	r22, 0xF5	; 245
    18e4:	7f 4f       	sbci	r23, 0xFF	; 255
    18e6:	8f 4f       	sbci	r24, 0xFF	; 255
    18e8:	9f 4f       	sbci	r25, 0xFF	; 255
    18ea:	03 2e       	mov	r0, r19
    18ec:	00 0c       	add	r0, r0
    18ee:	44 0b       	sbc	r20, r20
    18f0:	55 0b       	sbc	r21, r21
    18f2:	0e 94 1f 1c 	call	0x383e	; 0x383e <__divmodsi4>
    18f6:	6b 30       	cpi	r22, 0x0B	; 11
    18f8:	71 05       	cpc	r23, r1
    18fa:	81 05       	cpc	r24, r1
    18fc:	91 05       	cpc	r25, r1
    18fe:	d4 f0       	brlt	.+52     	; 0x1934 <__vector_11+0x1d6>
    1900:	16 c0       	rjmp	.+44     	; 0x192e <__vector_11+0x1d0>
    1902:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <g_fox_counter>
    1906:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <g_fox_counter+0x1>
    190a:	01 96       	adiw	r24, 0x01	; 1
    190c:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <g_fox_counter+0x1>
    1910:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <g_fox_counter>
    1914:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <g_fox_counter>
    1918:	30 91 08 01 	lds	r19, 0x0108	; 0x800108 <g_fox_counter+0x1>
    191c:	80 91 9b 04 	lds	r24, 0x049B	; 0x80049b <g_number_of_foxes>
    1920:	90 91 9c 04 	lds	r25, 0x049C	; 0x80049c <g_number_of_foxes+0x1>
    1924:	82 17       	cp	r24, r18
    1926:	93 07       	cpc	r25, r19
    1928:	0c f4       	brge	.+2      	; 0x192c <__vector_11+0x1ce>
    192a:	8c cf       	rjmp	.-232    	; 0x1844 <__vector_11+0xe6>
    192c:	b0 cf       	rjmp	.-160    	; 0x188e <__vector_11+0x130>
    192e:	10 92 a4 04 	sts	0x04A4, r1	; 0x8004a4 <g_lastSeconds>
    1932:	1a c0       	rjmp	.+52     	; 0x1968 <__vector_11+0x20a>
    1934:	80 91 8c 04 	lds	r24, 0x048C	; 0x80048c <g_seconds_since_sync>
    1938:	90 91 8d 04 	lds	r25, 0x048D	; 0x80048d <g_seconds_since_sync+0x1>
    193c:	a0 91 8e 04 	lds	r26, 0x048E	; 0x80048e <g_seconds_since_sync+0x2>
    1940:	b0 91 8f 04 	lds	r27, 0x048F	; 0x80048f <g_seconds_since_sync+0x3>
    1944:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <g_startclock_interval>
    1948:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <g_startclock_interval+0x1>
    194c:	bc 01       	movw	r22, r24
    194e:	cd 01       	movw	r24, r26
    1950:	65 5f       	subi	r22, 0xF5	; 245
    1952:	7f 4f       	sbci	r23, 0xFF	; 255
    1954:	8f 4f       	sbci	r24, 0xFF	; 255
    1956:	9f 4f       	sbci	r25, 0xFF	; 255
    1958:	03 2e       	mov	r0, r19
    195a:	00 0c       	add	r0, r0
    195c:	44 0b       	sbc	r20, r20
    195e:	55 0b       	sbc	r21, r21
    1960:	0e 94 1f 1c 	call	0x383e	; 0x383e <__divmodsi4>
    1964:	60 93 a4 04 	sts	0x04A4, r22	; 0x8004a4 <g_lastSeconds>
    1968:	ff 91       	pop	r31
    196a:	ef 91       	pop	r30
    196c:	bf 91       	pop	r27
    196e:	af 91       	pop	r26
    1970:	9f 91       	pop	r25
    1972:	8f 91       	pop	r24
    1974:	7f 91       	pop	r23
    1976:	6f 91       	pop	r22
    1978:	5f 91       	pop	r21
    197a:	4f 91       	pop	r20
    197c:	3f 91       	pop	r19
    197e:	2f 91       	pop	r18
    1980:	0f 90       	pop	r0
    1982:	0f be       	out	0x3f, r0	; 63
    1984:	0f 90       	pop	r0
    1986:	1f 90       	pop	r1
    1988:	18 95       	reti

0000198a <__vector_14>:
    198a:	1f 92       	push	r1
    198c:	0f 92       	push	r0
    198e:	0f b6       	in	r0, 0x3f	; 63
    1990:	0f 92       	push	r0
    1992:	11 24       	eor	r1, r1
    1994:	2f 93       	push	r18
    1996:	3f 93       	push	r19
    1998:	4f 93       	push	r20
    199a:	5f 93       	push	r21
    199c:	6f 93       	push	r22
    199e:	7f 93       	push	r23
    19a0:	8f 93       	push	r24
    19a2:	9f 93       	push	r25
    19a4:	af 93       	push	r26
    19a6:	bf 93       	push	r27
    19a8:	ef 93       	push	r30
    19aa:	ff 93       	push	r31
    19ac:	80 91 43 05 	lds	r24, 0x0543	; 0x800543 <_ZZ11__vector_14E6toggle>
    19b0:	91 e0       	ldi	r25, 0x01	; 1
    19b2:	81 11       	cpse	r24, r1
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	90 93 43 05 	sts	0x0543, r25	; 0x800543 <_ZZ11__vector_14E6toggle>
    19ba:	90 91 a3 04 	lds	r25, 0x04A3	; 0x8004a3 <g_audio_tone_state>
    19be:	99 23       	and	r25, r25
    19c0:	61 f0       	breq	.+24     	; 0x19da <__vector_14+0x50>
    19c2:	81 11       	cpse	r24, r1
    19c4:	05 c0       	rjmp	.+10     	; 0x19d0 <__vector_14+0x46>
    19c6:	61 e0       	ldi	r22, 0x01	; 1
    19c8:	89 e0       	ldi	r24, 0x09	; 9
    19ca:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    19ce:	09 c0       	rjmp	.+18     	; 0x19e2 <__vector_14+0x58>
    19d0:	60 e0       	ldi	r22, 0x00	; 0
    19d2:	89 e0       	ldi	r24, 0x09	; 9
    19d4:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    19d8:	04 c0       	rjmp	.+8      	; 0x19e2 <__vector_14+0x58>
    19da:	60 e0       	ldi	r22, 0x00	; 0
    19dc:	89 e0       	ldi	r24, 0x09	; 9
    19de:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    19e2:	ff 91       	pop	r31
    19e4:	ef 91       	pop	r30
    19e6:	bf 91       	pop	r27
    19e8:	af 91       	pop	r26
    19ea:	9f 91       	pop	r25
    19ec:	8f 91       	pop	r24
    19ee:	7f 91       	pop	r23
    19f0:	6f 91       	pop	r22
    19f2:	5f 91       	pop	r21
    19f4:	4f 91       	pop	r20
    19f6:	3f 91       	pop	r19
    19f8:	2f 91       	pop	r18
    19fa:	0f 90       	pop	r0
    19fc:	0f be       	out	0x3f, r0	; 63
    19fe:	0f 90       	pop	r0
    1a00:	1f 90       	pop	r1
    1a02:	18 95       	reti

00001a04 <_Z4loopv>:
    1a04:	2f 92       	push	r2
    1a06:	3f 92       	push	r3
    1a08:	4f 92       	push	r4
    1a0a:	5f 92       	push	r5
    1a0c:	6f 92       	push	r6
    1a0e:	7f 92       	push	r7
    1a10:	8f 92       	push	r8
    1a12:	9f 92       	push	r9
    1a14:	af 92       	push	r10
    1a16:	bf 92       	push	r11
    1a18:	cf 92       	push	r12
    1a1a:	df 92       	push	r13
    1a1c:	ef 92       	push	r14
    1a1e:	ff 92       	push	r15
    1a20:	0f 93       	push	r16
    1a22:	1f 93       	push	r17
    1a24:	cf 93       	push	r28
    1a26:	df 93       	push	r29
    1a28:	1f 92       	push	r1
    1a2a:	cd b7       	in	r28, 0x3d	; 61
    1a2c:	de b7       	in	r29, 0x3e	; 62
    1a2e:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <_Z17handleLinkBusMsgsv>
    1a32:	80 91 91 04 	lds	r24, 0x0491	; 0x800491 <g_on_the_air>
    1a36:	90 91 92 04 	lds	r25, 0x0492	; 0x800492 <g_on_the_air+0x1>
    1a3a:	89 2b       	or	r24, r25
    1a3c:	29 f0       	breq	.+10     	; 0x1a48 <_Z4loopv+0x44>
    1a3e:	80 91 44 05 	lds	r24, 0x0544	; 0x800544 <_ZZ4loopvE7proceed>
    1a42:	88 23       	and	r24, r24
    1a44:	09 f4       	brne	.+2      	; 0x1a48 <_Z4loopv+0x44>
    1a46:	ec c0       	rjmp	.+472    	; 0x1c20 <_Z4loopv+0x21c>
    1a48:	10 92 44 05 	sts	0x0544, r1	; 0x800544 <_ZZ4loopvE7proceed>
    1a4c:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1a50:	86 30       	cpi	r24, 0x06	; 6
    1a52:	91 f4       	brne	.+36     	; 0x1a78 <_Z4loopv+0x74>
    1a54:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <g_fox_counter>
    1a58:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <g_fox_counter+0x1>
    1a5c:	bc 01       	movw	r22, r24
    1a5e:	66 0f       	add	r22, r22
    1a60:	77 1f       	adc	r23, r23
    1a62:	68 0f       	add	r22, r24
    1a64:	79 1f       	adc	r23, r25
    1a66:	66 0f       	add	r22, r22
    1a68:	77 1f       	adc	r23, r23
    1a6a:	66 57       	subi	r22, 0x76	; 118
    1a6c:	7d 4f       	sbci	r23, 0xFD	; 253
    1a6e:	88 ea       	ldi	r24, 0xA8	; 168
    1a70:	94 e0       	ldi	r25, 0x04	; 4
    1a72:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <strcpy>
    1a76:	27 c0       	rjmp	.+78     	; 0x1ac6 <_Z4loopv+0xc2>
    1a78:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1a7c:	83 31       	cpi	r24, 0x13	; 19
    1a7e:	99 f4       	brne	.+38     	; 0x1aa6 <_Z4loopv+0xa2>
    1a80:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <g_fox_counter>
    1a84:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <g_fox_counter+0x1>
    1a88:	08 96       	adiw	r24, 0x08	; 8
    1a8a:	bc 01       	movw	r22, r24
    1a8c:	66 0f       	add	r22, r22
    1a8e:	77 1f       	adc	r23, r23
    1a90:	68 0f       	add	r22, r24
    1a92:	79 1f       	adc	r23, r25
    1a94:	66 0f       	add	r22, r22
    1a96:	77 1f       	adc	r23, r23
    1a98:	66 57       	subi	r22, 0x76	; 118
    1a9a:	7d 4f       	sbci	r23, 0xFD	; 253
    1a9c:	88 ea       	ldi	r24, 0xA8	; 168
    1a9e:	94 e0       	ldi	r25, 0x04	; 4
    1aa0:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <strcpy>
    1aa4:	10 c0       	rjmp	.+32     	; 0x1ac6 <_Z4loopv+0xc2>
    1aa6:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	bc 01       	movw	r22, r24
    1aae:	66 0f       	add	r22, r22
    1ab0:	77 1f       	adc	r23, r23
    1ab2:	68 0f       	add	r22, r24
    1ab4:	79 1f       	adc	r23, r25
    1ab6:	66 0f       	add	r22, r22
    1ab8:	77 1f       	adc	r23, r23
    1aba:	66 57       	subi	r22, 0x76	; 118
    1abc:	7d 4f       	sbci	r23, 0xFD	; 253
    1abe:	88 ea       	ldi	r24, 0xA8	; 168
    1ac0:	94 e0       	ldi	r25, 0x04	; 4
    1ac2:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <strcpy>
    1ac6:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1aca:	86 30       	cpi	r24, 0x06	; 6
    1acc:	09 f1       	breq	.+66     	; 0x1b10 <_Z4loopv+0x10c>
    1ace:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1ad2:	83 31       	cpi	r24, 0x13	; 19
    1ad4:	e9 f0       	breq	.+58     	; 0x1b10 <_Z4loopv+0x10c>
    1ad6:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1ada:	88 23       	and	r24, r24
    1adc:	c9 f0       	breq	.+50     	; 0x1b10 <_Z4loopv+0x10c>
    1ade:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1ae2:	87 30       	cpi	r24, 0x07	; 7
    1ae4:	a9 f0       	breq	.+42     	; 0x1b10 <_Z4loopv+0x10c>
    1ae6:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1aea:	88 30       	cpi	r24, 0x08	; 8
    1aec:	89 f0       	breq	.+34     	; 0x1b10 <_Z4loopv+0x10c>
    1aee:	20 91 90 04 	lds	r18, 0x0490	; 0x800490 <g_fox>
    1af2:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <g_fox_counter>
    1af6:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <g_fox_counter+0x1>
    1afa:	80 91 9e 04 	lds	r24, 0x049E	; 0x80049e <g_fox_id_offset>
    1afe:	90 91 9f 04 	lds	r25, 0x049F	; 0x80049f <g_fox_id_offset+0x1>
    1b02:	30 e0       	ldi	r19, 0x00	; 0
    1b04:	84 0f       	add	r24, r20
    1b06:	95 1f       	adc	r25, r21
    1b08:	28 17       	cp	r18, r24
    1b0a:	39 07       	cpc	r19, r25
    1b0c:	09 f0       	breq	.+2      	; 0x1b10 <_Z4loopv+0x10c>
    1b0e:	72 c0       	rjmp	.+228    	; 0x1bf4 <_Z4loopv+0x1f0>
    1b10:	81 e0       	ldi	r24, 0x01	; 1
    1b12:	89 83       	std	Y+1, r24	; 0x01
    1b14:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <_ZL19g_pattern_codespeed>
    1b18:	70 e0       	ldi	r23, 0x00	; 0
    1b1a:	82 e8       	ldi	r24, 0x82	; 130
    1b1c:	9b e1       	ldi	r25, 0x1B	; 27
    1b1e:	0e 94 e9 1b 	call	0x37d2	; 0x37d2 <__divmodhi4>
    1b22:	cb 01       	movw	r24, r22
    1b24:	6a e0       	ldi	r22, 0x0A	; 10
    1b26:	70 e0       	ldi	r23, 0x00	; 0
    1b28:	0e 94 e9 1b 	call	0x37d2	; 0x37d2 <__divmodhi4>
    1b2c:	66 0f       	add	r22, r22
    1b2e:	77 1f       	adc	r23, r23
    1b30:	70 93 94 04 	sts	0x0494, r23	; 0x800494 <g_code_throttle+0x1>
    1b34:	60 93 93 04 	sts	0x0493, r22	; 0x800493 <g_code_throttle>
    1b38:	40 e0       	ldi	r20, 0x00	; 0
    1b3a:	50 e0       	ldi	r21, 0x00	; 0
    1b3c:	be 01       	movw	r22, r28
    1b3e:	6f 5f       	subi	r22, 0xFF	; 255
    1b40:	7f 4f       	sbci	r23, 0xFF	; 255
    1b42:	88 ea       	ldi	r24, 0xA8	; 168
    1b44:	94 e0       	ldi	r25, 0x04	; 4
    1b46:	0e 94 d5 17 	call	0x2faa	; 0x2faa <_Z9makeMorsePcPhS0_>
    1b4a:	80 91 a2 04 	lds	r24, 0x04A2	; 0x8004a2 <g_time_to_ID>
    1b4e:	81 11       	cpse	r24, r1
    1b50:	0b c0       	rjmp	.+22     	; 0x1b68 <_Z4loopv+0x164>
    1b52:	20 91 a0 04 	lds	r18, 0x04A0	; 0x8004a0 <g_id_interval>
    1b56:	30 91 a1 04 	lds	r19, 0x04A1	; 0x8004a1 <g_id_interval+0x1>
    1b5a:	80 91 97 04 	lds	r24, 0x0497	; 0x800497 <g_on_air_interval>
    1b5e:	90 91 98 04 	lds	r25, 0x0498	; 0x800498 <g_on_air_interval+0x1>
    1b62:	82 17       	cp	r24, r18
    1b64:	93 07       	cpc	r25, r19
    1b66:	3c f1       	brlt	.+78     	; 0x1bb6 <_Z4loopv+0x1b2>
    1b68:	00 91 97 04 	lds	r16, 0x0497	; 0x800497 <g_on_air_interval>
    1b6c:	10 91 98 04 	lds	r17, 0x0498	; 0x800498 <g_on_air_interval+0x1>
    1b70:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    1b74:	70 e0       	ldi	r23, 0x00	; 0
    1b76:	8d eb       	ldi	r24, 0xBD	; 189
    1b78:	94 e0       	ldi	r25, 0x04	; 4
    1b7a:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_Z26timeRequiredToSendStrAtWPMPcj>
    1b7e:	8c 50       	subi	r24, 0x0C	; 12
    1b80:	9e 4f       	sbci	r25, 0xFE	; 254
    1b82:	9c 01       	movw	r18, r24
    1b84:	36 95       	lsr	r19
    1b86:	27 95       	ror	r18
    1b88:	36 95       	lsr	r19
    1b8a:	27 95       	ror	r18
    1b8c:	36 95       	lsr	r19
    1b8e:	27 95       	ror	r18
    1b90:	a5 ec       	ldi	r26, 0xC5	; 197
    1b92:	b0 e2       	ldi	r27, 0x20	; 32
    1b94:	0e 94 44 1c 	call	0x3888	; 0x3888 <__umulhisi3>
    1b98:	92 95       	swap	r25
    1b9a:	82 95       	swap	r24
    1b9c:	8f 70       	andi	r24, 0x0F	; 15
    1b9e:	89 27       	eor	r24, r25
    1ba0:	9f 70       	andi	r25, 0x0F	; 15
    1ba2:	89 27       	eor	r24, r25
    1ba4:	08 1b       	sub	r16, r24
    1ba6:	19 0b       	sbc	r17, r25
    1ba8:	10 93 1a 01 	sts	0x011A, r17	; 0x80011a <_ZZ4loopvE11time_for_id+0x1>
    1bac:	00 93 19 01 	sts	0x0119, r16	; 0x800119 <_ZZ4loopvE11time_for_id>
    1bb0:	10 92 a2 04 	sts	0x04A2, r1	; 0x8004a2 <g_time_to_ID>
    1bb4:	0a c0       	rjmp	.+20     	; 0x1bca <_Z4loopv+0x1c6>
    1bb6:	80 91 97 04 	lds	r24, 0x0497	; 0x800497 <g_on_air_interval>
    1bba:	90 91 98 04 	lds	r25, 0x0498	; 0x800498 <g_on_air_interval+0x1>
    1bbe:	8d 59       	subi	r24, 0x9D	; 157
    1bc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc2:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <_ZZ4loopvE11time_for_id+0x1>
    1bc6:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <_ZZ4loopvE11time_for_id>
    1bca:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <_ZZ4loopvE6id_set>
    1bce:	81 e0       	ldi	r24, 0x01	; 1
    1bd0:	90 e0       	ldi	r25, 0x00	; 0
    1bd2:	90 93 92 04 	sts	0x0492, r25	; 0x800492 <g_on_the_air+0x1>
    1bd6:	80 93 91 04 	sts	0x0491, r24	; 0x800491 <g_on_the_air>
    1bda:	10 92 95 04 	sts	0x0495, r1	; 0x800495 <g_callsign_sent>
    1bde:	10 92 9d 04 	sts	0x049D, r1	; 0x80049d <g_fox_transition>
    1be2:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <g_fox_counter>
    1be6:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <g_fox_counter+0x1>
    1bea:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <g_fox_tone_offset+0x1>
    1bee:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <g_fox_tone_offset>
    1bf2:	b6 c1       	rjmp	.+876    	; 0x1f60 <_Z4loopv+0x55c>
    1bf4:	80 91 0b 05 	lds	r24, 0x050B	; 0x80050b <_ZL16g_LEDs_Timed_Out>
    1bf8:	81 11       	cpse	r24, r1
    1bfa:	b2 c1       	rjmp	.+868    	; 0x1f60 <_Z4loopv+0x55c>
    1bfc:	80 91 96 04 	lds	r24, 0x0496	; 0x800496 <g_blinky_time>
    1c00:	88 23       	and	r24, r24
    1c02:	49 f0       	breq	.+18     	; 0x1c16 <_Z4loopv+0x212>
    1c04:	80 91 a7 04 	lds	r24, 0x04A7	; 0x8004a7 <g_sync_pin_stable>
    1c08:	81 11       	cpse	r24, r1
    1c0a:	aa c1       	rjmp	.+852    	; 0x1f60 <_Z4loopv+0x55c>
    1c0c:	60 e0       	ldi	r22, 0x00	; 0
    1c0e:	8d e0       	ldi	r24, 0x0D	; 13
    1c10:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    1c14:	a5 c1       	rjmp	.+842    	; 0x1f60 <_Z4loopv+0x55c>
    1c16:	61 e0       	ldi	r22, 0x01	; 1
    1c18:	8d e0       	ldi	r24, 0x0D	; 13
    1c1a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    1c1e:	a0 c1       	rjmp	.+832    	; 0x1f60 <_Z4loopv+0x55c>
    1c20:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <_ZZ4loopvE6id_set>
    1c24:	81 11       	cpse	r24, r1
    1c26:	78 c1       	rjmp	.+752    	; 0x1f18 <_Z4loopv+0x514>
    1c28:	20 91 99 04 	lds	r18, 0x0499	; 0x800499 <g_fox_seconds_into_interval>
    1c2c:	30 91 9a 04 	lds	r19, 0x049A	; 0x80049a <g_fox_seconds_into_interval+0x1>
    1c30:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <_ZZ4loopvE11time_for_id>
    1c34:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <_ZZ4loopvE11time_for_id+0x1>
    1c38:	28 17       	cp	r18, r24
    1c3a:	39 07       	cpc	r19, r25
    1c3c:	09 f0       	breq	.+2      	; 0x1c40 <_Z4loopv+0x23c>
    1c3e:	6c c1       	rjmp	.+728    	; 0x1f18 <_Z4loopv+0x514>
    1c40:	49 c1       	rjmp	.+658    	; 0x1ed4 <_Z4loopv+0x4d0>
    1c42:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1c46:	84 31       	cpi	r24, 0x14	; 20
    1c48:	08 f4       	brcc	.+2      	; 0x1c4c <_Z4loopv+0x248>
    1c4a:	6c c1       	rjmp	.+728    	; 0x1f24 <_Z4loopv+0x520>
    1c4c:	09 c0       	rjmp	.+18     	; 0x1c60 <_Z4loopv+0x25c>
    1c4e:	10 92 9d 04 	sts	0x049D, r1	; 0x80049d <g_fox_transition>
    1c52:	10 92 92 04 	sts	0x0492, r1	; 0x800492 <g_on_the_air+0x1>
    1c56:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <g_on_the_air>
    1c5a:	81 e0       	ldi	r24, 0x01	; 1
    1c5c:	80 93 44 05 	sts	0x0544, r24	; 0x800544 <_ZZ4loopvE7proceed>
    1c60:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1c64:	86 30       	cpi	r24, 0x06	; 6
    1c66:	21 f0       	breq	.+8      	; 0x1c70 <_Z4loopv+0x26c>
    1c68:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1c6c:	83 31       	cpi	r24, 0x13	; 19
    1c6e:	49 f4       	brne	.+18     	; 0x1c82 <_Z4loopv+0x27e>
    1c70:	80 91 95 04 	lds	r24, 0x0495	; 0x800495 <g_callsign_sent>
    1c74:	88 23       	and	r24, r24
    1c76:	69 f1       	breq	.+90     	; 0x1cd2 <_Z4loopv+0x2ce>
    1c78:	80 91 9d 04 	lds	r24, 0x049D	; 0x80049d <g_fox_transition>
    1c7c:	81 11       	cpse	r24, r1
    1c7e:	57 c1       	rjmp	.+686    	; 0x1f2e <_Z4loopv+0x52a>
    1c80:	28 c0       	rjmp	.+80     	; 0x1cd2 <_Z4loopv+0x2ce>
    1c82:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1c86:	88 23       	and	r24, r24
    1c88:	41 f0       	breq	.+16     	; 0x1c9a <_Z4loopv+0x296>
    1c8a:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1c8e:	87 30       	cpi	r24, 0x07	; 7
    1c90:	21 f0       	breq	.+8      	; 0x1c9a <_Z4loopv+0x296>
    1c92:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1c96:	88 30       	cpi	r24, 0x08	; 8
    1c98:	49 f4       	brne	.+18     	; 0x1cac <_Z4loopv+0x2a8>
    1c9a:	80 91 95 04 	lds	r24, 0x0495	; 0x800495 <g_callsign_sent>
    1c9e:	88 23       	and	r24, r24
    1ca0:	09 f4       	brne	.+2      	; 0x1ca4 <_Z4loopv+0x2a0>
    1ca2:	5e c1       	rjmp	.+700    	; 0x1f60 <_Z4loopv+0x55c>
    1ca4:	81 e0       	ldi	r24, 0x01	; 1
    1ca6:	80 93 44 05 	sts	0x0544, r24	; 0x800544 <_ZZ4loopvE7proceed>
    1caa:	5a c1       	rjmp	.+692    	; 0x1f60 <_Z4loopv+0x55c>
    1cac:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1cb0:	89 30       	cpi	r24, 0x09	; 9
    1cb2:	08 f4       	brcc	.+2      	; 0x1cb6 <_Z4loopv+0x2b2>
    1cb4:	45 c1       	rjmp	.+650    	; 0x1f40 <_Z4loopv+0x53c>
    1cb6:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1cba:	83 31       	cpi	r24, 0x13	; 19
    1cbc:	08 f0       	brcs	.+2      	; 0x1cc0 <_Z4loopv+0x2bc>
    1cbe:	40 c1       	rjmp	.+640    	; 0x1f40 <_Z4loopv+0x53c>
    1cc0:	80 91 95 04 	lds	r24, 0x0495	; 0x800495 <g_callsign_sent>
    1cc4:	81 11       	cpse	r24, r1
    1cc6:	37 c1       	rjmp	.+622    	; 0x1f36 <_Z4loopv+0x532>
    1cc8:	3b c1       	rjmp	.+630    	; 0x1f40 <_Z4loopv+0x53c>
    1cca:	80 91 95 04 	lds	r24, 0x0495	; 0x800495 <g_callsign_sent>
    1cce:	81 11       	cpse	r24, r1
    1cd0:	43 c1       	rjmp	.+646    	; 0x1f58 <_Z4loopv+0x554>
    1cd2:	80 ee       	ldi	r24, 0xE0	; 224
    1cd4:	94 e0       	ldi	r25, 0x04	; 4
    1cd6:	0e 94 1c 04 	call	0x838	; 0x838 <_ZN8Goertzel12SamplesReadyEv>
    1cda:	88 23       	and	r24, r24
    1cdc:	09 f4       	brne	.+2      	; 0x1ce0 <_Z4loopv+0x2dc>
    1cde:	5a c1       	rjmp	.+692    	; 0x1f94 <_Z4loopv+0x590>
    1ce0:	0f 2e       	mov	r0, r31
    1ce2:	fc e0       	ldi	r31, 0x0C	; 12
    1ce4:	af 2e       	mov	r10, r31
    1ce6:	f3 e0       	ldi	r31, 0x03	; 3
    1ce8:	bf 2e       	mov	r11, r31
    1cea:	f0 2d       	mov	r31, r0
    1cec:	00 e0       	ldi	r16, 0x00	; 0
    1cee:	10 e0       	ldi	r17, 0x00	; 0
    1cf0:	88 24       	eor	r8, r8
    1cf2:	8a 94       	dec	r8
    1cf4:	98 2c       	mov	r9, r8
    1cf6:	71 2c       	mov	r7, r1
    1cf8:	61 2c       	mov	r6, r1
    1cfa:	51 2c       	mov	r5, r1
    1cfc:	41 2c       	mov	r4, r1
    1cfe:	f5 01       	movw	r30, r10
    1d00:	41 91       	ld	r20, Z+
    1d02:	51 91       	ld	r21, Z+
    1d04:	61 91       	ld	r22, Z+
    1d06:	71 91       	ld	r23, Z+
    1d08:	5f 01       	movw	r10, r30
    1d0a:	80 ee       	ldi	r24, 0xE0	; 224
    1d0c:	94 e0       	ldi	r25, 0x04	; 4
    1d0e:	0e 94 39 03 	call	0x672	; 0x672 <_ZN8Goertzel18SetTargetFrequencyEf>
    1d12:	80 ee       	ldi	r24, 0xE0	; 224
    1d14:	94 e0       	ldi	r25, 0x04	; 4
    1d16:	0e 94 1f 04 	call	0x83e	; 0x83e <_ZN8Goertzel10Magnitude2Ev>
    1d1a:	e6 2e       	mov	r14, r22
    1d1c:	f7 2e       	mov	r15, r23
    1d1e:	d8 2e       	mov	r13, r24
    1d20:	c9 2e       	mov	r12, r25
    1d22:	27 2d       	mov	r18, r7
    1d24:	36 2d       	mov	r19, r6
    1d26:	45 2d       	mov	r20, r5
    1d28:	54 2d       	mov	r21, r4
    1d2a:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__gesf2>
    1d2e:	18 16       	cp	r1, r24
    1d30:	b4 f4       	brge	.+44     	; 0x1d5e <_Z4loopv+0x35a>
    1d32:	20 e0       	ldi	r18, 0x00	; 0
    1d34:	34 e2       	ldi	r19, 0x24	; 36
    1d36:	44 e7       	ldi	r20, 0x74	; 116
    1d38:	59 e4       	ldi	r21, 0x49	; 73
    1d3a:	6e 2d       	mov	r22, r14
    1d3c:	7f 2d       	mov	r23, r15
    1d3e:	8d 2d       	mov	r24, r13
    1d40:	9c 2d       	mov	r25, r12
    1d42:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__gesf2>
    1d46:	18 16       	cp	r1, r24
    1d48:	34 f4       	brge	.+12     	; 0x1d56 <_Z4loopv+0x352>
    1d4a:	48 01       	movw	r8, r16
    1d4c:	7e 2c       	mov	r7, r14
    1d4e:	6f 2c       	mov	r6, r15
    1d50:	5d 2c       	mov	r5, r13
    1d52:	4c 2c       	mov	r4, r12
    1d54:	04 c0       	rjmp	.+8      	; 0x1d5e <_Z4loopv+0x35a>
    1d56:	7e 2c       	mov	r7, r14
    1d58:	6f 2c       	mov	r6, r15
    1d5a:	5d 2c       	mov	r5, r13
    1d5c:	4c 2c       	mov	r4, r12
    1d5e:	0f 5f       	subi	r16, 0xFF	; 255
    1d60:	1f 4f       	sbci	r17, 0xFF	; 255
    1d62:	04 30       	cpi	r16, 0x04	; 4
    1d64:	11 05       	cpc	r17, r1
    1d66:	59 f6       	brne	.-106    	; 0x1cfe <_Z4loopv+0x2fa>
    1d68:	02 c1       	rjmp	.+516    	; 0x1f6e <_Z4loopv+0x56a>
    1d6a:	f5 01       	movw	r30, r10
    1d6c:	41 91       	ld	r20, Z+
    1d6e:	51 91       	ld	r21, Z+
    1d70:	61 91       	ld	r22, Z+
    1d72:	71 91       	ld	r23, Z+
    1d74:	5f 01       	movw	r10, r30
    1d76:	80 ee       	ldi	r24, 0xE0	; 224
    1d78:	94 e0       	ldi	r25, 0x04	; 4
    1d7a:	0e 94 39 03 	call	0x672	; 0x672 <_ZN8Goertzel18SetTargetFrequencyEf>
    1d7e:	80 ee       	ldi	r24, 0xE0	; 224
    1d80:	94 e0       	ldi	r25, 0x04	; 4
    1d82:	0e 94 1f 04 	call	0x83e	; 0x83e <_ZN8Goertzel10Magnitude2Ev>
    1d86:	e6 2e       	mov	r14, r22
    1d88:	f7 2e       	mov	r15, r23
    1d8a:	d8 2e       	mov	r13, r24
    1d8c:	c9 2e       	mov	r12, r25
    1d8e:	25 2d       	mov	r18, r5
    1d90:	34 2d       	mov	r19, r4
    1d92:	43 2d       	mov	r20, r3
    1d94:	52 2d       	mov	r21, r2
    1d96:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__gesf2>
    1d9a:	18 16       	cp	r1, r24
    1d9c:	b4 f4       	brge	.+44     	; 0x1dca <_Z4loopv+0x3c6>
    1d9e:	20 e0       	ldi	r18, 0x00	; 0
    1da0:	34 e2       	ldi	r19, 0x24	; 36
    1da2:	44 e7       	ldi	r20, 0x74	; 116
    1da4:	59 e4       	ldi	r21, 0x49	; 73
    1da6:	6e 2d       	mov	r22, r14
    1da8:	7f 2d       	mov	r23, r15
    1daa:	8d 2d       	mov	r24, r13
    1dac:	9c 2d       	mov	r25, r12
    1dae:	0e 94 1a 1b 	call	0x3634	; 0x3634 <__gesf2>
    1db2:	18 16       	cp	r1, r24
    1db4:	34 f4       	brge	.+12     	; 0x1dc2 <_Z4loopv+0x3be>
    1db6:	38 01       	movw	r6, r16
    1db8:	5e 2c       	mov	r5, r14
    1dba:	4f 2c       	mov	r4, r15
    1dbc:	3d 2c       	mov	r3, r13
    1dbe:	2c 2c       	mov	r2, r12
    1dc0:	04 c0       	rjmp	.+8      	; 0x1dca <_Z4loopv+0x3c6>
    1dc2:	5e 2c       	mov	r5, r14
    1dc4:	4f 2c       	mov	r4, r15
    1dc6:	3d 2c       	mov	r3, r13
    1dc8:	2c 2c       	mov	r2, r12
    1dca:	0f 5f       	subi	r16, 0xFF	; 255
    1dcc:	1f 4f       	sbci	r17, 0xFF	; 255
    1dce:	04 30       	cpi	r16, 0x04	; 4
    1dd0:	11 05       	cpc	r17, r1
    1dd2:	59 f6       	brne	.-106    	; 0x1d6a <_Z4loopv+0x366>
    1dd4:	77 20       	and	r7, r7
    1dd6:	0c f4       	brge	.+2      	; 0x1dda <_Z4loopv+0x3d6>
    1dd8:	77 c0       	rjmp	.+238    	; 0x1ec8 <_Z4loopv+0x4c4>
    1dda:	c4 01       	movw	r24, r8
    1ddc:	88 0f       	add	r24, r24
    1dde:	99 1f       	adc	r25, r25
    1de0:	88 0f       	add	r24, r24
    1de2:	99 1f       	adc	r25, r25
    1de4:	84 5e       	subi	r24, 0xE4	; 228
    1de6:	9c 4f       	sbci	r25, 0xFC	; 252
    1de8:	fc 01       	movw	r30, r24
    1dea:	e6 0d       	add	r30, r6
    1dec:	f7 1d       	adc	r31, r7
    1dee:	10 81       	ld	r17, Z
    1df0:	80 91 45 05 	lds	r24, 0x0545	; 0x800545 <_ZZ4loopvE7lastKey>
    1df4:	18 13       	cpse	r17, r24
    1df6:	2b c0       	rjmp	.+86     	; 0x1e4e <_Z4loopv+0x44a>
    1df8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <_ZZ4loopvE10checkCount>
    1dfc:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <_ZZ4loopvE10checkCount+0x1>
    1e00:	01 96       	adiw	r24, 0x01	; 1
    1e02:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <_ZZ4loopvE10checkCount+0x1>
    1e06:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <_ZZ4loopvE10checkCount>
    1e0a:	03 97       	sbiw	r24, 0x03	; 3
    1e0c:	01 f5       	brne	.+64     	; 0x1e4e <_Z4loopv+0x44a>
    1e0e:	10 92 47 05 	sts	0x0547, r1	; 0x800547 <_ZZ4loopvE10quietCount+0x1>
    1e12:	10 92 46 05 	sts	0x0546, r1	; 0x800546 <_ZZ4loopvE10quietCount>
    1e16:	10 93 d7 04 	sts	0x04D7, r17	; 0x8004d7 <g_lastKey>
    1e1a:	1f 92       	push	r1
    1e1c:	1f 93       	push	r17
    1e1e:	82 e8       	ldi	r24, 0x82	; 130
    1e20:	91 e0       	ldi	r25, 0x01	; 1
    1e22:	9f 93       	push	r25
    1e24:	8f 93       	push	r24
    1e26:	81 ee       	ldi	r24, 0xE1	; 225
    1e28:	94 e0       	ldi	r25, 0x04	; 4
    1e2a:	9f 93       	push	r25
    1e2c:	8f 93       	push	r24
    1e2e:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    1e32:	61 e0       	ldi	r22, 0x01	; 1
    1e34:	81 ee       	ldi	r24, 0xE1	; 225
    1e36:	94 e0       	ldi	r25, 0x04	; 4
    1e38:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
    1e3c:	81 2f       	mov	r24, r17
    1e3e:	0e 94 10 13 	call	0x2620	; 0x2620 <_Z10processKeyc>
    1e42:	0f 90       	pop	r0
    1e44:	0f 90       	pop	r0
    1e46:	0f 90       	pop	r0
    1e48:	0f 90       	pop	r0
    1e4a:	0f 90       	pop	r0
    1e4c:	0f 90       	pop	r0
    1e4e:	10 93 45 05 	sts	0x0545, r17	; 0x800545 <_ZZ4loopvE7lastKey>
    1e52:	3a c0       	rjmp	.+116    	; 0x1ec8 <_Z4loopv+0x4c4>
    1e54:	40 91 dc 04 	lds	r20, 0x04DC	; 0x8004dc <g_tick_count>
    1e58:	50 91 dd 04 	lds	r21, 0x04DD	; 0x8004dd <g_tick_count+0x1>
    1e5c:	60 91 de 04 	lds	r22, 0x04DE	; 0x8004de <g_tick_count+0x2>
    1e60:	70 91 df 04 	lds	r23, 0x04DF	; 0x8004df <g_tick_count+0x3>
    1e64:	c0 90 d8 04 	lds	r12, 0x04D8	; 0x8004d8 <g_last>
    1e68:	d0 90 d9 04 	lds	r13, 0x04D9	; 0x8004d9 <g_last+0x1>
    1e6c:	e0 90 da 04 	lds	r14, 0x04DA	; 0x8004da <g_last+0x2>
    1e70:	f0 90 db 04 	lds	r15, 0x04DB	; 0x8004db <g_last+0x3>
    1e74:	80 91 46 05 	lds	r24, 0x0546	; 0x800546 <_ZZ4loopvE10quietCount>
    1e78:	90 91 47 05 	lds	r25, 0x0547	; 0x800547 <_ZZ4loopvE10quietCount+0x1>
    1e7c:	9c 01       	movw	r18, r24
    1e7e:	2f 5f       	subi	r18, 0xFF	; 255
    1e80:	3f 4f       	sbci	r19, 0xFF	; 255
    1e82:	30 93 47 05 	sts	0x0547, r19	; 0x800547 <_ZZ4loopvE10quietCount+0x1>
    1e86:	20 93 46 05 	sts	0x0546, r18	; 0x800546 <_ZZ4loopvE10quietCount>
    1e8a:	03 97       	sbiw	r24, 0x03	; 3
    1e8c:	ec f0       	brlt	.+58     	; 0x1ec8 <_Z4loopv+0x4c4>
    1e8e:	db 01       	movw	r26, r22
    1e90:	ca 01       	movw	r24, r20
    1e92:	8c 19       	sub	r24, r12
    1e94:	9d 09       	sbc	r25, r13
    1e96:	ae 09       	sbc	r26, r14
    1e98:	bf 09       	sbc	r27, r15
    1e9a:	8c 3d       	cpi	r24, 0xDC	; 220
    1e9c:	95 40       	sbci	r25, 0x05	; 5
    1e9e:	a1 05       	cpc	r26, r1
    1ea0:	b1 05       	cpc	r27, r1
    1ea2:	20 f4       	brcc	.+8      	; 0x1eac <_Z4loopv+0x4a8>
    1ea4:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <_ZZ4loopvE10checkCount+0x1>
    1ea8:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <_ZZ4loopvE10checkCount>
    1eac:	10 92 47 05 	sts	0x0547, r1	; 0x800547 <_ZZ4loopvE10quietCount+0x1>
    1eb0:	10 92 46 05 	sts	0x0546, r1	; 0x800546 <_ZZ4loopvE10quietCount>
    1eb4:	40 93 d8 04 	sts	0x04D8, r20	; 0x8004d8 <g_last>
    1eb8:	50 93 d9 04 	sts	0x04D9, r21	; 0x8004d9 <g_last+0x1>
    1ebc:	60 93 da 04 	sts	0x04DA, r22	; 0x8004da <g_last+0x2>
    1ec0:	70 93 db 04 	sts	0x04DB, r23	; 0x8004db <g_last+0x3>
    1ec4:	10 92 45 05 	sts	0x0545, r1	; 0x800545 <_ZZ4loopvE7lastKey>
    1ec8:	ea e7       	ldi	r30, 0x7A	; 122
    1eca:	f0 e0       	ldi	r31, 0x00	; 0
    1ecc:	80 81       	ld	r24, Z
    1ece:	88 60       	ori	r24, 0x08	; 8
    1ed0:	80 83       	st	Z, r24
    1ed2:	60 c0       	rjmp	.+192    	; 0x1f94 <_Z4loopv+0x590>
    1ed4:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    1ed8:	70 e0       	ldi	r23, 0x00	; 0
    1eda:	82 e8       	ldi	r24, 0x82	; 130
    1edc:	9b e1       	ldi	r25, 0x1B	; 27
    1ede:	0e 94 e9 1b 	call	0x37d2	; 0x37d2 <__divmodhi4>
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	6a e0       	ldi	r22, 0x0A	; 10
    1ee6:	70 e0       	ldi	r23, 0x00	; 0
    1ee8:	0e 94 e9 1b 	call	0x37d2	; 0x37d2 <__divmodhi4>
    1eec:	66 0f       	add	r22, r22
    1eee:	77 1f       	adc	r23, r23
    1ef0:	70 93 94 04 	sts	0x0494, r23	; 0x800494 <g_code_throttle+0x1>
    1ef4:	60 93 93 04 	sts	0x0493, r22	; 0x800493 <g_code_throttle>
    1ef8:	19 82       	std	Y+1, r1	; 0x01
    1efa:	40 e0       	ldi	r20, 0x00	; 0
    1efc:	50 e0       	ldi	r21, 0x00	; 0
    1efe:	be 01       	movw	r22, r28
    1f00:	6f 5f       	subi	r22, 0xFF	; 255
    1f02:	7f 4f       	sbci	r23, 0xFF	; 255
    1f04:	8d eb       	ldi	r24, 0xBD	; 189
    1f06:	94 e0       	ldi	r25, 0x04	; 4
    1f08:	0e 94 d5 17 	call	0x2faa	; 0x2faa <_Z9makeMorsePcPhS0_>
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <_ZZ4loopvE6id_set>
    1f12:	10 92 95 04 	sts	0x0495, r1	; 0x800495 <g_callsign_sent>
    1f16:	a4 ce       	rjmp	.-696    	; 0x1c60 <_Z4loopv+0x25c>
    1f18:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1f1c:	89 30       	cpi	r24, 0x09	; 9
    1f1e:	08 f0       	brcs	.+2      	; 0x1f22 <_Z4loopv+0x51e>
    1f20:	90 ce       	rjmp	.-736    	; 0x1c42 <_Z4loopv+0x23e>
    1f22:	9e ce       	rjmp	.-708    	; 0x1c60 <_Z4loopv+0x25c>
    1f24:	80 91 9d 04 	lds	r24, 0x049D	; 0x80049d <g_fox_transition>
    1f28:	81 11       	cpse	r24, r1
    1f2a:	91 ce       	rjmp	.-734    	; 0x1c4e <_Z4loopv+0x24a>
    1f2c:	99 ce       	rjmp	.-718    	; 0x1c60 <_Z4loopv+0x25c>
    1f2e:	81 e0       	ldi	r24, 0x01	; 1
    1f30:	80 93 44 05 	sts	0x0544, r24	; 0x800544 <_ZZ4loopvE7proceed>
    1f34:	15 c0       	rjmp	.+42     	; 0x1f60 <_Z4loopv+0x55c>
    1f36:	10 92 92 04 	sts	0x0492, r1	; 0x800492 <g_on_the_air+0x1>
    1f3a:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <g_on_the_air>
    1f3e:	10 c0       	rjmp	.+32     	; 0x1f60 <_Z4loopv+0x55c>
    1f40:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    1f44:	20 91 07 01 	lds	r18, 0x0107	; 0x800107 <g_fox_counter>
    1f48:	30 91 08 01 	lds	r19, 0x0108	; 0x800108 <g_fox_counter+0x1>
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	82 17       	cp	r24, r18
    1f50:	93 07       	cpc	r25, r19
    1f52:	09 f0       	breq	.+2      	; 0x1f56 <_Z4loopv+0x552>
    1f54:	ba ce       	rjmp	.-652    	; 0x1cca <_Z4loopv+0x2c6>
    1f56:	bd ce       	rjmp	.-646    	; 0x1cd2 <_Z4loopv+0x2ce>
    1f58:	10 92 92 04 	sts	0x0492, r1	; 0x800492 <g_on_the_air+0x1>
    1f5c:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <g_on_the_air>
    1f60:	80 ee       	ldi	r24, 0xE0	; 224
    1f62:	94 e0       	ldi	r25, 0x04	; 4
    1f64:	0e 94 1c 04 	call	0x838	; 0x838 <_ZN8Goertzel12SamplesReadyEv>
    1f68:	81 11       	cpse	r24, r1
    1f6a:	ba ce       	rjmp	.-652    	; 0x1ce0 <_Z4loopv+0x2dc>
    1f6c:	13 c0       	rjmp	.+38     	; 0x1f94 <_Z4loopv+0x590>
    1f6e:	99 20       	and	r9, r9
    1f70:	0c f4       	brge	.+2      	; 0x1f74 <_Z4loopv+0x570>
    1f72:	70 cf       	rjmp	.-288    	; 0x1e54 <_Z4loopv+0x450>
    1f74:	0f 2e       	mov	r0, r31
    1f76:	fc ef       	ldi	r31, 0xFC	; 252
    1f78:	af 2e       	mov	r10, r31
    1f7a:	f2 e0       	ldi	r31, 0x02	; 2
    1f7c:	bf 2e       	mov	r11, r31
    1f7e:	f0 2d       	mov	r31, r0
    1f80:	00 e0       	ldi	r16, 0x00	; 0
    1f82:	10 e0       	ldi	r17, 0x00	; 0
    1f84:	66 24       	eor	r6, r6
    1f86:	6a 94       	dec	r6
    1f88:	76 2c       	mov	r7, r6
    1f8a:	51 2c       	mov	r5, r1
    1f8c:	41 2c       	mov	r4, r1
    1f8e:	31 2c       	mov	r3, r1
    1f90:	21 2c       	mov	r2, r1
    1f92:	eb ce       	rjmp	.-554    	; 0x1d6a <_Z4loopv+0x366>
    1f94:	0f 90       	pop	r0
    1f96:	df 91       	pop	r29
    1f98:	cf 91       	pop	r28
    1f9a:	1f 91       	pop	r17
    1f9c:	0f 91       	pop	r16
    1f9e:	ff 90       	pop	r15
    1fa0:	ef 90       	pop	r14
    1fa2:	df 90       	pop	r13
    1fa4:	cf 90       	pop	r12
    1fa6:	bf 90       	pop	r11
    1fa8:	af 90       	pop	r10
    1faa:	9f 90       	pop	r9
    1fac:	8f 90       	pop	r8
    1fae:	7f 90       	pop	r7
    1fb0:	6f 90       	pop	r6
    1fb2:	5f 90       	pop	r5
    1fb4:	4f 90       	pop	r4
    1fb6:	3f 90       	pop	r3
    1fb8:	2f 90       	pop	r2
    1fba:	08 95       	ret

00001fbc <_Z13sendMorseToneh>:
    1fbc:	90 91 a4 04 	lds	r25, 0x04A4	; 0x8004a4 <g_lastSeconds>
    1fc0:	91 11       	cpse	r25, r1
    1fc2:	0a c0       	rjmp	.+20     	; 0x1fd8 <_Z13sendMorseToneh+0x1c>
    1fc4:	20 91 0b 01 	lds	r18, 0x010B	; 0x80010b <g_fox_tone_offset>
    1fc8:	30 91 0c 01 	lds	r19, 0x010C	; 0x80010c <g_fox_tone_offset+0x1>
    1fcc:	9f e2       	ldi	r25, 0x2F	; 47
    1fce:	92 1b       	sub	r25, r18
    1fd0:	97 bd       	out	0x27, r25	; 39
    1fd2:	80 93 a3 04 	sts	0x04A3, r24	; 0x8004a3 <g_audio_tone_state>
    1fd6:	08 95       	ret
    1fd8:	8f e2       	ldi	r24, 0x2F	; 47
    1fda:	87 bd       	out	0x27, r24	; 39
    1fdc:	10 92 a3 04 	sts	0x04A3, r1	; 0x8004a3 <g_audio_tone_state>
    1fe0:	08 95       	ret

00001fe2 <_Z17handleLinkBusMsgsv>:
}


/* The compiler does not seem to optimize large switch statements correctly */
void __attribute__((optimize("O0"))) handleLinkBusMsgs()
{
    1fe2:	0f 93       	push	r16
    1fe4:	1f 93       	push	r17
    1fe6:	cf 93       	push	r28
    1fe8:	df 93       	push	r29
    1fea:	cd b7       	in	r28, 0x3d	; 61
    1fec:	de b7       	in	r29, 0x3e	; 62
    1fee:	2e 97       	sbiw	r28, 0x0e	; 14
    1ff0:	0f b6       	in	r0, 0x3f	; 63
    1ff2:	f8 94       	cli
    1ff4:	de bf       	out	0x3e, r29	; 62
    1ff6:	0f be       	out	0x3f, r0	; 63
    1ff8:	cd bf       	out	0x3d, r28	; 61
	LinkbusRxBuffer* lb_buff;
	BOOL send_ack = TRUE;
    1ffa:	81 e0       	ldi	r24, 0x01	; 1
    1ffc:	8a 83       	std	Y+2, r24	; 0x02

	while((lb_buff = nextFullRxBuffer()))
    1ffe:	0e 94 1f 05 	call	0xa3e	; 0xa3e <_Z16nextFullRxBufferv>
    2002:	9c 83       	std	Y+4, r25	; 0x04
    2004:	8b 83       	std	Y+3, r24	; 0x03
    2006:	21 e0       	ldi	r18, 0x01	; 1
    2008:	8b 81       	ldd	r24, Y+3	; 0x03
    200a:	9c 81       	ldd	r25, Y+4	; 0x04
    200c:	89 2b       	or	r24, r25
    200e:	09 f4       	brne	.+2      	; 0x2012 <_Z17handleLinkBusMsgsv+0x30>
    2010:	20 e0       	ldi	r18, 0x00	; 0
    2012:	22 23       	and	r18, r18
    2014:	09 f4       	brne	.+2      	; 0x2018 <_Z17handleLinkBusMsgsv+0x36>
    2016:	f8 c2       	rjmp	.+1520   	; 0x2608 <_Z17handleLinkBusMsgsv+0x626>
	{
		LBMessageID msg_id = lb_buff->id;
    2018:	8b 81       	ldd	r24, Y+3	; 0x03
    201a:	9c 81       	ldd	r25, Y+4	; 0x04
    201c:	fc 01       	movw	r30, r24
    201e:	81 81       	ldd	r24, Z+1	; 0x01
    2020:	92 81       	ldd	r25, Z+2	; 0x02
    2022:	9e 83       	std	Y+6, r25	; 0x06
    2024:	8d 83       	std	Y+5, r24	; 0x05

		switch(msg_id)
    2026:	8d 81       	ldd	r24, Y+5	; 0x05
    2028:	9e 81       	ldd	r25, Y+6	; 0x06
    202a:	86 3a       	cpi	r24, 0xA6	; 166
    202c:	f0 e2       	ldi	r31, 0x20	; 32
    202e:	9f 07       	cpc	r25, r31
    2030:	09 f4       	brne	.+2      	; 0x2034 <_Z17handleLinkBusMsgsv+0x52>
    2032:	43 c0       	rjmp	.+134    	; 0x20ba <_Z17handleLinkBusMsgsv+0xd8>
    2034:	87 3a       	cpi	r24, 0xA7	; 167
    2036:	20 e2       	ldi	r18, 0x20	; 32
    2038:	92 07       	cpc	r25, r18
    203a:	ec f4       	brge	.+58     	; 0x2076 <_Z17handleLinkBusMsgsv+0x94>
    203c:	82 30       	cpi	r24, 0x02	; 2
    203e:	ed e1       	ldi	r30, 0x1D	; 29
    2040:	9e 07       	cpc	r25, r30
    2042:	09 f4       	brne	.+2      	; 0x2046 <_Z17handleLinkBusMsgsv+0x64>
    2044:	29 c1       	rjmp	.+594    	; 0x2298 <_Z17handleLinkBusMsgsv+0x2b6>
    2046:	83 30       	cpi	r24, 0x03	; 3
    2048:	fd e1       	ldi	r31, 0x1D	; 29
    204a:	9f 07       	cpc	r25, r31
    204c:	54 f4       	brge	.+20     	; 0x2062 <_Z17handleLinkBusMsgsv+0x80>
    204e:	85 31       	cpi	r24, 0x15	; 21
    2050:	23 e0       	ldi	r18, 0x03	; 3
    2052:	92 07       	cpc	r25, r18
    2054:	09 f4       	brne	.+2      	; 0x2058 <_Z17handleLinkBusMsgsv+0x76>
    2056:	18 c1       	rjmp	.+560    	; 0x2288 <_Z17handleLinkBusMsgsv+0x2a6>
    2058:	8e 31       	cpi	r24, 0x1E	; 30
    205a:	93 40       	sbci	r25, 0x03	; 3
    205c:	09 f4       	brne	.+2      	; 0x2060 <_Z17handleLinkBusMsgsv+0x7e>
    205e:	69 c1       	rjmp	.+722    	; 0x2332 <_Z17handleLinkBusMsgsv+0x350>
    2060:	bd c2       	rjmp	.+1402   	; 0x25dc <_Z17handleLinkBusMsgsv+0x5fa>
    2062:	8a 3b       	cpi	r24, 0xBA	; 186
    2064:	fd e1       	ldi	r31, 0x1D	; 29
    2066:	9f 07       	cpc	r25, r31
    2068:	09 f4       	brne	.+2      	; 0x206c <_Z17handleLinkBusMsgsv+0x8a>
    206a:	bb c2       	rjmp	.+1398   	; 0x25e2 <_Z17handleLinkBusMsgsv+0x600>
    206c:	85 32       	cpi	r24, 0x25	; 37
    206e:	9e 41       	sbci	r25, 0x1E	; 30
    2070:	09 f4       	brne	.+2      	; 0x2074 <_Z17handleLinkBusMsgsv+0x92>
    2072:	b9 c2       	rjmp	.+1394   	; 0x25e6 <_Z17handleLinkBusMsgsv+0x604>
    2074:	b3 c2       	rjmp	.+1382   	; 0x25dc <_Z17handleLinkBusMsgsv+0x5fa>
    2076:	80 3d       	cpi	r24, 0xD0	; 208
    2078:	e3 e2       	ldi	r30, 0x23	; 35
    207a:	9e 07       	cpc	r25, r30
    207c:	09 f4       	brne	.+2      	; 0x2080 <_Z17handleLinkBusMsgsv+0x9e>
    207e:	07 c2       	rjmp	.+1038   	; 0x248e <_Z17handleLinkBusMsgsv+0x4ac>
    2080:	81 3d       	cpi	r24, 0xD1	; 209
    2082:	f3 e2       	ldi	r31, 0x23	; 35
    2084:	9f 07       	cpc	r25, r31
    2086:	54 f4       	brge	.+20     	; 0x209c <_Z17handleLinkBusMsgsv+0xba>
    2088:	8a 39       	cpi	r24, 0x9A	; 154
    208a:	23 e2       	ldi	r18, 0x23	; 35
    208c:	92 07       	cpc	r25, r18
    208e:	09 f4       	brne	.+2      	; 0x2092 <_Z17handleLinkBusMsgsv+0xb0>
    2090:	ac c2       	rjmp	.+1368   	; 0x25ea <_Z17handleLinkBusMsgsv+0x608>
    2092:	8f 3c       	cpi	r24, 0xCF	; 207
    2094:	93 42       	sbci	r25, 0x23	; 35
    2096:	09 f4       	brne	.+2      	; 0x209a <_Z17handleLinkBusMsgsv+0xb8>
    2098:	aa c2       	rjmp	.+1364   	; 0x25ee <_Z17handleLinkBusMsgsv+0x60c>
    209a:	a0 c2       	rjmp	.+1344   	; 0x25dc <_Z17handleLinkBusMsgsv+0x5fa>
    209c:	85 38       	cpi	r24, 0x85	; 133
    209e:	f4 e2       	ldi	r31, 0x24	; 36
    20a0:	9f 07       	cpc	r25, r31
    20a2:	09 f4       	brne	.+2      	; 0x20a6 <_Z17handleLinkBusMsgsv+0xc4>
    20a4:	a4 c0       	rjmp	.+328    	; 0x21ee <_Z17handleLinkBusMsgsv+0x20c>
    20a6:	8c 39       	cpi	r24, 0x9C	; 156
    20a8:	24 e2       	ldi	r18, 0x24	; 36
    20aa:	92 07       	cpc	r25, r18
    20ac:	09 f4       	brne	.+2      	; 0x20b0 <_Z17handleLinkBusMsgsv+0xce>
    20ae:	73 c2       	rjmp	.+1254   	; 0x2596 <_Z17handleLinkBusMsgsv+0x5b4>
    20b0:	85 3f       	cpi	r24, 0xF5	; 245
    20b2:	93 42       	sbci	r25, 0x23	; 35
    20b4:	09 f4       	brne	.+2      	; 0x20b8 <_Z17handleLinkBusMsgsv+0xd6>
    20b6:	54 c0       	rjmp	.+168    	; 0x2160 <_Z17handleLinkBusMsgsv+0x17e>
    20b8:	91 c2       	rjmp	.+1314   	; 0x25dc <_Z17handleLinkBusMsgsv+0x5fa>
			}
			break;

			case MESSAGE_LEDS:
			{
				if(lb_buff->fields[FIELD1][0])
    20ba:	8b 81       	ldd	r24, Y+3	; 0x03
    20bc:	9c 81       	ldd	r25, Y+4	; 0x04
    20be:	fc 01       	movw	r30, r24
    20c0:	83 81       	ldd	r24, Z+3	; 0x03
    20c2:	88 23       	and	r24, r24
    20c4:	29 f1       	breq	.+74     	; 0x2110 <_Z17handleLinkBusMsgsv+0x12e>
				{
					if((lb_buff->fields[FIELD1][1] == 'F') || (lb_buff->fields[FIELD1][0] == '0'))
    20c6:	8b 81       	ldd	r24, Y+3	; 0x03
    20c8:	9c 81       	ldd	r25, Y+4	; 0x04
    20ca:	fc 01       	movw	r30, r24
    20cc:	84 81       	ldd	r24, Z+4	; 0x04
    20ce:	86 34       	cpi	r24, 0x46	; 70
    20d0:	31 f0       	breq	.+12     	; 0x20de <_Z17handleLinkBusMsgsv+0xfc>
    20d2:	8b 81       	ldd	r24, Y+3	; 0x03
    20d4:	9c 81       	ldd	r25, Y+4	; 0x04
    20d6:	fc 01       	movw	r30, r24
    20d8:	83 81       	ldd	r24, Z+3	; 0x03
    20da:	80 33       	cpi	r24, 0x30	; 48
    20dc:	39 f4       	brne	.+14     	; 0x20ec <_Z17handleLinkBusMsgsv+0x10a>
					{
						g_enable_LEDs = FALSE;
    20de:	10 92 d4 04 	sts	0x04D4, r1	; 0x8004d4 <_ZL13g_enable_LEDs>
						digitalWrite(PIN_LED1,OFF); /*  LED Off */
    20e2:	60 e0       	ldi	r22, 0x00	; 0
    20e4:	8d e0       	ldi	r24, 0x0D	; 13
    20e6:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
    20ea:	03 c0       	rjmp	.+6      	; 0x20f2 <_Z17handleLinkBusMsgsv+0x110>
					}
					else
					{
						g_enable_LEDs = TRUE;
    20ec:	81 e0       	ldi	r24, 0x01	; 1
    20ee:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <_ZL13g_enable_LEDs>
					}

					eeprom_update_byte(&ee_enable_LEDs,g_enable_LEDs);
    20f2:	80 91 d4 04 	lds	r24, 0x04D4	; 0x8004d4 <_ZL13g_enable_LEDs>
    20f6:	68 2f       	mov	r22, r24
    20f8:	89 e1       	ldi	r24, 0x19	; 25
    20fa:	90 e0       	ldi	r25, 0x00	; 0
    20fc:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
					g_LEDs_Timed_Out = !g_enable_LEDs;
    2100:	90 91 d4 04 	lds	r25, 0x04D4	; 0x8004d4 <_ZL13g_enable_LEDs>
    2104:	81 e0       	ldi	r24, 0x01	; 1
    2106:	99 23       	and	r25, r25
    2108:	09 f0       	breq	.+2      	; 0x210c <_Z17handleLinkBusMsgsv+0x12a>
    210a:	80 e0       	ldi	r24, 0x00	; 0
    210c:	80 93 0b 05 	sts	0x050B, r24	; 0x80050b <_ZL16g_LEDs_Timed_Out>
				}

				sprintf(g_tempStr,"LED:%s\n",g_enable_LEDs ? "ON" : "OFF");
    2110:	80 91 d4 04 	lds	r24, 0x04D4	; 0x8004d4 <_ZL13g_enable_LEDs>
    2114:	88 23       	and	r24, r24
    2116:	19 f0       	breq	.+6      	; 0x211e <_Z17handleLinkBusMsgsv+0x13c>
    2118:	80 e2       	ldi	r24, 0x20	; 32
    211a:	91 e0       	ldi	r25, 0x01	; 1
    211c:	02 c0       	rjmp	.+4      	; 0x2122 <_Z17handleLinkBusMsgsv+0x140>
    211e:	83 e2       	ldi	r24, 0x23	; 35
    2120:	91 e0       	ldi	r25, 0x01	; 1
    2122:	29 2f       	mov	r18, r25
    2124:	2f 93       	push	r18
    2126:	8f 93       	push	r24
    2128:	88 e8       	ldi	r24, 0x88	; 136
    212a:	91 e0       	ldi	r25, 0x01	; 1
    212c:	89 2f       	mov	r24, r25
    212e:	8f 93       	push	r24
    2130:	88 e8       	ldi	r24, 0x88	; 136
    2132:	91 e0       	ldi	r25, 0x01	; 1
    2134:	8f 93       	push	r24
    2136:	81 ee       	ldi	r24, 0xE1	; 225
    2138:	94 e0       	ldi	r25, 0x04	; 4
    213a:	89 2f       	mov	r24, r25
    213c:	8f 93       	push	r24
    213e:	81 ee       	ldi	r24, 0xE1	; 225
    2140:	94 e0       	ldi	r25, 0x04	; 4
    2142:	8f 93       	push	r24
    2144:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    2148:	0f 90       	pop	r0
    214a:	0f 90       	pop	r0
    214c:	0f 90       	pop	r0
    214e:	0f 90       	pop	r0
    2150:	0f 90       	pop	r0
    2152:	0f 90       	pop	r0
				lb_send_string(g_tempStr,FALSE);
    2154:	60 e0       	ldi	r22, 0x00	; 0
    2156:	81 ee       	ldi	r24, 0xE1	; 225
    2158:	94 e0       	ldi	r25, 0x04	; 4
    215a:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    215e:	48 c2       	rjmp	.+1168   	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>

			case MESSAGE_STARTTONES_ENABLE:
			{
				if(lb_buff->fields[FIELD1][0])
    2160:	8b 81       	ldd	r24, Y+3	; 0x03
    2162:	9c 81       	ldd	r25, Y+4	; 0x04
    2164:	fc 01       	movw	r30, r24
    2166:	83 81       	ldd	r24, Z+3	; 0x03
    2168:	88 23       	and	r24, r24
    216a:	c9 f0       	breq	.+50     	; 0x219e <_Z17handleLinkBusMsgsv+0x1bc>
				{
					if((lb_buff->fields[FIELD1][1] == 'F') || (lb_buff->fields[FIELD1][0] == '0'))
    216c:	8b 81       	ldd	r24, Y+3	; 0x03
    216e:	9c 81       	ldd	r25, Y+4	; 0x04
    2170:	fc 01       	movw	r30, r24
    2172:	84 81       	ldd	r24, Z+4	; 0x04
    2174:	86 34       	cpi	r24, 0x46	; 70
    2176:	31 f0       	breq	.+12     	; 0x2184 <_Z17handleLinkBusMsgsv+0x1a2>
    2178:	8b 81       	ldd	r24, Y+3	; 0x03
    217a:	9c 81       	ldd	r25, Y+4	; 0x04
    217c:	fc 01       	movw	r30, r24
    217e:	83 81       	ldd	r24, Z+3	; 0x03
    2180:	80 33       	cpi	r24, 0x30	; 48
    2182:	19 f4       	brne	.+6      	; 0x218a <_Z17handleLinkBusMsgsv+0x1a8>
					{
						g_enable_start_timer = FALSE;
    2184:	10 92 d5 04 	sts	0x04D5, r1	; 0x8004d5 <_ZL20g_enable_start_timer>
    2188:	03 c0       	rjmp	.+6      	; 0x2190 <_Z17handleLinkBusMsgsv+0x1ae>
					}
					else
					{
						g_enable_start_timer = TRUE;
    218a:	81 e0       	ldi	r24, 0x01	; 1
    218c:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <_ZL20g_enable_start_timer>
					}

					eeprom_update_byte(&ee_enable_start_timer,g_enable_start_timer);
    2190:	80 91 d5 04 	lds	r24, 0x04D5	; 0x8004d5 <_ZL20g_enable_start_timer>
    2194:	68 2f       	mov	r22, r24
    2196:	8c e1       	ldi	r24, 0x1C	; 28
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
				}

				sprintf(g_tempStr,"STA:%s\n",g_enable_start_timer ? "ON" : "OFF");
    219e:	80 91 d5 04 	lds	r24, 0x04D5	; 0x8004d5 <_ZL20g_enable_start_timer>
    21a2:	88 23       	and	r24, r24
    21a4:	19 f0       	breq	.+6      	; 0x21ac <_Z17handleLinkBusMsgsv+0x1ca>
    21a6:	80 e2       	ldi	r24, 0x20	; 32
    21a8:	91 e0       	ldi	r25, 0x01	; 1
    21aa:	02 c0       	rjmp	.+4      	; 0x21b0 <_Z17handleLinkBusMsgsv+0x1ce>
    21ac:	83 e2       	ldi	r24, 0x23	; 35
    21ae:	91 e0       	ldi	r25, 0x01	; 1
    21b0:	29 2f       	mov	r18, r25
    21b2:	2f 93       	push	r18
    21b4:	8f 93       	push	r24
    21b6:	80 e9       	ldi	r24, 0x90	; 144
    21b8:	91 e0       	ldi	r25, 0x01	; 1
    21ba:	89 2f       	mov	r24, r25
    21bc:	8f 93       	push	r24
    21be:	80 e9       	ldi	r24, 0x90	; 144
    21c0:	91 e0       	ldi	r25, 0x01	; 1
    21c2:	8f 93       	push	r24
    21c4:	81 ee       	ldi	r24, 0xE1	; 225
    21c6:	94 e0       	ldi	r25, 0x04	; 4
    21c8:	89 2f       	mov	r24, r25
    21ca:	8f 93       	push	r24
    21cc:	81 ee       	ldi	r24, 0xE1	; 225
    21ce:	94 e0       	ldi	r25, 0x04	; 4
    21d0:	8f 93       	push	r24
    21d2:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    21d6:	0f 90       	pop	r0
    21d8:	0f 90       	pop	r0
    21da:	0f 90       	pop	r0
    21dc:	0f 90       	pop	r0
    21de:	0f 90       	pop	r0
    21e0:	0f 90       	pop	r0
				lb_send_string(g_tempStr,FALSE);
    21e2:	60 e0       	ldi	r22, 0x00	; 0
    21e4:	81 ee       	ldi	r24, 0xE1	; 225
    21e6:	94 e0       	ldi	r25, 0x04	; 4
    21e8:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    21ec:	01 c2       	rjmp	.+1026   	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>

			case MESSAGE_TRANSMITTER_ENABLE:
			{
				if(lb_buff->fields[FIELD1][0])
    21ee:	8b 81       	ldd	r24, Y+3	; 0x03
    21f0:	9c 81       	ldd	r25, Y+4	; 0x04
    21f2:	fc 01       	movw	r30, r24
    21f4:	83 81       	ldd	r24, Z+3	; 0x03
    21f6:	88 23       	and	r24, r24
    21f8:	f9 f0       	breq	.+62     	; 0x2238 <_Z17handleLinkBusMsgsv+0x256>
				{
					if((lb_buff->fields[FIELD1][1] == 'F') || (lb_buff->fields[FIELD1][0] == '0'))
    21fa:	8b 81       	ldd	r24, Y+3	; 0x03
    21fc:	9c 81       	ldd	r25, Y+4	; 0x04
    21fe:	fc 01       	movw	r30, r24
    2200:	84 81       	ldd	r24, Z+4	; 0x04
    2202:	86 34       	cpi	r24, 0x46	; 70
    2204:	31 f0       	breq	.+12     	; 0x2212 <_Z17handleLinkBusMsgsv+0x230>
    2206:	8b 81       	ldd	r24, Y+3	; 0x03
    2208:	9c 81       	ldd	r25, Y+4	; 0x04
    220a:	fc 01       	movw	r30, r24
    220c:	83 81       	ldd	r24, Z+3	; 0x03
    220e:	80 33       	cpi	r24, 0x30	; 48
    2210:	49 f4       	brne	.+18     	; 0x2224 <_Z17handleLinkBusMsgsv+0x242>
					{
						cli();
    2212:	f8 94       	cli
						g_enable_transmitter = FALSE;
    2214:	10 92 d6 04 	sts	0x04D6, r1	; 0x8004d6 <_ZL20g_enable_transmitter>
						digitalWrite(PIN_CW_KEY_LOGIC,OFF);
    2218:	60 e0       	ldi	r22, 0x00	; 0
    221a:	8a e0       	ldi	r24, 0x0A	; 10
    221c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
						sei();
    2220:	78 94       	sei
    2222:	03 c0       	rjmp	.+6      	; 0x222a <_Z17handleLinkBusMsgsv+0x248>
					}
					else
					{
						g_enable_transmitter = TRUE;
    2224:	81 e0       	ldi	r24, 0x01	; 1
    2226:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <_ZL20g_enable_transmitter>
					}

					eeprom_update_byte(&ee_enable_transmitter,g_enable_transmitter);
    222a:	80 91 d6 04 	lds	r24, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
    222e:	68 2f       	mov	r22, r24
    2230:	8d e1       	ldi	r24, 0x1D	; 29
    2232:	90 e0       	ldi	r25, 0x00	; 0
    2234:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
				}

				sprintf(g_tempStr,"TXE:%s\n",g_enable_transmitter ? "ON" : "OFF");
    2238:	80 91 d6 04 	lds	r24, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
    223c:	88 23       	and	r24, r24
    223e:	19 f0       	breq	.+6      	; 0x2246 <_Z17handleLinkBusMsgsv+0x264>
    2240:	80 e2       	ldi	r24, 0x20	; 32
    2242:	91 e0       	ldi	r25, 0x01	; 1
    2244:	02 c0       	rjmp	.+4      	; 0x224a <_Z17handleLinkBusMsgsv+0x268>
    2246:	83 e2       	ldi	r24, 0x23	; 35
    2248:	91 e0       	ldi	r25, 0x01	; 1
    224a:	29 2f       	mov	r18, r25
    224c:	2f 93       	push	r18
    224e:	8f 93       	push	r24
    2250:	88 e9       	ldi	r24, 0x98	; 152
    2252:	91 e0       	ldi	r25, 0x01	; 1
    2254:	89 2f       	mov	r24, r25
    2256:	8f 93       	push	r24
    2258:	88 e9       	ldi	r24, 0x98	; 152
    225a:	91 e0       	ldi	r25, 0x01	; 1
    225c:	8f 93       	push	r24
    225e:	81 ee       	ldi	r24, 0xE1	; 225
    2260:	94 e0       	ldi	r25, 0x04	; 4
    2262:	89 2f       	mov	r24, r25
    2264:	8f 93       	push	r24
    2266:	81 ee       	ldi	r24, 0xE1	; 225
    2268:	94 e0       	ldi	r25, 0x04	; 4
    226a:	8f 93       	push	r24
    226c:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    2270:	0f 90       	pop	r0
    2272:	0f 90       	pop	r0
    2274:	0f 90       	pop	r0
    2276:	0f 90       	pop	r0
    2278:	0f 90       	pop	r0
    227a:	0f 90       	pop	r0
				lb_send_string(g_tempStr,FALSE);
    227c:	60 e0       	ldi	r22, 0x00	; 0
    227e:	81 ee       	ldi	r24, 0xE1	; 225
    2280:	94 e0       	ldi	r25, 0x04	; 4
    2282:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    2286:	b4 c1       	rjmp	.+872    	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>

			case MESSAGE_GO:
			{
				doSynchronization();
    2288:	0e 94 25 15 	call	0x2a4a	; 0x2a4a <_Z17doSynchronizationv>
				lb_send_string((char*)"Re-sync successful!\n",FALSE);
    228c:	60 e0       	ldi	r22, 0x00	; 0
    228e:	80 ea       	ldi	r24, 0xA0	; 160
    2290:	91 e0       	ldi	r25, 0x01	; 1
    2292:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    2296:	ac c1       	rjmp	.+856    	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>
			}
			break;

			case MESSAGE_CLOCK_CAL:
			{
				if(lb_buff->fields[FIELD1][0])
    2298:	8b 81       	ldd	r24, Y+3	; 0x03
    229a:	9c 81       	ldd	r25, Y+4	; 0x04
    229c:	fc 01       	movw	r30, r24
    229e:	83 81       	ldd	r24, Z+3	; 0x03
    22a0:	88 23       	and	r24, r24
    22a2:	21 f1       	breq	.+72     	; 0x22ec <_Z17handleLinkBusMsgsv+0x30a>
				{
					uint16_t c = (uint16_t)atoi(lb_buff->fields[FIELD1]);
    22a4:	8b 81       	ldd	r24, Y+3	; 0x03
    22a6:	9c 81       	ldd	r25, Y+4	; 0x04
    22a8:	03 96       	adiw	r24, 0x03	; 3
    22aa:	0e 94 94 1d 	call	0x3b28	; 0x3b28 <atoi>
    22ae:	98 87       	std	Y+8, r25	; 0x08
    22b0:	8f 83       	std	Y+7, r24	; 0x07

					if(c > 100)
    22b2:	8f 81       	ldd	r24, Y+7	; 0x07
    22b4:	98 85       	ldd	r25, Y+8	; 0x08
    22b6:	85 36       	cpi	r24, 0x65	; 101
    22b8:	91 05       	cpc	r25, r1
    22ba:	c0 f0       	brcs	.+48     	; 0x22ec <_Z17handleLinkBusMsgsv+0x30a>
					{
						g_clock_calibration = c;
    22bc:	8f 81       	ldd	r24, Y+7	; 0x07
    22be:	98 85       	ldd	r25, Y+8	; 0x08
    22c0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_ZL19g_clock_calibration+0x1>
    22c4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_ZL19g_clock_calibration>
						OCR1A = g_clock_calibration;
    22c8:	88 e8       	ldi	r24, 0x88	; 136
    22ca:	90 e0       	ldi	r25, 0x00	; 0
    22cc:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <_ZL19g_clock_calibration>
    22d0:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <_ZL19g_clock_calibration+0x1>
    22d4:	fc 01       	movw	r30, r24
    22d6:	31 83       	std	Z+1, r19	; 0x01
    22d8:	20 83       	st	Z, r18
						eeprom_update_word(&ee_clock_calibration,g_clock_calibration);
    22da:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_ZL19g_clock_calibration>
    22de:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <_ZL19g_clock_calibration+0x1>
    22e2:	bc 01       	movw	r22, r24
    22e4:	87 e1       	ldi	r24, 0x17	; 23
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	0e 94 2d 23 	call	0x465a	; 0x465a <eeprom_update_word>
					}
				}

				sprintf(g_tempStr,"Cal=%u\n",g_clock_calibration);
    22ec:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_ZL19g_clock_calibration>
    22f0:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <_ZL19g_clock_calibration+0x1>
    22f4:	29 2f       	mov	r18, r25
    22f6:	2f 93       	push	r18
    22f8:	8f 93       	push	r24
    22fa:	85 eb       	ldi	r24, 0xB5	; 181
    22fc:	91 e0       	ldi	r25, 0x01	; 1
    22fe:	89 2f       	mov	r24, r25
    2300:	8f 93       	push	r24
    2302:	85 eb       	ldi	r24, 0xB5	; 181
    2304:	91 e0       	ldi	r25, 0x01	; 1
    2306:	8f 93       	push	r24
    2308:	81 ee       	ldi	r24, 0xE1	; 225
    230a:	94 e0       	ldi	r25, 0x04	; 4
    230c:	89 2f       	mov	r24, r25
    230e:	8f 93       	push	r24
    2310:	81 ee       	ldi	r24, 0xE1	; 225
    2312:	94 e0       	ldi	r25, 0x04	; 4
    2314:	8f 93       	push	r24
    2316:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    231a:	0f 90       	pop	r0
    231c:	0f 90       	pop	r0
    231e:	0f 90       	pop	r0
    2320:	0f 90       	pop	r0
    2322:	0f 90       	pop	r0
    2324:	0f 90       	pop	r0
				lb_send_string(g_tempStr,FALSE);
    2326:	60 e0       	ldi	r22, 0x00	; 0
    2328:	81 ee       	ldi	r24, 0xE1	; 225
    232a:	94 e0       	ldi	r25, 0x04	; 4
    232c:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    2330:	5f c1       	rjmp	.+702    	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>

			case MESSAGE_SET_STATION_ID:
			{
				if(lb_buff->fields[FIELD1][0])
    2332:	8b 81       	ldd	r24, Y+3	; 0x03
    2334:	9c 81       	ldd	r25, Y+4	; 0x04
    2336:	fc 01       	movw	r30, r24
    2338:	83 81       	ldd	r24, Z+3	; 0x03
    233a:	88 23       	and	r24, r24
    233c:	09 f4       	brne	.+2      	; 0x2340 <_Z17handleLinkBusMsgsv+0x35e>
    233e:	60 c0       	rjmp	.+192    	; 0x2400 <_Z17handleLinkBusMsgsv+0x41e>
				{
					strcpy(g_tempStr," ");  /* Space before ID gets sent */
    2340:	80 e2       	ldi	r24, 0x20	; 32
    2342:	90 e0       	ldi	r25, 0x00	; 0
    2344:	90 93 e2 04 	sts	0x04E2, r25	; 0x8004e2 <_ZL9g_tempStr+0x1>
    2348:	80 93 e1 04 	sts	0x04E1, r24	; 0x8004e1 <_ZL9g_tempStr>
					strcat(g_tempStr,lb_buff->fields[FIELD1]);
    234c:	8b 81       	ldd	r24, Y+3	; 0x03
    234e:	9c 81       	ldd	r25, Y+4	; 0x04
    2350:	03 96       	adiw	r24, 0x03	; 3
    2352:	bc 01       	movw	r22, r24
    2354:	81 ee       	ldi	r24, 0xE1	; 225
    2356:	94 e0       	ldi	r25, 0x04	; 4
    2358:	0e 94 e1 1d 	call	0x3bc2	; 0x3bc2 <strcat>

					if(lb_buff->fields[FIELD2][0])
    235c:	8b 81       	ldd	r24, Y+3	; 0x03
    235e:	9c 81       	ldd	r25, Y+4	; 0x04
    2360:	fc 01       	movw	r30, r24
    2362:	85 85       	ldd	r24, Z+13	; 0x0d
    2364:	88 23       	and	r24, r24
    2366:	d1 f0       	breq	.+52     	; 0x239c <_Z17handleLinkBusMsgsv+0x3ba>
					{
						strcat(g_tempStr," ");
    2368:	81 ee       	ldi	r24, 0xE1	; 225
    236a:	94 e0       	ldi	r25, 0x04	; 4
    236c:	9c 01       	movw	r18, r24
    236e:	f9 01       	movw	r30, r18
    2370:	01 90       	ld	r0, Z+
    2372:	00 20       	and	r0, r0
    2374:	e9 f7       	brne	.-6      	; 0x2370 <_Z17handleLinkBusMsgsv+0x38e>
    2376:	cf 01       	movw	r24, r30
    2378:	01 97       	sbiw	r24, 0x01	; 1
    237a:	82 1b       	sub	r24, r18
    237c:	93 0b       	sbc	r25, r19
    237e:	8f 51       	subi	r24, 0x1F	; 31
    2380:	9b 4f       	sbci	r25, 0xFB	; 251
    2382:	20 e2       	ldi	r18, 0x20	; 32
    2384:	30 e0       	ldi	r19, 0x00	; 0
    2386:	fc 01       	movw	r30, r24
    2388:	31 83       	std	Z+1, r19	; 0x01
    238a:	20 83       	st	Z, r18
						strcat(g_tempStr,lb_buff->fields[FIELD2]);
    238c:	8b 81       	ldd	r24, Y+3	; 0x03
    238e:	9c 81       	ldd	r25, Y+4	; 0x04
    2390:	0d 96       	adiw	r24, 0x0d	; 13
    2392:	bc 01       	movw	r22, r24
    2394:	81 ee       	ldi	r24, 0xE1	; 225
    2396:	94 e0       	ldi	r25, 0x04	; 4
    2398:	0e 94 e1 1d 	call	0x3bc2	; 0x3bc2 <strcat>
					}

					if(strlen(g_tempStr) <= MAX_PATTERN_TEXT_LENGTH)
    239c:	81 ee       	ldi	r24, 0xE1	; 225
    239e:	94 e0       	ldi	r25, 0x04	; 4
    23a0:	0e 94 f3 1d 	call	0x3be6	; 0x3be6 <strlen>
    23a4:	45 97       	sbiw	r24, 0x15	; 21
    23a6:	60 f5       	brcc	.+88     	; 0x2400 <_Z17handleLinkBusMsgsv+0x41e>
					{
						uint8_t i;
						strcpy(g_messages_text[STATION_ID],g_tempStr);
    23a8:	61 ee       	ldi	r22, 0xE1	; 225
    23aa:	74 e0       	ldi	r23, 0x04	; 4
    23ac:	8d eb       	ldi	r24, 0xBD	; 189
    23ae:	94 e0       	ldi	r25, 0x04	; 4
    23b0:	0e 94 ec 1d 	call	0x3bd8	; 0x3bd8 <strcpy>

						for(i = 0; i < strlen(g_messages_text[STATION_ID]); i++)
    23b4:	19 82       	std	Y+1, r1	; 0x01
    23b6:	89 81       	ldd	r24, Y+1	; 0x01
    23b8:	08 2f       	mov	r16, r24
    23ba:	10 e0       	ldi	r17, 0x00	; 0
    23bc:	8d eb       	ldi	r24, 0xBD	; 189
    23be:	94 e0       	ldi	r25, 0x04	; 4
    23c0:	0e 94 f3 1d 	call	0x3be6	; 0x3be6 <strlen>
    23c4:	08 17       	cp	r16, r24
    23c6:	19 07       	cpc	r17, r25
    23c8:	98 f4       	brcc	.+38     	; 0x23f0 <_Z17handleLinkBusMsgsv+0x40e>
						{
							eeprom_update_byte((uint8_t*)&ee_stationID_text[i],(uint8_t)g_messages_text[STATION_ID][i]);
    23ca:	89 81       	ldd	r24, Y+1	; 0x01
    23cc:	88 2f       	mov	r24, r24
    23ce:	90 e0       	ldi	r25, 0x00	; 0
    23d0:	83 54       	subi	r24, 0x43	; 67
    23d2:	9b 4f       	sbci	r25, 0xFB	; 251
    23d4:	fc 01       	movw	r30, r24
    23d6:	20 81       	ld	r18, Z
    23d8:	89 81       	ldd	r24, Y+1	; 0x01
    23da:	88 2f       	mov	r24, r24
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	8f 5f       	subi	r24, 0xFF	; 255
    23e0:	9f 4f       	sbci	r25, 0xFF	; 255
    23e2:	62 2f       	mov	r22, r18
    23e4:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
					if(strlen(g_tempStr) <= MAX_PATTERN_TEXT_LENGTH)
					{
						uint8_t i;
						strcpy(g_messages_text[STATION_ID],g_tempStr);

						for(i = 0; i < strlen(g_messages_text[STATION_ID]); i++)
    23e8:	89 81       	ldd	r24, Y+1	; 0x01
    23ea:	8f 5f       	subi	r24, 0xFF	; 255
    23ec:	89 83       	std	Y+1, r24	; 0x01
    23ee:	e3 cf       	rjmp	.-58     	; 0x23b6 <_Z17handleLinkBusMsgsv+0x3d4>
						{
							eeprom_update_byte((uint8_t*)&ee_stationID_text[i],(uint8_t)g_messages_text[STATION_ID][i]);
						}

						eeprom_update_byte((uint8_t*)&ee_stationID_text[i],0);
    23f0:	89 81       	ldd	r24, Y+1	; 0x01
    23f2:	88 2f       	mov	r24, r24
    23f4:	90 e0       	ldi	r25, 0x00	; 0
    23f6:	8f 5f       	subi	r24, 0xFF	; 255
    23f8:	9f 4f       	sbci	r25, 0xFF	; 255
    23fa:	60 e0       	ldi	r22, 0x00	; 0
    23fc:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
					}
				}

				if(g_messages_text[STATION_ID][0])
    2400:	80 91 bd 04 	lds	r24, 0x04BD	; 0x8004bd <_ZL15g_messages_text+0x15>
    2404:	88 23       	and	r24, r24
    2406:	01 f1       	breq	.+64     	; 0x2448 <_Z17handleLinkBusMsgsv+0x466>
				{
					g_time_needed_for_ID = (500 + timeRequiredToSendStrAtWPM(g_messages_text[STATION_ID],g_id_codespeed)) / 1000;
    2408:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    240c:	88 2f       	mov	r24, r24
    240e:	90 e0       	ldi	r25, 0x00	; 0
    2410:	bc 01       	movw	r22, r24
    2412:	8d eb       	ldi	r24, 0xBD	; 189
    2414:	94 e0       	ldi	r25, 0x04	; 4
    2416:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_Z26timeRequiredToSendStrAtWPMPcj>
    241a:	8c 50       	subi	r24, 0x0C	; 12
    241c:	9e 4f       	sbci	r25, 0xFE	; 254
    241e:	96 95       	lsr	r25
    2420:	87 95       	ror	r24
    2422:	96 95       	lsr	r25
    2424:	87 95       	ror	r24
    2426:	96 95       	lsr	r25
    2428:	87 95       	ror	r24
    242a:	9c 01       	movw	r18, r24
    242c:	a5 ec       	ldi	r26, 0xC5	; 197
    242e:	b0 e2       	ldi	r27, 0x20	; 32
    2430:	0e 94 44 1c 	call	0x3888	; 0x3888 <__umulhisi3>
    2434:	92 95       	swap	r25
    2436:	82 95       	swap	r24
    2438:	8f 70       	andi	r24, 0x0F	; 15
    243a:	89 27       	eor	r24, r25
    243c:	9f 70       	andi	r25, 0x0F	; 15
    243e:	89 27       	eor	r24, r25
    2440:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <_ZL20g_time_needed_for_ID+0x1>
    2444:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <_ZL20g_time_needed_for_ID>
				}

				sprintf(g_tempStr,"ID:%s\n",g_messages_text[STATION_ID]);
    2448:	8d eb       	ldi	r24, 0xBD	; 189
    244a:	94 e0       	ldi	r25, 0x04	; 4
    244c:	89 2f       	mov	r24, r25
    244e:	8f 93       	push	r24
    2450:	8d eb       	ldi	r24, 0xBD	; 189
    2452:	94 e0       	ldi	r25, 0x04	; 4
    2454:	8f 93       	push	r24
    2456:	8d eb       	ldi	r24, 0xBD	; 189
    2458:	91 e0       	ldi	r25, 0x01	; 1
    245a:	89 2f       	mov	r24, r25
    245c:	8f 93       	push	r24
    245e:	8d eb       	ldi	r24, 0xBD	; 189
    2460:	91 e0       	ldi	r25, 0x01	; 1
    2462:	8f 93       	push	r24
    2464:	81 ee       	ldi	r24, 0xE1	; 225
    2466:	94 e0       	ldi	r25, 0x04	; 4
    2468:	89 2f       	mov	r24, r25
    246a:	8f 93       	push	r24
    246c:	81 ee       	ldi	r24, 0xE1	; 225
    246e:	94 e0       	ldi	r25, 0x04	; 4
    2470:	8f 93       	push	r24
    2472:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    2476:	0f 90       	pop	r0
    2478:	0f 90       	pop	r0
    247a:	0f 90       	pop	r0
    247c:	0f 90       	pop	r0
    247e:	0f 90       	pop	r0
    2480:	0f 90       	pop	r0
				lb_send_string(g_tempStr,TRUE);
    2482:	61 e0       	ldi	r22, 0x01	; 1
    2484:	81 ee       	ldi	r24, 0xE1	; 225
    2486:	94 e0       	ldi	r25, 0x04	; 4
    2488:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    248c:	b1 c0       	rjmp	.+354    	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>


			case MESSAGE_CODE_SPEED:
			{
				if(lb_buff->fields[FIELD1][0] == 'I')
    248e:	8b 81       	ldd	r24, Y+3	; 0x03
    2490:	9c 81       	ldd	r25, Y+4	; 0x04
    2492:	fc 01       	movw	r30, r24
    2494:	83 81       	ldd	r24, Z+3	; 0x03
    2496:	89 34       	cpi	r24, 0x49	; 73
    2498:	09 f0       	breq	.+2      	; 0x249c <_Z17handleLinkBusMsgsv+0x4ba>
    249a:	5a c0       	rjmp	.+180    	; 0x2550 <_Z17handleLinkBusMsgsv+0x56e>
				{
					if(lb_buff->fields[FIELD2][0])
    249c:	8b 81       	ldd	r24, Y+3	; 0x03
    249e:	9c 81       	ldd	r25, Y+4	; 0x04
    24a0:	fc 01       	movw	r30, r24
    24a2:	85 85       	ldd	r24, Z+13	; 0x0d
    24a4:	88 23       	and	r24, r24
    24a6:	09 f4       	brne	.+2      	; 0x24aa <_Z17handleLinkBusMsgsv+0x4c8>
    24a8:	53 c0       	rjmp	.+166    	; 0x2550 <_Z17handleLinkBusMsgsv+0x56e>
					{
						uint8_t speed = atol(lb_buff->fields[FIELD2]);
    24aa:	8b 81       	ldd	r24, Y+3	; 0x03
    24ac:	9c 81       	ldd	r25, Y+4	; 0x04
    24ae:	0d 96       	adiw	r24, 0x0d	; 13
    24b0:	0e 94 b2 1d 	call	0x3b64	; 0x3b64 <atol>
    24b4:	dc 01       	movw	r26, r24
    24b6:	cb 01       	movw	r24, r22
    24b8:	89 87       	std	Y+9, r24	; 0x09
						g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM,speed,MAX_CODE_SPEED_WPM);
    24ba:	89 85       	ldd	r24, Y+9	; 0x09
    24bc:	8a 87       	std	Y+10, r24	; 0x0a
    24be:	85 e0       	ldi	r24, 0x05	; 5
    24c0:	90 e0       	ldi	r25, 0x00	; 0
    24c2:	9c 87       	std	Y+12, r25	; 0x0c
    24c4:	8b 87       	std	Y+11, r24	; 0x0b
    24c6:	84 e1       	ldi	r24, 0x14	; 20
    24c8:	90 e0       	ldi	r25, 0x00	; 0
    24ca:	9e 87       	std	Y+14, r25	; 0x0e
    24cc:	8d 87       	std	Y+13, r24	; 0x0d
    24ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    24d0:	28 2f       	mov	r18, r24
    24d2:	30 e0       	ldi	r19, 0x00	; 0
    24d4:	8d 85       	ldd	r24, Y+13	; 0x0d
    24d6:	9e 85       	ldd	r25, Y+14	; 0x0e
    24d8:	82 17       	cp	r24, r18
    24da:	93 07       	cpc	r25, r19
    24dc:	54 f0       	brlt	.+20     	; 0x24f2 <_Z17handleLinkBusMsgsv+0x510>
    24de:	8a 85       	ldd	r24, Y+10	; 0x0a
    24e0:	88 2f       	mov	r24, r24
    24e2:	90 e0       	ldi	r25, 0x00	; 0
    24e4:	2b 85       	ldd	r18, Y+11	; 0x0b
    24e6:	3c 85       	ldd	r19, Y+12	; 0x0c
    24e8:	82 17       	cp	r24, r18
    24ea:	93 07       	cpc	r25, r19
    24ec:	24 f4       	brge	.+8      	; 0x24f6 <_Z17handleLinkBusMsgsv+0x514>
    24ee:	c9 01       	movw	r24, r18
    24f0:	02 c0       	rjmp	.+4      	; 0x24f6 <_Z17handleLinkBusMsgsv+0x514>
    24f2:	8d 85       	ldd	r24, Y+13	; 0x0d
    24f4:	9e 85       	ldd	r25, Y+14	; 0x0e
    24f6:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_ZL14g_id_codespeed>
						eeprom_update_byte(&ee_id_codespeed,g_id_codespeed);
    24fa:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    24fe:	68 2f       	mov	r22, r24
    2500:	86 e1       	ldi	r24, 0x16	; 22
    2502:	90 e0       	ldi	r25, 0x00	; 0
    2504:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>

						if(g_messages_text[STATION_ID][0])
    2508:	80 91 bd 04 	lds	r24, 0x04BD	; 0x8004bd <_ZL15g_messages_text+0x15>
    250c:	88 23       	and	r24, r24
    250e:	01 f1       	breq	.+64     	; 0x2550 <_Z17handleLinkBusMsgsv+0x56e>
						{
							g_time_needed_for_ID = (500 + timeRequiredToSendStrAtWPM(g_messages_text[STATION_ID],g_id_codespeed)) / 1000;
    2510:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    2514:	88 2f       	mov	r24, r24
    2516:	90 e0       	ldi	r25, 0x00	; 0
    2518:	bc 01       	movw	r22, r24
    251a:	8d eb       	ldi	r24, 0xBD	; 189
    251c:	94 e0       	ldi	r25, 0x04	; 4
    251e:	0e 94 d3 18 	call	0x31a6	; 0x31a6 <_Z26timeRequiredToSendStrAtWPMPcj>
    2522:	8c 50       	subi	r24, 0x0C	; 12
    2524:	9e 4f       	sbci	r25, 0xFE	; 254
    2526:	96 95       	lsr	r25
    2528:	87 95       	ror	r24
    252a:	96 95       	lsr	r25
    252c:	87 95       	ror	r24
    252e:	96 95       	lsr	r25
    2530:	87 95       	ror	r24
    2532:	9c 01       	movw	r18, r24
    2534:	a5 ec       	ldi	r26, 0xC5	; 197
    2536:	b0 e2       	ldi	r27, 0x20	; 32
    2538:	0e 94 44 1c 	call	0x3888	; 0x3888 <__umulhisi3>
    253c:	92 95       	swap	r25
    253e:	82 95       	swap	r24
    2540:	8f 70       	andi	r24, 0x0F	; 15
    2542:	89 27       	eor	r24, r25
    2544:	9f 70       	andi	r25, 0x0F	; 15
    2546:	89 27       	eor	r24, r25
    2548:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <_ZL20g_time_needed_for_ID+0x1>
    254c:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <_ZL20g_time_needed_for_ID>
						}
					}
				}
				sprintf(g_tempStr,"ID:  %d wpm\n",g_id_codespeed);
    2550:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    2554:	88 2f       	mov	r24, r24
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	29 2f       	mov	r18, r25
    255a:	2f 93       	push	r18
    255c:	8f 93       	push	r24
    255e:	84 ec       	ldi	r24, 0xC4	; 196
    2560:	91 e0       	ldi	r25, 0x01	; 1
    2562:	89 2f       	mov	r24, r25
    2564:	8f 93       	push	r24
    2566:	84 ec       	ldi	r24, 0xC4	; 196
    2568:	91 e0       	ldi	r25, 0x01	; 1
    256a:	8f 93       	push	r24
    256c:	81 ee       	ldi	r24, 0xE1	; 225
    256e:	94 e0       	ldi	r25, 0x04	; 4
    2570:	89 2f       	mov	r24, r25
    2572:	8f 93       	push	r24
    2574:	81 ee       	ldi	r24, 0xE1	; 225
    2576:	94 e0       	ldi	r25, 0x04	; 4
    2578:	8f 93       	push	r24
    257a:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    257e:	0f 90       	pop	r0
    2580:	0f 90       	pop	r0
    2582:	0f 90       	pop	r0
    2584:	0f 90       	pop	r0
    2586:	0f 90       	pop	r0
    2588:	0f 90       	pop	r0
				lb_send_string(g_tempStr,FALSE);
    258a:	60 e0       	ldi	r22, 0x00	; 0
    258c:	81 ee       	ldi	r24, 0xE1	; 225
    258e:	94 e0       	ldi	r25, 0x04	; 4
    2590:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    2594:	2d c0       	rjmp	.+90     	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>

			case MESSAGE_VERSION:
			{
				sprintf(g_tempStr,"SW Ver:%s\n",SW_REVISION);
    2596:	87 e2       	ldi	r24, 0x27	; 39
    2598:	91 e0       	ldi	r25, 0x01	; 1
    259a:	89 2f       	mov	r24, r25
    259c:	8f 93       	push	r24
    259e:	87 e2       	ldi	r24, 0x27	; 39
    25a0:	91 e0       	ldi	r25, 0x01	; 1
    25a2:	8f 93       	push	r24
    25a4:	81 ed       	ldi	r24, 0xD1	; 209
    25a6:	91 e0       	ldi	r25, 0x01	; 1
    25a8:	89 2f       	mov	r24, r25
    25aa:	8f 93       	push	r24
    25ac:	81 ed       	ldi	r24, 0xD1	; 209
    25ae:	91 e0       	ldi	r25, 0x01	; 1
    25b0:	8f 93       	push	r24
    25b2:	81 ee       	ldi	r24, 0xE1	; 225
    25b4:	94 e0       	ldi	r25, 0x04	; 4
    25b6:	89 2f       	mov	r24, r25
    25b8:	8f 93       	push	r24
    25ba:	81 ee       	ldi	r24, 0xE1	; 225
    25bc:	94 e0       	ldi	r25, 0x04	; 4
    25be:	8f 93       	push	r24
    25c0:	0e 94 28 1e 	call	0x3c50	; 0x3c50 <sprintf>
    25c4:	0f 90       	pop	r0
    25c6:	0f 90       	pop	r0
    25c8:	0f 90       	pop	r0
    25ca:	0f 90       	pop	r0
    25cc:	0f 90       	pop	r0
    25ce:	0f 90       	pop	r0
				lb_send_string(g_tempStr,FALSE);
    25d0:	60 e0       	ldi	r22, 0x00	; 0
    25d2:	81 ee       	ldi	r24, 0xE1	; 225
    25d4:	94 e0       	ldi	r25, 0x04	; 4
    25d6:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
			}
			break;
    25da:	0a c0       	rjmp	.+20     	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>
			}
			break;

			default:
			{
				lb_send_Help();
    25dc:	0e 94 0c 06 	call	0xc18	; 0xc18 <_Z12lb_send_Helpv>
			}
			break;
    25e0:	07 c0       	rjmp	.+14     	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>
			break;

			case MESSAGE_OVERRIDE_DIP:
			{
			}
			break;
    25e2:	00 00       	nop
    25e4:	05 c0       	rjmp	.+10     	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>
			case MESSAGE_FACTORY_RESET:
			{
/*				initializeEEPROMVars(TRUE);
 *				softwareReset(); */
			}
			break;
    25e6:	00 00       	nop
    25e8:	03 c0       	rjmp	.+6      	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>
		switch(msg_id)
		{
			case MESSAGE_RESET:
			{
			}
			break;
    25ea:	00 00       	nop
    25ec:	01 c0       	rjmp	.+2      	; 0x25f0 <_Z17handleLinkBusMsgsv+0x60e>
			break;

			case MESSAGE_TEMP:
			{
			}
			break;
    25ee:	00 00       	nop
				lb_send_Help();
			}
			break;
		}

		lb_buff->id = (LBMessageID)MESSAGE_EMPTY;
    25f0:	8b 81       	ldd	r24, Y+3	; 0x03
    25f2:	9c 81       	ldd	r25, Y+4	; 0x04
    25f4:	fc 01       	movw	r30, r24
    25f6:	12 82       	std	Z+2, r1	; 0x02
    25f8:	11 82       	std	Z+1, r1	; 0x01
		if(send_ack)
    25fa:	8a 81       	ldd	r24, Y+2	; 0x02
    25fc:	88 23       	and	r24, r24
    25fe:	09 f4       	brne	.+2      	; 0x2602 <_Z17handleLinkBusMsgsv+0x620>
    2600:	fe cc       	rjmp	.-1540   	; 0x1ffe <_Z17handleLinkBusMsgsv+0x1c>
		{
			lb_send_NewPrompt();
    2602:	0e 94 cd 05 	call	0xb9a	; 0xb9a <_Z17lb_send_NewPromptv>
void __attribute__((optimize("O0"))) handleLinkBusMsgs()
{
	LinkbusRxBuffer* lb_buff;
	BOOL send_ack = TRUE;

	while((lb_buff = nextFullRxBuffer()))
    2606:	fb cc       	rjmp	.-1546   	; 0x1ffe <_Z17handleLinkBusMsgsv+0x1c>
		if(send_ack)
		{
			lb_send_NewPrompt();
		}
	}
}
    2608:	00 00       	nop
    260a:	2e 96       	adiw	r28, 0x0e	; 14
    260c:	0f b6       	in	r0, 0x3f	; 63
    260e:	f8 94       	cli
    2610:	de bf       	out	0x3e, r29	; 62
    2612:	0f be       	out	0x3f, r0	; 63
    2614:	cd bf       	out	0x3d, r28	; 61
    2616:	df 91       	pop	r29
    2618:	cf 91       	pop	r28
    261a:	1f 91       	pop	r17
    261c:	0f 91       	pop	r16
    261e:	08 95       	ret

00002620 <_Z10processKeyc>:
	static int digits;
	static int value;
	static int callsignLength;
	static char callsign[MAX_PATTERN_TEXT_LENGTH + 1] = { '\0' };

	switch(state)
    2620:	20 91 48 05 	lds	r18, 0x0548	; 0x800548 <_ZZ10processKeycE5state>
    2624:	30 91 49 05 	lds	r19, 0x0549	; 0x800549 <_ZZ10processKeycE5state+0x1>
    2628:	21 30       	cpi	r18, 0x01	; 1
    262a:	31 05       	cpc	r19, r1
    262c:	e1 f0       	breq	.+56     	; 0x2666 <_Z10processKeyc+0x46>
    262e:	22 30       	cpi	r18, 0x02	; 2
    2630:	31 05       	cpc	r19, r1
    2632:	19 f1       	breq	.+70     	; 0x267a <_Z10processKeyc+0x5a>
    2634:	23 2b       	or	r18, r19
    2636:	09 f0       	breq	.+2      	; 0x263a <_Z10processKeyc+0x1a>
    2638:	7f c0       	rjmp	.+254    	; 0x2738 <_Z10processKeyc+0x118>
	{
		case STATE_IDLE:
		{
			callsignLength = 0;
    263a:	10 92 4b 05 	sts	0x054B, r1	; 0x80054b <_ZZ10processKeycE14callsignLength+0x1>
    263e:	10 92 4a 05 	sts	0x054A, r1	; 0x80054a <_ZZ10processKeycE14callsignLength>
			value = 0;
    2642:	10 92 4d 05 	sts	0x054D, r1	; 0x80054d <_ZZ10processKeycE5value+0x1>
    2646:	10 92 4c 05 	sts	0x054C, r1	; 0x80054c <_ZZ10processKeycE5value>
			digits = 0;
    264a:	10 92 4f 05 	sts	0x054F, r1	; 0x80054f <_ZZ10processKeycE6digits+0x1>
    264e:	10 92 4e 05 	sts	0x054E, r1	; 0x80054e <_ZZ10processKeycE6digits>

			if(key == 'C')
    2652:	83 34       	cpi	r24, 0x43	; 67
    2654:	09 f0       	breq	.+2      	; 0x2658 <_Z10processKeyc+0x38>
    2656:	70 c0       	rjmp	.+224    	; 0x2738 <_Z10processKeyc+0x118>
			{
				state = STATE_C;
    2658:	81 e0       	ldi	r24, 0x01	; 1
    265a:	90 e0       	ldi	r25, 0x00	; 0
    265c:	90 93 49 05 	sts	0x0549, r25	; 0x800549 <_ZZ10processKeycE5state+0x1>
    2660:	80 93 48 05 	sts	0x0548, r24	; 0x800548 <_ZZ10processKeycE5state>
    2664:	08 95       	ret
		}
		break;

		case STATE_C:
		{
			if(key == '1')
    2666:	81 33       	cpi	r24, 0x31	; 49
    2668:	09 f0       	breq	.+2      	; 0x266c <_Z10processKeyc+0x4c>
    266a:	66 c0       	rjmp	.+204    	; 0x2738 <_Z10processKeyc+0x118>
			{
				state = STATE_RECEIVING_CALLSIGN;
    266c:	82 e0       	ldi	r24, 0x02	; 2
    266e:	90 e0       	ldi	r25, 0x00	; 0
    2670:	90 93 49 05 	sts	0x0549, r25	; 0x800549 <_ZZ10processKeycE5state+0x1>
    2674:	80 93 48 05 	sts	0x0548, r24	; 0x800548 <_ZZ10processKeycE5state>
    2678:	08 95       	ret
		}
		break;

		case STATE_RECEIVING_CALLSIGN:
		{
			if(key == '#')
    267a:	83 32       	cpi	r24, 0x23	; 35
    267c:	71 f4       	brne	.+28     	; 0x269a <_Z10processKeyc+0x7a>
			{
				permCallsign(callsign);
    267e:	80 e5       	ldi	r24, 0x50	; 80
    2680:	95 e0       	ldi	r25, 0x05	; 5
    2682:	0e 94 9d 16 	call	0x2d3a	; 0x2d3a <_Z12permCallsignPc>
				lb_send_string(callsign,FALSE);
    2686:	60 e0       	ldi	r22, 0x00	; 0
    2688:	80 e5       	ldi	r24, 0x50	; 80
    268a:	95 e0       	ldi	r25, 0x05	; 5
    268c:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <_Z14lb_send_stringPch>
				state = STATE_IDLE;
    2690:	10 92 49 05 	sts	0x0549, r1	; 0x800549 <_ZZ10processKeycE5state+0x1>
    2694:	10 92 48 05 	sts	0x0548, r1	; 0x800548 <_ZZ10processKeycE5state>
    2698:	08 95       	ret
			}
			else if((key >= '0') && (key <= '9'))
    269a:	90 ed       	ldi	r25, 0xD0	; 208
    269c:	98 0f       	add	r25, r24
    269e:	9a 30       	cpi	r25, 0x0A	; 10
    26a0:	08 f0       	brcs	.+2      	; 0x26a4 <_Z10processKeyc+0x84>
    26a2:	4a c0       	rjmp	.+148    	; 0x2738 <_Z10processKeyc+0x118>
			{
				if(digits)
    26a4:	20 91 4e 05 	lds	r18, 0x054E	; 0x80054e <_ZZ10processKeycE6digits>
    26a8:	30 91 4f 05 	lds	r19, 0x054F	; 0x80054f <_ZZ10processKeycE6digits+0x1>
    26ac:	23 2b       	or	r18, r19
    26ae:	c1 f1       	breq	.+112    	; 0x2720 <_Z10processKeyc+0x100>
				{
					value = value * 10 + (key - '0');
    26b0:	20 91 4c 05 	lds	r18, 0x054C	; 0x80054c <_ZZ10processKeycE5value>
    26b4:	30 91 4d 05 	lds	r19, 0x054D	; 0x80054d <_ZZ10processKeycE5value+0x1>
    26b8:	a9 01       	movw	r20, r18
    26ba:	44 0f       	add	r20, r20
    26bc:	55 1f       	adc	r21, r21
    26be:	22 0f       	add	r18, r18
    26c0:	33 1f       	adc	r19, r19
    26c2:	22 0f       	add	r18, r18
    26c4:	33 1f       	adc	r19, r19
    26c6:	22 0f       	add	r18, r18
    26c8:	33 1f       	adc	r19, r19
    26ca:	24 0f       	add	r18, r20
    26cc:	35 1f       	adc	r19, r21
    26ce:	90 e0       	ldi	r25, 0x00	; 0
    26d0:	c0 97       	sbiw	r24, 0x30	; 48
    26d2:	82 0f       	add	r24, r18
    26d4:	93 1f       	adc	r25, r19
    26d6:	90 93 4d 05 	sts	0x054D, r25	; 0x80054d <_ZZ10processKeycE5value+0x1>
    26da:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <_ZZ10processKeycE5value>
					if((value < 39) && (callsignLength < MAX_PATTERN_TEXT_LENGTH))
    26de:	87 32       	cpi	r24, 0x27	; 39
    26e0:	91 05       	cpc	r25, r1
    26e2:	cc f4       	brge	.+50     	; 0x2716 <_Z10processKeyc+0xf6>
    26e4:	20 91 4a 05 	lds	r18, 0x054A	; 0x80054a <_ZZ10processKeycE14callsignLength>
    26e8:	30 91 4b 05 	lds	r19, 0x054B	; 0x80054b <_ZZ10processKeycE14callsignLength+0x1>
    26ec:	24 31       	cpi	r18, 0x14	; 20
    26ee:	31 05       	cpc	r19, r1
    26f0:	94 f4       	brge	.+36     	; 0x2716 <_Z10processKeyc+0xf6>
					{
						callsign[callsignLength] = keyMorse[value];
    26f2:	f9 01       	movw	r30, r18
    26f4:	e0 5b       	subi	r30, 0xB0	; 176
    26f6:	fa 4f       	sbci	r31, 0xFA	; 250
    26f8:	dc 01       	movw	r26, r24
    26fa:	a4 5d       	subi	r26, 0xD4	; 212
    26fc:	bc 4f       	sbci	r27, 0xFC	; 252
    26fe:	8c 91       	ld	r24, X
    2700:	80 83       	st	Z, r24
						callsignLength++;
    2702:	2f 5f       	subi	r18, 0xFF	; 255
    2704:	3f 4f       	sbci	r19, 0xFF	; 255
    2706:	30 93 4b 05 	sts	0x054B, r19	; 0x80054b <_ZZ10processKeycE14callsignLength+0x1>
    270a:	20 93 4a 05 	sts	0x054A, r18	; 0x80054a <_ZZ10processKeycE14callsignLength>
						callsign[callsignLength] = '\0';
    270e:	f9 01       	movw	r30, r18
    2710:	e0 5b       	subi	r30, 0xB0	; 176
    2712:	fa 4f       	sbci	r31, 0xFA	; 250
    2714:	10 82       	st	Z, r1
					}

					digits = 0;
    2716:	10 92 4f 05 	sts	0x054F, r1	; 0x80054f <_ZZ10processKeycE6digits+0x1>
    271a:	10 92 4e 05 	sts	0x054E, r1	; 0x80054e <_ZZ10processKeycE6digits>
    271e:	08 95       	ret
				}
				else
				{
					value = key - '0';
    2720:	90 e0       	ldi	r25, 0x00	; 0
    2722:	c0 97       	sbiw	r24, 0x30	; 48
    2724:	90 93 4d 05 	sts	0x054D, r25	; 0x80054d <_ZZ10processKeycE5value+0x1>
    2728:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <_ZZ10processKeycE5value>
					digits = 1;
    272c:	81 e0       	ldi	r24, 0x01	; 1
    272e:	90 e0       	ldi	r25, 0x00	; 0
    2730:	90 93 4f 05 	sts	0x054F, r25	; 0x80054f <_ZZ10processKeycE6digits+0x1>
    2734:	80 93 4e 05 	sts	0x054E, r24	; 0x80054e <_ZZ10processKeycE6digits>
    2738:	08 95       	ret

0000273a <_Z20initializeEEPROMVarsh>:

/*
 * Set non-volatile variables to their values stored in EEPROM
 */
void initializeEEPROMVars(BOOL resetAll)
{
    273a:	ef 92       	push	r14
    273c:	ff 92       	push	r15
    273e:	0f 93       	push	r16
    2740:	1f 93       	push	r17
    2742:	cf 93       	push	r28
    2744:	df 93       	push	r29
    2746:	c8 2f       	mov	r28, r24
	uint8_t i;

	uint8_t initialization_flag = eeprom_read_byte(&ee_interface_eeprom_initialization_flag);
    2748:	80 e0       	ldi	r24, 0x00	; 0
    274a:	90 e0       	ldi	r25, 0x00	; 0
    274c:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>

	if(!resetAll && (initialization_flag == EEPROM_INITIALIZED_FLAG))   /* EEPROM is up to date */
    2750:	c1 11       	cpse	r28, r1
    2752:	2b c1       	rjmp	.+598    	; 0x29aa <_Z20initializeEEPROMVarsh+0x270>
    2754:	88 3b       	cpi	r24, 0xB8	; 184
    2756:	09 f0       	breq	.+2      	; 0x275a <_Z20initializeEEPROMVarsh+0x20>
    2758:	4a c0       	rjmp	.+148    	; 0x27ee <_Z20initializeEEPROMVarsh+0xb4>
	{
		g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM,eeprom_read_byte(&ee_id_codespeed),MAX_CODE_SPEED_WPM);
    275a:	86 e1       	ldi	r24, 0x16	; 22
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    2762:	90 e0       	ldi	r25, 0x00	; 0
    2764:	85 30       	cpi	r24, 0x05	; 5
    2766:	91 05       	cpc	r25, r1
    2768:	14 f4       	brge	.+4      	; 0x276e <_Z20initializeEEPROMVarsh+0x34>
    276a:	85 e0       	ldi	r24, 0x05	; 5
    276c:	90 e0       	ldi	r25, 0x00	; 0
    276e:	85 31       	cpi	r24, 0x15	; 21
    2770:	91 05       	cpc	r25, r1
    2772:	14 f0       	brlt	.+4      	; 0x2778 <_Z20initializeEEPROMVarsh+0x3e>
    2774:	84 e1       	ldi	r24, 0x14	; 20
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_ZL14g_id_codespeed>
		g_clock_calibration = eeprom_read_word(&ee_clock_calibration);
    277c:	87 e1       	ldi	r24, 0x17	; 23
    277e:	90 e0       	ldi	r25, 0x00	; 0
    2780:	0e 94 15 23 	call	0x462a	; 0x462a <eeprom_read_word>
    2784:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_ZL19g_clock_calibration+0x1>
    2788:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_ZL19g_clock_calibration>
		g_temp_calibration = (int16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration);
    278c:	8a e1       	ldi	r24, 0x1A	; 26
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	0e 94 15 23 	call	0x462a	; 0x462a <eeprom_read_word>
    2794:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <_ZL18g_temp_calibration+0x1>
    2798:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_ZL18g_temp_calibration>
		g_enable_LEDs = eeprom_read_byte(&ee_enable_LEDs);
    279c:	89 e1       	ldi	r24, 0x19	; 25
    279e:	90 e0       	ldi	r25, 0x00	; 0
    27a0:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    27a4:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <_ZL13g_enable_LEDs>
		g_enable_start_timer = eeprom_read_byte(&ee_enable_start_timer);
    27a8:	8c e1       	ldi	r24, 0x1C	; 28
    27aa:	90 e0       	ldi	r25, 0x00	; 0
    27ac:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    27b0:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <_ZL20g_enable_start_timer>
		g_enable_transmitter = eeprom_read_byte(&ee_enable_transmitter);
    27b4:	8d e1       	ldi	r24, 0x1D	; 29
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    27bc:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <_ZL20g_enable_transmitter>
    27c0:	01 e0       	ldi	r16, 0x01	; 1
    27c2:	10 e0       	ldi	r17, 0x00	; 0
    27c4:	cd eb       	ldi	r28, 0xBD	; 189
    27c6:	d4 e0       	ldi	r29, 0x04	; 4
    27c8:	0f 2e       	mov	r0, r31
    27ca:	f1 ed       	ldi	r31, 0xD1	; 209
    27cc:	ef 2e       	mov	r14, r31
    27ce:	f4 e0       	ldi	r31, 0x04	; 4
    27d0:	ff 2e       	mov	r15, r31
    27d2:	f0 2d       	mov	r31, r0

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
		{
			g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&ee_stationID_text[i]));
    27d4:	c8 01       	movw	r24, r16
    27d6:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    27da:	89 93       	st	Y+, r24
			if(!g_messages_text[STATION_ID][i])
    27dc:	88 23       	and	r24, r24
    27de:	09 f4       	brne	.+2      	; 0x27e2 <_Z20initializeEEPROMVarsh+0xa8>
    27e0:	2d c1       	rjmp	.+602    	; 0x2a3c <_Z20initializeEEPROMVarsh+0x302>
    27e2:	0f 5f       	subi	r16, 0xFF	; 255
    27e4:	1f 4f       	sbci	r17, 0xFF	; 255
		g_temp_calibration = (int16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration);
		g_enable_LEDs = eeprom_read_byte(&ee_enable_LEDs);
		g_enable_start_timer = eeprom_read_byte(&ee_enable_start_timer);
		g_enable_transmitter = eeprom_read_byte(&ee_enable_transmitter);

		for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    27e6:	ce 15       	cp	r28, r14
    27e8:	df 05       	cpc	r29, r15
    27ea:	a1 f7       	brne	.-24     	; 0x27d4 <_Z20initializeEEPROMVarsh+0x9a>
    27ec:	27 c1       	rjmp	.+590    	; 0x2a3c <_Z20initializeEEPROMVarsh+0x302>
			}
		}
	}
	else    /* EEPROM is missing some updates */
	{
		if(resetAll || (eeprom_read_byte(&ee_id_codespeed) == 0xFF))
    27ee:	86 e1       	ldi	r24, 0x16	; 22
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    27f6:	8f 3f       	cpi	r24, 0xFF	; 255
    27f8:	09 f4       	brne	.+2      	; 0x27fc <_Z20initializeEEPROMVarsh+0xc2>
    27fa:	cd c0       	rjmp	.+410    	; 0x2996 <_Z20initializeEEPROMVarsh+0x25c>
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
			eeprom_update_byte(&ee_id_codespeed,g_id_codespeed);
		}
		else
		{
			g_id_codespeed = CLAMP(MIN_CODE_SPEED_WPM,eeprom_read_byte(&ee_id_codespeed),MAX_CODE_SPEED_WPM);
    27fc:	90 e0       	ldi	r25, 0x00	; 0
    27fe:	85 30       	cpi	r24, 0x05	; 5
    2800:	91 05       	cpc	r25, r1
    2802:	14 f4       	brge	.+4      	; 0x2808 <_Z20initializeEEPROMVarsh+0xce>
    2804:	85 e0       	ldi	r24, 0x05	; 5
    2806:	90 e0       	ldi	r25, 0x00	; 0
    2808:	85 31       	cpi	r24, 0x15	; 21
    280a:	91 05       	cpc	r25, r1
    280c:	14 f0       	brlt	.+4      	; 0x2812 <_Z20initializeEEPROMVarsh+0xd8>
    280e:	84 e1       	ldi	r24, 0x14	; 20
    2810:	90 e0       	ldi	r25, 0x00	; 0
    2812:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_ZL14g_id_codespeed>
		}

		if(resetAll || (eeprom_read_word(&ee_clock_calibration) == 0xFFFF))
    2816:	87 e1       	ldi	r24, 0x17	; 23
    2818:	90 e0       	ldi	r25, 0x00	; 0
    281a:	0e 94 15 23 	call	0x462a	; 0x462a <eeprom_read_word>
    281e:	8f 3f       	cpi	r24, 0xFF	; 255
    2820:	2f ef       	ldi	r18, 0xFF	; 255
    2822:	92 07       	cpc	r25, r18
    2824:	89 f4       	brne	.+34     	; 0x2848 <_Z20initializeEEPROMVarsh+0x10e>
		{
			g_clock_calibration = EEPROM_CLOCK_CALIBRATION_DEFAULT;
    2826:	8d e0       	ldi	r24, 0x0D	; 13
    2828:	9d e3       	ldi	r25, 0x3D	; 61
    282a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_ZL19g_clock_calibration+0x1>
    282e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_ZL19g_clock_calibration>
			eeprom_update_word(&ee_clock_calibration,g_clock_calibration);  /* Calibration only gets set by a serial command */
    2832:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <_ZL19g_clock_calibration>
    2836:	70 91 11 01 	lds	r23, 0x0111	; 0x800111 <_ZL19g_clock_calibration+0x1>
    283a:	87 e1       	ldi	r24, 0x17	; 23
    283c:	90 e0       	ldi	r25, 0x00	; 0
    283e:	0e 94 2d 23 	call	0x465a	; 0x465a <eeprom_update_word>
		else
		{
			g_clock_calibration = eeprom_read_word(&ee_clock_calibration);
		}

		if(resetAll || ((uint16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration) == 0xFFFF))
    2842:	c1 11       	cpse	r28, r1
    2844:	bc c0       	rjmp	.+376    	; 0x29be <_Z20initializeEEPROMVarsh+0x284>
    2846:	04 c0       	rjmp	.+8      	; 0x2850 <_Z20initializeEEPROMVarsh+0x116>
			g_clock_calibration = EEPROM_CLOCK_CALIBRATION_DEFAULT;
			eeprom_update_word(&ee_clock_calibration,g_clock_calibration);  /* Calibration only gets set by a serial command */
		}
		else
		{
			g_clock_calibration = eeprom_read_word(&ee_clock_calibration);
    2848:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <_ZL19g_clock_calibration+0x1>
    284c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <_ZL19g_clock_calibration>
		}

		if(resetAll || ((uint16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration) == 0xFFFF))
    2850:	8a e1       	ldi	r24, 0x1A	; 26
    2852:	90 e0       	ldi	r25, 0x00	; 0
    2854:	0e 94 15 23 	call	0x462a	; 0x462a <eeprom_read_word>
    2858:	8f 3f       	cpi	r24, 0xFF	; 255
    285a:	ef ef       	ldi	r30, 0xFF	; 255
    285c:	9e 07       	cpc	r25, r30
    285e:	89 f4       	brne	.+34     	; 0x2882 <_Z20initializeEEPROMVarsh+0x148>
		{
			g_temp_calibration = EEPROM_TEMP_CALIBRATION_DEFAULT;
    2860:	83 e9       	ldi	r24, 0x93	; 147
    2862:	90 e0       	ldi	r25, 0x00	; 0
    2864:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <_ZL18g_temp_calibration+0x1>
    2868:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_ZL18g_temp_calibration>
			eeprom_update_word((uint16_t*)&ee_temp_calibration,(uint16_t)g_temp_calibration);
    286c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <_ZL18g_temp_calibration>
    2870:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <_ZL18g_temp_calibration+0x1>
    2874:	8a e1       	ldi	r24, 0x1A	; 26
    2876:	90 e0       	ldi	r25, 0x00	; 0
    2878:	0e 94 2d 23 	call	0x465a	; 0x465a <eeprom_update_word>
		else
		{
			g_temp_calibration = (int16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration);
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_LEDs) == 0xFF))
    287c:	cc 23       	and	r28, r28
    287e:	29 f0       	breq	.+10     	; 0x288a <_Z20initializeEEPROMVarsh+0x150>
    2880:	ad c0       	rjmp	.+346    	; 0x29dc <_Z20initializeEEPROMVarsh+0x2a2>
			g_temp_calibration = EEPROM_TEMP_CALIBRATION_DEFAULT;
			eeprom_update_word((uint16_t*)&ee_temp_calibration,(uint16_t)g_temp_calibration);
		}
		else
		{
			g_temp_calibration = (int16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration);
    2882:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <_ZL18g_temp_calibration+0x1>
    2886:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_ZL18g_temp_calibration>
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_LEDs) == 0xFF))
    288a:	89 e1       	ldi	r24, 0x19	; 25
    288c:	90 e0       	ldi	r25, 0x00	; 0
    288e:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    2892:	8f 3f       	cpi	r24, 0xFF	; 255
    2894:	61 f4       	brne	.+24     	; 0x28ae <_Z20initializeEEPROMVarsh+0x174>
		{
			g_enable_LEDs = EEPROM_ENABLE_LEDS_DEFAULT;
    2896:	81 e0       	ldi	r24, 0x01	; 1
    2898:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <_ZL13g_enable_LEDs>
			eeprom_update_byte(&ee_enable_LEDs,g_enable_LEDs);  /* Only gets set by a serial command */
    289c:	60 91 d4 04 	lds	r22, 0x04D4	; 0x8004d4 <_ZL13g_enable_LEDs>
    28a0:	89 e1       	ldi	r24, 0x19	; 25
    28a2:	90 e0       	ldi	r25, 0x00	; 0
    28a4:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
		else
		{
			g_enable_LEDs = eeprom_read_byte(&ee_enable_LEDs);
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_start_timer) == 0xFF))
    28a8:	c1 11       	cpse	r28, r1
    28aa:	a2 c0       	rjmp	.+324    	; 0x29f0 <_Z20initializeEEPROMVarsh+0x2b6>
    28ac:	02 c0       	rjmp	.+4      	; 0x28b2 <_Z20initializeEEPROMVarsh+0x178>
			g_enable_LEDs = EEPROM_ENABLE_LEDS_DEFAULT;
			eeprom_update_byte(&ee_enable_LEDs,g_enable_LEDs);  /* Only gets set by a serial command */
		}
		else
		{
			g_enable_LEDs = eeprom_read_byte(&ee_enable_LEDs);
    28ae:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <_ZL13g_enable_LEDs>
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_start_timer) == 0xFF))
    28b2:	8c e1       	ldi	r24, 0x1C	; 28
    28b4:	90 e0       	ldi	r25, 0x00	; 0
    28b6:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    28ba:	8f 3f       	cpi	r24, 0xFF	; 255
    28bc:	69 f4       	brne	.+26     	; 0x28d8 <_Z20initializeEEPROMVarsh+0x19e>
		{
			g_enable_start_timer = EEPROM_ENABLE_STARTTIMER_DEFAULT;
    28be:	81 e0       	ldi	r24, 0x01	; 1
    28c0:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <_ZL20g_enable_start_timer>
			eeprom_update_byte(&ee_enable_start_timer,g_enable_start_timer);    /* Only gets set by a serial command */
    28c4:	60 91 d5 04 	lds	r22, 0x04D5	; 0x8004d5 <_ZL20g_enable_start_timer>
    28c8:	8c e1       	ldi	r24, 0x1C	; 28
    28ca:	90 e0       	ldi	r25, 0x00	; 0
    28cc:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
		else
		{
			g_enable_start_timer = eeprom_read_byte(&ee_enable_start_timer);
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_transmitter) == 0xFF))
    28d0:	cc 23       	and	r28, r28
    28d2:	09 f4       	brne	.+2      	; 0x28d6 <_Z20initializeEEPROMVarsh+0x19c>
    28d4:	a1 c0       	rjmp	.+322    	; 0x2a18 <_Z20initializeEEPROMVarsh+0x2de>
    28d6:	a8 c0       	rjmp	.+336    	; 0x2a28 <_Z20initializeEEPROMVarsh+0x2ee>
			g_enable_start_timer = EEPROM_ENABLE_STARTTIMER_DEFAULT;
			eeprom_update_byte(&ee_enable_start_timer,g_enable_start_timer);    /* Only gets set by a serial command */
		}
		else
		{
			g_enable_start_timer = eeprom_read_byte(&ee_enable_start_timer);
    28d8:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <_ZL20g_enable_start_timer>
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_transmitter) == 0xFF))
    28dc:	8d e1       	ldi	r24, 0x1D	; 29
    28de:	90 e0       	ldi	r25, 0x00	; 0
    28e0:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    28e4:	8f 3f       	cpi	r24, 0xFF	; 255
    28e6:	61 f4       	brne	.+24     	; 0x2900 <_Z20initializeEEPROMVarsh+0x1c6>
		{
			g_enable_transmitter = EEPROM_ENABLE_TRANSMITTER_DEFAULT;
    28e8:	81 e0       	ldi	r24, 0x01	; 1
    28ea:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <_ZL20g_enable_transmitter>
			eeprom_update_byte(&ee_enable_transmitter,g_enable_transmitter);    /* Only gets set by a serial command */
    28ee:	60 91 d6 04 	lds	r22, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
    28f2:	8d e1       	ldi	r24, 0x1D	; 29
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
		else
		{
			g_enable_transmitter = eeprom_read_byte(&ee_enable_transmitter);
		}

		if(resetAll || (eeprom_read_byte((uint8_t*)(&ee_stationID_text[0])) == 0xFF))
    28fa:	c1 11       	cpse	r28, r1
    28fc:	09 c0       	rjmp	.+18     	; 0x2910 <_Z20initializeEEPROMVarsh+0x1d6>
    28fe:	02 c0       	rjmp	.+4      	; 0x2904 <_Z20initializeEEPROMVarsh+0x1ca>
			g_enable_transmitter = EEPROM_ENABLE_TRANSMITTER_DEFAULT;
			eeprom_update_byte(&ee_enable_transmitter,g_enable_transmitter);    /* Only gets set by a serial command */
		}
		else
		{
			g_enable_transmitter = eeprom_read_byte(&ee_enable_transmitter);
    2900:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <_ZL20g_enable_transmitter>
		}

		if(resetAll || (eeprom_read_byte((uint8_t*)(&ee_stationID_text[0])) == 0xFF))
    2904:	81 e0       	ldi	r24, 0x01	; 1
    2906:	90 e0       	ldi	r25, 0x00	; 0
    2908:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    290c:	8f 3f       	cpi	r24, 0xFF	; 255
    290e:	41 f5       	brne	.+80     	; 0x2960 <_Z20initializeEEPROMVarsh+0x226>
		{
			uint16_t i;
			strncpy(g_messages_text[STATION_ID],EEPROM_STATION_ID_DEFAULT,MAX_PATTERN_TEXT_LENGTH);
    2910:	44 e1       	ldi	r20, 0x14	; 20
    2912:	50 e0       	ldi	r21, 0x00	; 0
    2914:	6c ed       	ldi	r22, 0xDC	; 220
    2916:	71 e0       	ldi	r23, 0x01	; 1
    2918:	8d eb       	ldi	r24, 0xBD	; 189
    291a:	94 e0       	ldi	r25, 0x04	; 4
    291c:	0e 94 fc 1d 	call	0x3bf8	; 0x3bf8 <strncpy>
    2920:	0d eb       	ldi	r16, 0xBD	; 189
    2922:	14 e0       	ldi	r17, 0x04	; 4

			for(i = 0; i < strlen(g_messages_text[STATION_ID]); i++)    /* Only gets set by a serial command */
    2924:	c0 e0       	ldi	r28, 0x00	; 0
    2926:	d0 e0       	ldi	r29, 0x00	; 0
    2928:	78 01       	movw	r14, r16
    292a:	f7 01       	movw	r30, r14
    292c:	01 90       	ld	r0, Z+
    292e:	00 20       	and	r0, r0
    2930:	e9 f7       	brne	.-6      	; 0x292c <_Z20initializeEEPROMVarsh+0x1f2>
    2932:	cf 01       	movw	r24, r30
    2934:	8e 5b       	subi	r24, 0xBE	; 190
    2936:	94 40       	sbci	r25, 0x04	; 4
    2938:	c8 17       	cp	r28, r24
    293a:	d9 07       	cpc	r29, r25
    293c:	50 f4       	brcc	.+20     	; 0x2952 <_Z20initializeEEPROMVarsh+0x218>
			{
				eeprom_update_byte((uint8_t*)&ee_stationID_text[i],(uint8_t)g_messages_text[STATION_ID][i]);
    293e:	f8 01       	movw	r30, r16
    2940:	61 91       	ld	r22, Z+
    2942:	8f 01       	movw	r16, r30
    2944:	ce 01       	movw	r24, r28
    2946:	8f 5f       	subi	r24, 0xFF	; 255
    2948:	9f 4f       	sbci	r25, 0xFF	; 255
    294a:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
		if(resetAll || (eeprom_read_byte((uint8_t*)(&ee_stationID_text[0])) == 0xFF))
		{
			uint16_t i;
			strncpy(g_messages_text[STATION_ID],EEPROM_STATION_ID_DEFAULT,MAX_PATTERN_TEXT_LENGTH);

			for(i = 0; i < strlen(g_messages_text[STATION_ID]); i++)    /* Only gets set by a serial command */
    294e:	21 96       	adiw	r28, 0x01	; 1
    2950:	ec cf       	rjmp	.-40     	; 0x292a <_Z20initializeEEPROMVarsh+0x1f0>
			{
				eeprom_update_byte((uint8_t*)&ee_stationID_text[i],(uint8_t)g_messages_text[STATION_ID][i]);
			}
			eeprom_update_byte((uint8_t*)&ee_stationID_text[i],0);
    2952:	60 e0       	ldi	r22, 0x00	; 0
    2954:	ce 01       	movw	r24, r28
    2956:	8f 5f       	subi	r24, 0xFF	; 255
    2958:	9f 4f       	sbci	r25, 0xFF	; 255
    295a:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
    295e:	15 c0       	rjmp	.+42     	; 0x298a <_Z20initializeEEPROMVarsh+0x250>
    2960:	01 e0       	ldi	r16, 0x01	; 1
    2962:	10 e0       	ldi	r17, 0x00	; 0
    2964:	cd eb       	ldi	r28, 0xBD	; 189
    2966:	d4 e0       	ldi	r29, 0x04	; 4
    2968:	0f 2e       	mov	r0, r31
    296a:	f1 ed       	ldi	r31, 0xD1	; 209
    296c:	ef 2e       	mov	r14, r31
    296e:	f4 e0       	ldi	r31, 0x04	; 4
    2970:	ff 2e       	mov	r15, r31
    2972:	f0 2d       	mov	r31, r0
		}
		else
		{
			for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
			{
				g_messages_text[STATION_ID][i] = (char)eeprom_read_byte((uint8_t*)(&ee_stationID_text[i]));
    2974:	c8 01       	movw	r24, r16
    2976:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    297a:	89 93       	st	Y+, r24
				if(!g_messages_text[STATION_ID][i])
    297c:	88 23       	and	r24, r24
    297e:	29 f0       	breq	.+10     	; 0x298a <_Z20initializeEEPROMVarsh+0x250>
    2980:	0f 5f       	subi	r16, 0xFF	; 255
    2982:	1f 4f       	sbci	r17, 0xFF	; 255
			}
			eeprom_update_byte((uint8_t*)&ee_stationID_text[i],0);
		}
		else
		{
			for(i = 0; i < MAX_PATTERN_TEXT_LENGTH; i++)
    2984:	ce 15       	cp	r28, r14
    2986:	df 05       	cpc	r29, r15
    2988:	a9 f7       	brne	.-22     	; 0x2974 <_Z20initializeEEPROMVarsh+0x23a>
					break;
				}
			}
		}

		eeprom_write_byte(&ee_interface_eeprom_initialization_flag,EEPROM_INITIALIZED_FLAG);
    298a:	68 eb       	ldi	r22, 0xB8	; 184
    298c:	80 e0       	ldi	r24, 0x00	; 0
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	0e 94 33 23 	call	0x4666	; 0x4666 <eeprom_write_byte>
	}

	return;
    2994:	53 c0       	rjmp	.+166    	; 0x2a3c <_Z20initializeEEPROMVarsh+0x302>
	}
	else    /* EEPROM is missing some updates */
	{
		if(resetAll || (eeprom_read_byte(&ee_id_codespeed) == 0xFF))
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    2996:	84 e1       	ldi	r24, 0x14	; 20
    2998:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_ZL14g_id_codespeed>
			eeprom_update_byte(&ee_id_codespeed,g_id_codespeed);
    299c:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    29a0:	86 e1       	ldi	r24, 0x16	; 22
    29a2:	90 e0       	ldi	r25, 0x00	; 0
    29a4:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
    29a8:	36 cf       	rjmp	.-404    	; 0x2816 <_Z20initializeEEPROMVarsh+0xdc>
	}
	else    /* EEPROM is missing some updates */
	{
		if(resetAll || (eeprom_read_byte(&ee_id_codespeed) == 0xFF))
		{
			g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
    29aa:	84 e1       	ldi	r24, 0x14	; 20
    29ac:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <_ZL14g_id_codespeed>
			eeprom_update_byte(&ee_id_codespeed,g_id_codespeed);
    29b0:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <_ZL14g_id_codespeed>
    29b4:	86 e1       	ldi	r24, 0x16	; 22
    29b6:	90 e0       	ldi	r25, 0x00	; 0
    29b8:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
    29bc:	34 cf       	rjmp	.-408    	; 0x2826 <_Z20initializeEEPROMVarsh+0xec>
			g_clock_calibration = eeprom_read_word(&ee_clock_calibration);
		}

		if(resetAll || ((uint16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration) == 0xFFFF))
		{
			g_temp_calibration = EEPROM_TEMP_CALIBRATION_DEFAULT;
    29be:	83 e9       	ldi	r24, 0x93	; 147
    29c0:	90 e0       	ldi	r25, 0x00	; 0
    29c2:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <_ZL18g_temp_calibration+0x1>
    29c6:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_ZL18g_temp_calibration>
			eeprom_update_word((uint16_t*)&ee_temp_calibration,(uint16_t)g_temp_calibration);
    29ca:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <_ZL18g_temp_calibration>
    29ce:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <_ZL18g_temp_calibration+0x1>
    29d2:	8a e1       	ldi	r24, 0x1A	; 26
    29d4:	90 e0       	ldi	r25, 0x00	; 0
    29d6:	0e 94 2d 23 	call	0x465a	; 0x465a <eeprom_update_word>
    29da:	5d cf       	rjmp	.-326    	; 0x2896 <_Z20initializeEEPROMVarsh+0x15c>
			g_temp_calibration = (int16_t)eeprom_read_word((uint16_t*)&ee_temp_calibration);
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_LEDs) == 0xFF))
		{
			g_enable_LEDs = EEPROM_ENABLE_LEDS_DEFAULT;
    29dc:	81 e0       	ldi	r24, 0x01	; 1
    29de:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <_ZL13g_enable_LEDs>
			eeprom_update_byte(&ee_enable_LEDs,g_enable_LEDs);  /* Only gets set by a serial command */
    29e2:	60 91 d4 04 	lds	r22, 0x04D4	; 0x8004d4 <_ZL13g_enable_LEDs>
    29e6:	89 e1       	ldi	r24, 0x19	; 25
    29e8:	90 e0       	ldi	r25, 0x00	; 0
    29ea:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
    29ee:	67 cf       	rjmp	.-306    	; 0x28be <_Z20initializeEEPROMVarsh+0x184>
			g_enable_LEDs = eeprom_read_byte(&ee_enable_LEDs);
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_start_timer) == 0xFF))
		{
			g_enable_start_timer = EEPROM_ENABLE_STARTTIMER_DEFAULT;
    29f0:	81 e0       	ldi	r24, 0x01	; 1
    29f2:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <_ZL20g_enable_start_timer>
			eeprom_update_byte(&ee_enable_start_timer,g_enable_start_timer);    /* Only gets set by a serial command */
    29f6:	60 91 d5 04 	lds	r22, 0x04D5	; 0x8004d5 <_ZL20g_enable_start_timer>
    29fa:	8c e1       	ldi	r24, 0x1C	; 28
    29fc:	90 e0       	ldi	r25, 0x00	; 0
    29fe:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
    2a02:	72 cf       	rjmp	.-284    	; 0x28e8 <_Z20initializeEEPROMVarsh+0x1ae>
			g_enable_start_timer = eeprom_read_byte(&ee_enable_start_timer);
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_transmitter) == 0xFF))
		{
			g_enable_transmitter = EEPROM_ENABLE_TRANSMITTER_DEFAULT;
    2a04:	81 e0       	ldi	r24, 0x01	; 1
    2a06:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <_ZL20g_enable_transmitter>
			eeprom_update_byte(&ee_enable_transmitter,g_enable_transmitter);    /* Only gets set by a serial command */
    2a0a:	60 91 d6 04 	lds	r22, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
    2a0e:	8d e1       	ldi	r24, 0x1D	; 29
    2a10:	90 e0       	ldi	r25, 0x00	; 0
    2a12:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
    2a16:	76 cf       	rjmp	.-276    	; 0x2904 <_Z20initializeEEPROMVarsh+0x1ca>
		else
		{
			g_enable_start_timer = eeprom_read_byte(&ee_enable_start_timer);
		}

		if(resetAll || (eeprom_read_byte(&ee_enable_transmitter) == 0xFF))
    2a18:	8d e1       	ldi	r24, 0x1D	; 29
    2a1a:	90 e0       	ldi	r25, 0x00	; 0
    2a1c:	0e 94 0d 23 	call	0x461a	; 0x461a <eeprom_read_byte>
    2a20:	8f 3f       	cpi	r24, 0xFF	; 255
    2a22:	09 f0       	breq	.+2      	; 0x2a26 <_Z20initializeEEPROMVarsh+0x2ec>
    2a24:	6d cf       	rjmp	.-294    	; 0x2900 <_Z20initializeEEPROMVarsh+0x1c6>
    2a26:	ee cf       	rjmp	.-36     	; 0x2a04 <_Z20initializeEEPROMVarsh+0x2ca>
		{
			g_enable_transmitter = EEPROM_ENABLE_TRANSMITTER_DEFAULT;
    2a28:	81 e0       	ldi	r24, 0x01	; 1
    2a2a:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <_ZL20g_enable_transmitter>
			eeprom_update_byte(&ee_enable_transmitter,g_enable_transmitter);    /* Only gets set by a serial command */
    2a2e:	60 91 d6 04 	lds	r22, 0x04D6	; 0x8004d6 <_ZL20g_enable_transmitter>
    2a32:	8d e1       	ldi	r24, 0x1D	; 29
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
    2a3a:	6a cf       	rjmp	.-300    	; 0x2910 <_Z20initializeEEPROMVarsh+0x1d6>

		eeprom_write_byte(&ee_interface_eeprom_initialization_flag,EEPROM_INITIALIZED_FLAG);
	}

	return;
}
    2a3c:	df 91       	pop	r29
    2a3e:	cf 91       	pop	r28
    2a40:	1f 91       	pop	r17
    2a42:	0f 91       	pop	r16
    2a44:	ff 90       	pop	r15
    2a46:	ef 90       	pop	r14
    2a48:	08 95       	ret

00002a4a <_Z17doSynchronizationv>:

void doSynchronization()
{
	setupForFox();
    2a4a:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <_Z11setupForFoxv>
	cli();
    2a4e:	f8 94       	cli
	/* Sync button pin change interrupt */
	PCMSK2 = 0x00;
    2a50:	ed e6       	ldi	r30, 0x6D	; 109
    2a52:	f0 e0       	ldi	r31, 0x00	; 0
    2a54:	10 82       	st	Z, r1
	PCMSK2 = (1 << PCINT19);    /* Enable PCINT19 */
    2a56:	88 e0       	ldi	r24, 0x08	; 8
    2a58:	80 83       	st	Z, r24
	PCICR = 0x00;
    2a5a:	e8 e6       	ldi	r30, 0x68	; 104
    2a5c:	f0 e0       	ldi	r31, 0x00	; 0
    2a5e:	10 82       	st	Z, r1
	PCICR = (1 << PCIE2);       /* Enable pin change interrupt 2 */
    2a60:	84 e0       	ldi	r24, 0x04	; 4
    2a62:	80 83       	st	Z, r24
	pinMode(PIN_SYNC,INPUT_PULLUP);
    2a64:	63 e0       	ldi	r22, 0x03	; 3
    2a66:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	g_sync_enabled = TRUE;
    2a6a:	81 e0       	ldi	r24, 0x01	; 1
    2a6c:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <g_sync_enabled>

	TCNT1 = 0;                  /* Initialize 1-second counter value to 0 */
    2a70:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    2a74:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	g_seconds_since_sync = 0;
    2a78:	10 92 8c 04 	sts	0x048C, r1	; 0x80048c <g_seconds_since_sync>
    2a7c:	10 92 8d 04 	sts	0x048D, r1	; 0x80048d <g_seconds_since_sync+0x1>
    2a80:	10 92 8e 04 	sts	0x048E, r1	; 0x80048e <g_seconds_since_sync+0x2>
    2a84:	10 92 8f 04 	sts	0x048F, r1	; 0x80048f <g_seconds_since_sync+0x3>
	g_fox_seconds_into_interval = 0;
    2a88:	10 92 9a 04 	sts	0x049A, r1	; 0x80049a <g_fox_seconds_into_interval+0x1>
    2a8c:	10 92 99 04 	sts	0x0499, r1	; 0x800499 <g_fox_seconds_into_interval>
	g_sync_pin_stable = FALSE;
    2a90:	10 92 a7 04 	sts	0x04A7, r1	; 0x8004a7 <g_sync_pin_stable>
	digitalWrite(PIN_LED1,LOW);
    2a94:	60 e0       	ldi	r22, 0x00	; 0
    2a96:	8d e0       	ldi	r24, 0x0D	; 13
    2a98:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	g_on_the_air = FALSE;
    2a9c:	10 92 92 04 	sts	0x0492, r1	; 0x800492 <g_on_the_air+0x1>
    2aa0:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <g_on_the_air>
	g_fox_counter = 1;  /* Don't count on the 1-sec timer resetting this quickly enough */
    2aa4:	81 e0       	ldi	r24, 0x01	; 1
    2aa6:	90 e0       	ldi	r25, 0x00	; 0
    2aa8:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <g_fox_counter+0x1>
    2aac:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <g_fox_counter>
	sei();
    2ab0:	78 94       	sei
    2ab2:	08 95       	ret

00002ab4 <_Z11setupForFoxv>:
}

void setupForFox()
{
	cli();
    2ab4:	f8 94       	cli

/*	pinMode(PIN_RXD,INPUT_PULLUP);              / * Arduino Pro Mini pin# 1/28 = PD0 * /
 *	pinMode(PIN_TXD,INPUT_PULLUP);              / * Arduino Pro Mini pin# 2/29 = PD1 * / */
	pinMode(PIN_D4,OUTPUT);             /* Arduino Pro Mini pin# 1/28 = PD0 */
    2ab6:	61 e0       	ldi	r22, 0x01	; 1
    2ab8:	80 e0       	ldi	r24, 0x00	; 0
    2aba:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_D5,OUTPUT);             /* Arduino Pro Mini pin# 2/29 = PD1 */
    2abe:	61 e0       	ldi	r22, 0x01	; 1
    2ac0:	81 e0       	ldi	r24, 0x01	; 1
    2ac2:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_RTC_SQW,INPUT_PULLUP);  /* Arduino Pro Mini pin# 5 = PD2 */
    2ac6:	63 e0       	ldi	r22, 0x03	; 3
    2ac8:	82 e0       	ldi	r24, 0x02	; 2
    2aca:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_RTC_INT,INPUT_PULLUP);  /* Arduino Pro Mini pin# 6 = PD3 */
    2ace:	63 e0       	ldi	r22, 0x03	; 3
    2ad0:	83 e0       	ldi	r24, 0x03	; 3
    2ad2:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_SYNC,INPUT_PULLUP);     /* Arduino Pro Mini pin# 7 = PD4 */
    2ad6:	63 e0       	ldi	r22, 0x03	; 3
    2ad8:	84 e0       	ldi	r24, 0x04	; 4
    2ada:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_UNUSED_1,INPUT_PULLUP); /* Arduino Pro Mini pin# 8 = PD5 */
    2ade:	63 e0       	ldi	r22, 0x03	; 3
    2ae0:	85 e0       	ldi	r24, 0x05	; 5
    2ae2:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_PWDN,OUTPUT);           /* Arduino Pro Mini pin# 9 = PD6 */
    2ae6:	61 e0       	ldi	r22, 0x01	; 1
    2ae8:	86 e0       	ldi	r24, 0x06	; 6
    2aea:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_LED2,OUTPUT);           /* Arduino Pro Mini pin# 10 = PD7 */
    2aee:	61 e0       	ldi	r22, 0x01	; 1
    2af0:	87 e0       	ldi	r24, 0x07	; 7
    2af2:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_PTT_LOGIC,OUTPUT);      /* Arduino Pro Mini pin# 11 = PB0 */
    2af6:	61 e0       	ldi	r22, 0x01	; 1
    2af8:	88 e0       	ldi	r24, 0x08	; 8
    2afa:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_CW_TONE_LOGIC,OUTPUT);  /* Arduino Pro Mini pin# 12 = PB1 */
    2afe:	61 e0       	ldi	r22, 0x01	; 1
    2b00:	89 e0       	ldi	r24, 0x09	; 9
    2b02:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_CW_KEY_LOGIC,OUTPUT);   /* Arduino Pro Mini pin# 13 = PB2 */
    2b06:	61 e0       	ldi	r22, 0x01	; 1
    2b08:	8a e0       	ldi	r24, 0x0A	; 10
    2b0a:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
/*	pinMode(PIN_MOSI,INPUT_PULLUP);             / * Arduino Pro Mini pin# 14 = PB3 * /
 *	pinMode(PIN_MISO,INPUT_PULLUP);             / * Arduino Pro Mini pin# 15 = PB4 * / */
	pinMode(PIN_LED1,OUTPUT);           /* Arduino Pro Mini pin# 16 = PB5 = SCK */
    2b0e:	61 e0       	ldi	r22, 0x01	; 1
    2b10:	8d e0       	ldi	r24, 0x0D	; 13
    2b12:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_D0,OUTPUT);             /* Arduino Pro Mini pin# 17 = PC0 */
    2b16:	61 e0       	ldi	r22, 0x01	; 1
    2b18:	8e e0       	ldi	r24, 0x0E	; 14
    2b1a:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_D1,OUTPUT);             /* Arduino Pro Mini pin# 18 = PC1 */
    2b1e:	61 e0       	ldi	r22, 0x01	; 1
    2b20:	8f e0       	ldi	r24, 0x0F	; 15
    2b22:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_D2,OUTPUT);             /* Arduino Pro Mini pin# 19 = PC2 */
    2b26:	61 e0       	ldi	r22, 0x01	; 1
    2b28:	80 e1       	ldi	r24, 0x10	; 16
    2b2a:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
	pinMode(PIN_D3,OUTPUT);             /* Arduino Pro Mini pin# 20 = PC3 */
    2b2e:	61 e0       	ldi	r22, 0x01	; 1
    2b30:	81 e1       	ldi	r24, 0x11	; 17
    2b32:	0e 94 90 01 	call	0x320	; 0x320 <_Z7pinModehh>
/*	pinMode(PIN_AUDIO_INPUT,INPUT);      / * Arduino Pro Mini pin# 31 = ADC6 * /
 *	pinMode(PIN_BATTERY_LEVEL,INPUT);    / * Arduino Pro Mini pin# 32 = ADC7 * /
 *	pinMode(PIN_SDA,INPUT_PULLUP);              / * Arduino Pro Mini pin# 33 = SDA * /
 *	pinMode(PIN_SCL,INPUT_PULLUP);              / * Arduino Pro Mini pin# 34 = SCL * / */

	digitalWrite(PIN_LED1,OFF);         /* Turn off LED1 */
    2b36:	60 e0       	ldi	r22, 0x00	; 0
    2b38:	8d e0       	ldi	r24, 0x0D	; 13
    2b3a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_LED2,OFF);         /* Turn off LED2 */
    2b3e:	60 e0       	ldi	r22, 0x00	; 0
    2b40:	87 e0       	ldi	r24, 0x07	; 7
    2b42:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_D0,OFF);
    2b46:	60 e0       	ldi	r22, 0x00	; 0
    2b48:	8e e0       	ldi	r24, 0x0E	; 14
    2b4a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_D1,OFF);
    2b4e:	60 e0       	ldi	r22, 0x00	; 0
    2b50:	8f e0       	ldi	r24, 0x0F	; 15
    2b52:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_D2,OFF);
    2b56:	60 e0       	ldi	r22, 0x00	; 0
    2b58:	80 e1       	ldi	r24, 0x10	; 16
    2b5a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_D3,OFF);
    2b5e:	60 e0       	ldi	r22, 0x00	; 0
    2b60:	81 e1       	ldi	r24, 0x11	; 17
    2b62:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_D4,OFF);
    2b66:	60 e0       	ldi	r22, 0x00	; 0
    2b68:	80 e0       	ldi	r24, 0x00	; 0
    2b6a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_D5,OFF);
    2b6e:	60 e0       	ldi	r22, 0x00	; 0
    2b70:	81 e0       	ldi	r24, 0x01	; 1
    2b72:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_PWDN,OFF);
    2b76:	60 e0       	ldi	r22, 0x00	; 0
    2b78:	86 e0       	ldi	r24, 0x06	; 6
    2b7a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_PTT_LOGIC,OFF);
    2b7e:	60 e0       	ldi	r22, 0x00	; 0
    2b80:	88 e0       	ldi	r24, 0x08	; 8
    2b82:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_CW_TONE_LOGIC,OFF);
    2b86:	60 e0       	ldi	r22, 0x00	; 0
    2b88:	89 e0       	ldi	r24, 0x09	; 9
    2b8a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>
	digitalWrite(PIN_CW_KEY_LOGIC,OFF);
    2b8e:	60 e0       	ldi	r22, 0x00	; 0
    2b90:	8a e0       	ldi	r24, 0x0A	; 10
    2b92:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z12digitalWritehh>

	g_seconds_since_sync = 0;   /* Total elapsed time counter */
    2b96:	10 92 8c 04 	sts	0x048C, r1	; 0x80048c <g_seconds_since_sync>
    2b9a:	10 92 8d 04 	sts	0x048D, r1	; 0x80048d <g_seconds_since_sync+0x1>
    2b9e:	10 92 8e 04 	sts	0x048E, r1	; 0x80048e <g_seconds_since_sync+0x2>
    2ba2:	10 92 8f 04 	sts	0x048F, r1	; 0x80048f <g_seconds_since_sync+0x3>
	g_on_the_air       = FALSE; /* Controls transmitter Morse activity */
    2ba6:	10 92 92 04 	sts	0x0492, r1	; 0x800492 <g_on_the_air+0x1>
    2baa:	10 92 91 04 	sts	0x0491, r1	; 0x800491 <g_on_the_air>
	g_code_throttle    = 0;     /* Adjusts Morse code speed */
    2bae:	10 92 94 04 	sts	0x0494, r1	; 0x800494 <g_code_throttle+0x1>
    2bb2:	10 92 93 04 	sts	0x0493, r1	; 0x800493 <g_code_throttle>
	g_callsign_sent = FALSE;
    2bb6:	10 92 95 04 	sts	0x0495, r1	; 0x800495 <g_callsign_sent>

	g_on_air_interval = 0;
    2bba:	10 92 98 04 	sts	0x0498, r1	; 0x800498 <g_on_air_interval+0x1>
    2bbe:	10 92 97 04 	sts	0x0497, r1	; 0x800497 <g_on_air_interval>
	g_fox_seconds_into_interval = 0;
    2bc2:	10 92 9a 04 	sts	0x049A, r1	; 0x80049a <g_fox_seconds_into_interval+0x1>
    2bc6:	10 92 99 04 	sts	0x0499, r1	; 0x800499 <g_fox_seconds_into_interval>
	g_number_of_foxes = 0;
    2bca:	10 92 9c 04 	sts	0x049C, r1	; 0x80049c <g_number_of_foxes+0x1>
    2bce:	10 92 9b 04 	sts	0x049B, r1	; 0x80049b <g_number_of_foxes>
	g_fox_transition = FALSE;
    2bd2:	10 92 9d 04 	sts	0x049D, r1	; 0x80049d <g_fox_transition>
	g_fox_id_offset = 0;
    2bd6:	10 92 9f 04 	sts	0x049F, r1	; 0x80049f <g_fox_id_offset+0x1>
    2bda:	10 92 9e 04 	sts	0x049E, r1	; 0x80049e <g_fox_id_offset>
	g_id_interval = 0;
    2bde:	10 92 a1 04 	sts	0x04A1, r1	; 0x8004a1 <g_id_interval+0x1>
    2be2:	10 92 a0 04 	sts	0x04A0, r1	; 0x8004a0 <g_id_interval>
	g_time_to_ID = FALSE;
    2be6:	10 92 a2 04 	sts	0x04A2, r1	; 0x8004a2 <g_time_to_ID>
	g_audio_tone_state = OFF;
    2bea:	10 92 a3 04 	sts	0x04A3, r1	; 0x8004a3 <g_audio_tone_state>
	sei();
    2bee:	78 94       	sei

	g_LEDs_Timed_Out = !g_enable_LEDs;
    2bf0:	90 91 d4 04 	lds	r25, 0x04D4	; 0x8004d4 <_ZL13g_enable_LEDs>
    2bf4:	81 e0       	ldi	r24, 0x01	; 1
    2bf6:	91 11       	cpse	r25, r1
    2bf8:	80 e0       	ldi	r24, 0x00	; 0
    2bfa:	80 93 0b 05 	sts	0x050B, r24	; 0x80050b <_ZL16g_LEDs_Timed_Out>

	g_fox = BEACON;
    2bfe:	10 92 90 04 	sts	0x0490, r1	; 0x800490 <g_fox>
	if(g_fox == INVALID_FOX)
    2c02:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    2c06:	86 31       	cpi	r24, 0x16	; 22
    2c08:	11 f4       	brne	.+4      	; 0x2c0e <_Z11setupForFoxv+0x15a>
	{
		g_fox = BEACON;
    2c0a:	10 92 90 04 	sts	0x0490, r1	; 0x800490 <g_fox>
	}

	switch(g_fox)
    2c0e:	e0 91 90 04 	lds	r30, 0x0490	; 0x800490 <g_fox>
    2c12:	8e 2f       	mov	r24, r30
    2c14:	90 e0       	ldi	r25, 0x00	; 0
    2c16:	fc 01       	movw	r30, r24
    2c18:	31 97       	sbiw	r30, 0x01	; 1
    2c1a:	e5 31       	cpi	r30, 0x15	; 21
    2c1c:	f1 05       	cpc	r31, r1
    2c1e:	08 f0       	brcs	.+2      	; 0x2c22 <_Z11setupForFoxv+0x16e>
    2c20:	6b c0       	rjmp	.+214    	; 0x2cf8 <_Z11setupForFoxv+0x244>
    2c22:	ea 59       	subi	r30, 0x9A	; 154
    2c24:	ff 4f       	sbci	r31, 0xFF	; 255
    2c26:	0c 94 3e 1c 	jmp	0x387c	; 0x387c <__tablejump2__>
	{
		case NO_CODE_START_TONES_2M:
		{
			g_startclock_interval = 120;
    2c2a:	88 e7       	ldi	r24, 0x78	; 120
    2c2c:	90 e0       	ldi	r25, 0x00	; 0
    2c2e:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <g_startclock_interval+0x1>
    2c32:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <g_startclock_interval>
			g_enable_start_timer = TRUE;
    2c36:	81 e0       	ldi	r24, 0x01	; 1
    2c38:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <_ZL20g_enable_start_timer>
		}
		break;
    2c3c:	08 95       	ret

		case NO_CODE_START_TONES_5M:
		{
			g_startclock_interval = 300;
    2c3e:	8c e2       	ldi	r24, 0x2C	; 44
    2c40:	91 e0       	ldi	r25, 0x01	; 1
    2c42:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <g_startclock_interval+0x1>
    2c46:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <g_startclock_interval>
			g_enable_start_timer = TRUE;
    2c4a:	81 e0       	ldi	r24, 0x01	; 1
    2c4c:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <_ZL20g_enable_start_timer>
		}
		break;
    2c50:	08 95       	ret
		case FOX_3:
		case FOX_4:
		case FOX_5:
		case FOX_DEMO:
		{
			g_on_air_interval = 60;
    2c52:	8c e3       	ldi	r24, 0x3C	; 60
    2c54:	90 e0       	ldi	r25, 0x00	; 0
    2c56:	90 93 98 04 	sts	0x0498, r25	; 0x800498 <g_on_air_interval+0x1>
    2c5a:	80 93 97 04 	sts	0x0497, r24	; 0x800497 <g_on_air_interval>
			g_number_of_foxes = 5;
    2c5e:	25 e0       	ldi	r18, 0x05	; 5
    2c60:	30 e0       	ldi	r19, 0x00	; 0
    2c62:	30 93 9c 04 	sts	0x049C, r19	; 0x80049c <g_number_of_foxes+0x1>
    2c66:	20 93 9b 04 	sts	0x049B, r18	; 0x80049b <g_number_of_foxes>
			g_fox_id_offset = 0;
    2c6a:	10 92 9f 04 	sts	0x049F, r1	; 0x80049f <g_fox_id_offset+0x1>
    2c6e:	10 92 9e 04 	sts	0x049E, r1	; 0x80049e <g_fox_id_offset>
			g_pattern_codespeed = 8;
    2c72:	28 e0       	ldi	r18, 0x08	; 8
    2c74:	20 93 0f 01 	sts	0x010F, r18	; 0x80010f <_ZL19g_pattern_codespeed>
			g_id_interval = 60;
    2c78:	90 93 a1 04 	sts	0x04A1, r25	; 0x8004a1 <g_id_interval+0x1>
    2c7c:	80 93 a0 04 	sts	0x04A0, r24	; 0x8004a0 <g_id_interval>
			g_startclock_interval = 300;
    2c80:	8c e2       	ldi	r24, 0x2C	; 44
    2c82:	91 e0       	ldi	r25, 0x01	; 1
    2c84:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <g_startclock_interval+0x1>
    2c88:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <g_startclock_interval>
		}
		break;
    2c8c:	08 95       	ret

		case SPRINT_S1:
		case SPRINT_F5:
		case SPRINT_DEMO:
		{
			g_on_air_interval = 12;
    2c8e:	8c e0       	ldi	r24, 0x0C	; 12
    2c90:	90 e0       	ldi	r25, 0x00	; 0
    2c92:	90 93 98 04 	sts	0x0498, r25	; 0x800498 <g_on_air_interval+0x1>
    2c96:	80 93 97 04 	sts	0x0497, r24	; 0x800497 <g_on_air_interval>
			g_number_of_foxes = 5;
    2c9a:	85 e0       	ldi	r24, 0x05	; 5
    2c9c:	90 e0       	ldi	r25, 0x00	; 0
    2c9e:	90 93 9c 04 	sts	0x049C, r25	; 0x80049c <g_number_of_foxes+0x1>
    2ca2:	80 93 9b 04 	sts	0x049B, r24	; 0x80049b <g_number_of_foxes>
			g_pattern_codespeed = ((g_fox == SPRINT_DEMO) || (g_fox <= SPRINT_S5)) ? 10 : 15;
    2ca6:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    2caa:	83 31       	cpi	r24, 0x13	; 19
    2cac:	31 f0       	breq	.+12     	; 0x2cba <_Z11setupForFoxv+0x206>
    2cae:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    2cb2:	8e 30       	cpi	r24, 0x0E	; 14
    2cb4:	20 f0       	brcs	.+8      	; 0x2cbe <_Z11setupForFoxv+0x20a>
    2cb6:	8f e0       	ldi	r24, 0x0F	; 15
    2cb8:	03 c0       	rjmp	.+6      	; 0x2cc0 <_Z11setupForFoxv+0x20c>
    2cba:	8a e0       	ldi	r24, 0x0A	; 10
    2cbc:	01 c0       	rjmp	.+2      	; 0x2cc0 <_Z11setupForFoxv+0x20c>
    2cbe:	8a e0       	ldi	r24, 0x0A	; 10
    2cc0:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_ZL19g_pattern_codespeed>
			g_fox_id_offset = g_fox <= SPRINT_S5 ? SPRINT_S1 - 1 : SPRINT_F1 - 1;
    2cc4:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    2cc8:	8e 30       	cpi	r24, 0x0E	; 14
    2cca:	18 f0       	brcs	.+6      	; 0x2cd2 <_Z11setupForFoxv+0x21e>
    2ccc:	8d e0       	ldi	r24, 0x0D	; 13
    2cce:	90 e0       	ldi	r25, 0x00	; 0
    2cd0:	02 c0       	rjmp	.+4      	; 0x2cd6 <_Z11setupForFoxv+0x222>
    2cd2:	88 e0       	ldi	r24, 0x08	; 8
    2cd4:	90 e0       	ldi	r25, 0x00	; 0
    2cd6:	90 93 9f 04 	sts	0x049F, r25	; 0x80049f <g_fox_id_offset+0x1>
    2cda:	80 93 9e 04 	sts	0x049E, r24	; 0x80049e <g_fox_id_offset>
			g_id_interval = 600;
    2cde:	88 e5       	ldi	r24, 0x58	; 88
    2ce0:	92 e0       	ldi	r25, 0x02	; 2
    2ce2:	90 93 a1 04 	sts	0x04A1, r25	; 0x8004a1 <g_id_interval+0x1>
    2ce6:	80 93 a0 04 	sts	0x04A0, r24	; 0x8004a0 <g_id_interval>
			g_startclock_interval = 120;
    2cea:	88 e7       	ldi	r24, 0x78	; 120
    2cec:	90 e0       	ldi	r25, 0x00	; 0
    2cee:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <g_startclock_interval+0x1>
    2cf2:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <g_startclock_interval>
		}
		break;
    2cf6:	08 95       	ret

/* case BEACON: */
/* case SPECTATOR: */
		default:
		{
			g_on_air_interval = 600;
    2cf8:	88 e5       	ldi	r24, 0x58	; 88
    2cfa:	92 e0       	ldi	r25, 0x02	; 2
    2cfc:	90 93 98 04 	sts	0x0498, r25	; 0x800498 <g_on_air_interval+0x1>
    2d00:	80 93 97 04 	sts	0x0497, r24	; 0x800497 <g_on_air_interval>
			g_number_of_foxes = 1;
    2d04:	21 e0       	ldi	r18, 0x01	; 1
    2d06:	30 e0       	ldi	r19, 0x00	; 0
    2d08:	30 93 9c 04 	sts	0x049C, r19	; 0x80049c <g_number_of_foxes+0x1>
    2d0c:	20 93 9b 04 	sts	0x049B, r18	; 0x80049b <g_number_of_foxes>
			g_pattern_codespeed = 8;
    2d10:	28 e0       	ldi	r18, 0x08	; 8
    2d12:	20 93 0f 01 	sts	0x010F, r18	; 0x80010f <_ZL19g_pattern_codespeed>
			g_id_interval = 600;
    2d16:	90 93 a1 04 	sts	0x04A1, r25	; 0x8004a1 <g_id_interval+0x1>
    2d1a:	80 93 a0 04 	sts	0x04A0, r24	; 0x8004a0 <g_id_interval>
			g_startclock_interval = (g_fox == SPECTATOR) ? 120 : 300;
    2d1e:	80 91 90 04 	lds	r24, 0x0490	; 0x800490 <g_fox>
    2d22:	88 30       	cpi	r24, 0x08	; 8
    2d24:	19 f0       	breq	.+6      	; 0x2d2c <_Z11setupForFoxv+0x278>
    2d26:	8c e2       	ldi	r24, 0x2C	; 44
    2d28:	91 e0       	ldi	r25, 0x01	; 1
    2d2a:	02 c0       	rjmp	.+4      	; 0x2d30 <_Z11setupForFoxv+0x27c>
    2d2c:	88 e7       	ldi	r24, 0x78	; 120
    2d2e:	90 e0       	ldi	r25, 0x00	; 0
    2d30:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <g_startclock_interval+0x1>
    2d34:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <g_startclock_interval>
    2d38:	08 95       	ret

00002d3a <_Z12permCallsignPc>:
		break;
	}
}

void permCallsign(char* call)
{
    2d3a:	0f 93       	push	r16
    2d3c:	1f 93       	push	r17
    2d3e:	cf 93       	push	r28
	uint8_t i;

	strncpy(g_messages_text[STATION_ID],call,MAX_PATTERN_TEXT_LENGTH);
    2d40:	44 e1       	ldi	r20, 0x14	; 20
    2d42:	50 e0       	ldi	r21, 0x00	; 0
    2d44:	bc 01       	movw	r22, r24
    2d46:	8d eb       	ldi	r24, 0xBD	; 189
    2d48:	94 e0       	ldi	r25, 0x04	; 4
    2d4a:	0e 94 fc 1d 	call	0x3bf8	; 0x3bf8 <strncpy>

	for(i = 0; i < strlen(g_messages_text[STATION_ID]); i++)
    2d4e:	c0 e0       	ldi	r28, 0x00	; 0
    2d50:	0d eb       	ldi	r16, 0xBD	; 189
    2d52:	14 e0       	ldi	r17, 0x04	; 4
    2d54:	f8 01       	movw	r30, r16
    2d56:	01 90       	ld	r0, Z+
    2d58:	00 20       	and	r0, r0
    2d5a:	e9 f7       	brne	.-6      	; 0x2d56 <_Z12permCallsignPc+0x1c>
    2d5c:	cf 01       	movw	r24, r30
    2d5e:	8e 5b       	subi	r24, 0xBE	; 190
    2d60:	94 40       	sbci	r25, 0x04	; 4
    2d62:	2c 2f       	mov	r18, r28
    2d64:	30 e0       	ldi	r19, 0x00	; 0
    2d66:	28 17       	cp	r18, r24
    2d68:	39 07       	cpc	r19, r25
    2d6a:	58 f4       	brcc	.+22     	; 0x2d82 <_Z12permCallsignPc+0x48>
	{
		eeprom_update_byte((uint8_t*)&ee_stationID_text[i],(uint8_t)g_messages_text[STATION_ID][i]);
    2d6c:	c9 01       	movw	r24, r18
    2d6e:	fc 01       	movw	r30, r24
    2d70:	e8 55       	subi	r30, 0x58	; 88
    2d72:	fb 4f       	sbci	r31, 0xFB	; 251
    2d74:	65 89       	ldd	r22, Z+21	; 0x15
    2d76:	8f 5f       	subi	r24, 0xFF	; 255
    2d78:	9f 4f       	sbci	r25, 0xFF	; 255
    2d7a:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
{
	uint8_t i;

	strncpy(g_messages_text[STATION_ID],call,MAX_PATTERN_TEXT_LENGTH);

	for(i = 0; i < strlen(g_messages_text[STATION_ID]); i++)
    2d7e:	cf 5f       	subi	r28, 0xFF	; 255
    2d80:	e9 cf       	rjmp	.-46     	; 0x2d54 <_Z12permCallsignPc+0x1a>
	{
		eeprom_update_byte((uint8_t*)&ee_stationID_text[i],(uint8_t)g_messages_text[STATION_ID][i]);
	}

	eeprom_update_byte((uint8_t*)&ee_stationID_text[i],0);
    2d82:	8c 2f       	mov	r24, r28
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	60 e0       	ldi	r22, 0x00	; 0
    2d88:	8f 5f       	subi	r24, 0xFF	; 255
    2d8a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d8c:	0e 94 1b 23 	call	0x4636	; 0x4636 <eeprom_update_byte>
}
    2d90:	cf 91       	pop	r28
    2d92:	1f 91       	pop	r17
    2d94:	0f 91       	pop	r16
    2d96:	08 95       	ret

00002d98 <_GLOBAL__sub_I_g_seconds_since_sync>:
    2d98:	0f 93       	push	r16
    2d9a:	1f 93       	push	r17
							'V','W', 'X', 'Y', 'Z', '<', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
char g_lastKey = '\0';
unsigned long g_last = 0;
unsigned long g_tick_count = 0;

Goertzel g_goertzel(N, sampling_freq);
    2d9c:	00 e0       	ldi	r16, 0x00	; 0
    2d9e:	18 e7       	ldi	r17, 0x78	; 120
    2da0:	26 e9       	ldi	r18, 0x96	; 150
    2da2:	36 e4       	ldi	r19, 0x46	; 70
    2da4:	40 e0       	ldi	r20, 0x00	; 0
    2da6:	50 e0       	ldi	r21, 0x00	; 0
    2da8:	69 e4       	ldi	r22, 0x49	; 73
    2daa:	73 e4       	ldi	r23, 0x43	; 67
    2dac:	80 ee       	ldi	r24, 0xE0	; 224
    2dae:	94 e0       	ldi	r25, 0x04	; 4
    2db0:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <_ZN8GoertzelC1Eff>
	{
		eeprom_update_byte((uint8_t*)&ee_stationID_text[i],(uint8_t)g_messages_text[STATION_ID][i]);
	}

	eeprom_update_byte((uint8_t*)&ee_stationID_text[i],0);
}
    2db4:	1f 91       	pop	r17
    2db6:	0f 91       	pop	r16
    2db8:	08 95       	ret

00002dba <_GLOBAL__sub_D_g_seconds_since_sync>:
							'V','W', 'X', 'Y', 'Z', '<', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
char g_lastKey = '\0';
unsigned long g_last = 0;
unsigned long g_tick_count = 0;

Goertzel g_goertzel(N, sampling_freq);
    2dba:	80 ee       	ldi	r24, 0xE0	; 224
    2dbc:	94 e0       	ldi	r25, 0x04	; 4
    2dbe:	0e 94 1f 03 	call	0x63e	; 0x63e <_ZN8GoertzelD1Ev>
    2dc2:	08 95       	ret

00002dc4 <_Z12getMorseCharc>:
 */
MorseCharacter getMorseChar(char c)
{
	MorseCharacter morse;

	switch( c )
    2dc4:	90 e0       	ldi	r25, 0x00	; 0
    2dc6:	fc 01       	movw	r30, r24
    2dc8:	b0 97       	sbiw	r30, 0x20	; 32
    2dca:	ed 35       	cpi	r30, 0x5D	; 93
    2dcc:	f1 05       	cpc	r31, r1
    2dce:	08 f0       	brcs	.+2      	; 0x2dd2 <_Z12getMorseCharc+0xe>
    2dd0:	e4 c0       	rjmp	.+456    	; 0x2f9a <_Z12getMorseCharc+0x1d6>
    2dd2:	e5 58       	subi	r30, 0x85	; 133
    2dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd6:	0c 94 3e 1c 	jmp	0x387c	; 0x387c <__tablejump2__>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    2dda:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 4;
    2ddc:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2dde:	61 e0       	ldi	r22, 0x01	; 1
    2de0:	08 95       	ret

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    2de2:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 4;
    2de4:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    2de6:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    2de8:	08 95       	ret

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    2dea:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 3;
    2dec:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2dee:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    2df0:	08 95       	ret

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 1;
    2df2:	81 e0       	ldi	r24, 0x01	; 1
		break;

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 1;
    2df4:	71 e0       	ldi	r23, 0x01	; 1
		}
		break;

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2df6:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 1;
		}
		break;
    2df8:	08 95       	ret

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    2dfa:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 4;
    2dfc:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    2dfe:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    2e00:	08 95       	ret

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    2e02:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 3;
    2e04:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2e06:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    2e08:	08 95       	ret

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 7;
    2e0a:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 4;
    2e0c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2e0e:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 7;
		}
		break;
    2e10:	08 95       	ret

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 3;
    2e12:	83 e0       	ldi	r24, 0x03	; 3
		break;

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 2;
    2e14:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2e16:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 3;
		}
		break;
    2e18:	08 95       	ret

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    2e1a:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
			morse.lengthInSymbols = 4;
    2e1c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    2e1e:	6e e0       	ldi	r22, 0x0E	; 14
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    2e20:	08 95       	ret

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    2e22:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 3;
    2e24:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    2e26:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    2e28:	08 95       	ret

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    2e2a:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 4;
    2e2c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2e2e:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    2e30:	08 95       	ret

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 7;
    2e32:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 2;
    2e34:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2e36:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 7;
		}
		break;
    2e38:	08 95       	ret

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
    2e3a:	85 e0       	ldi	r24, 0x05	; 5
		break;

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 2;
    2e3c:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2e3e:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
		}
		break;
    2e40:	08 95       	ret

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 11;
    2e42:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 3;
    2e44:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2e46:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 11;
		}
		break;
    2e48:	08 95       	ret

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    2e4a:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 4;
    2e4c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    2e4e:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    2e50:	08 95       	ret

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    2e52:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
			morse.lengthInSymbols = 4;
    2e54:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    2e56:	6b e0       	ldi	r22, 0x0B	; 11
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    2e58:	08 95       	ret

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    2e5a:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 3;
    2e5c:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2e5e:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    2e60:	08 95       	ret

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 5;
    2e62:	85 e0       	ldi	r24, 0x05	; 5
		break;

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 3;
    2e64:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2e66:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 5;
		}
		break;
    2e68:	08 95       	ret

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 3;
    2e6a:	83 e0       	ldi	r24, 0x03	; 3
		break;

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 1;
    2e6c:	71 e0       	ldi	r23, 0x01	; 1
		}
		break;

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2e6e:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 3;
		}
		break;
    2e70:	08 95       	ret

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    2e72:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 3;
    2e74:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    2e76:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    2e78:	08 95       	ret

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    2e7a:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
			morse.lengthInSymbols = 4;
    2e7c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    2e7e:	68 e0       	ldi	r22, 0x08	; 8
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    2e80:	08 95       	ret

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    2e82:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 3;
    2e84:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    2e86:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    2e88:	08 95       	ret

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    2e8a:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 4;
    2e8c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    2e8e:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    2e90:	08 95       	ret

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    2e92:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 4;
    2e94:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    2e96:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    2e98:	08 95       	ret

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    2e9a:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 4;
    2e9c:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2e9e:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    2ea0:	08 95       	ret

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
    2ea2:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
			morse.lengthInSymbols = 5;
    2ea4:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    2ea6:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
		}
		break;
    2ea8:	08 95       	ret

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
    2eaa:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 5;
    2eac:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    2eae:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
		}
		break;
    2eb0:	08 95       	ret

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    2eb2:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
			morse.lengthInSymbols = 5;
    2eb4:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    2eb6:	6c e1       	ldi	r22, 0x1C	; 28
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    2eb8:	08 95       	ret

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2eba:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
			morse.lengthInSymbols = 5;
    2ebc:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    2ebe:	68 e1       	ldi	r22, 0x18	; 24
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    2ec0:	08 95       	ret

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    2ec2:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
			morse.lengthInSymbols = 5;
    2ec4:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    2ec6:	60 e1       	ldi	r22, 0x10	; 16
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    2ec8:	08 95       	ret

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 9;
    2eca:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 5;
    2ecc:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2ece:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 9;
		}
		break;
    2ed0:	08 95       	ret

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    2ed2:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 5;
    2ed4:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    2ed6:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    2ed8:	08 95       	ret

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2eda:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 5;
    2edc:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2ede:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    2ee0:	08 95       	ret

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    2ee2:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 5;
    2ee4:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2ee6:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    2ee8:	08 95       	ret

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
    2eea:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
			morse.lengthInSymbols = 5;
    2eec:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    2eee:	6f e0       	ldi	r22, 0x0F	; 15
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
		}
		break;
    2ef0:	08 95       	ret

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2ef2:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
			morse.lengthInSymbols = 6;
    2ef4:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    2ef6:	6a e2       	ldi	r22, 0x2A	; 42
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    2ef8:	08 95       	ret

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2efa:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
			morse.lengthInSymbols = 6;
    2efc:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    2efe:	63 e3       	ldi	r22, 0x33	; 51
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    2f00:	08 95       	ret

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    2f02:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
			morse.lengthInSymbols = 6;
    2f04:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    2f06:	6c e0       	ldi	r22, 0x0C	; 12
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    2f08:	08 95       	ret

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2f0a:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 6;
    2f0c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    2f0e:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    2f10:	08 95       	ret

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2f12:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
			morse.lengthInSymbols = 6;
    2f14:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    2f16:	65 e3       	ldi	r22, 0x35	; 53
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    2f18:	08 95       	ret

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2f1a:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 5;
    2f1c:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    2f1e:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    2f20:	08 95       	ret

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    2f22:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 5;
    2f24:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    2f26:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    2f28:	08 95       	ret

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2f2a:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
			morse.lengthInSymbols = 6;
    2f2c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    2f2e:	6d e2       	ldi	r22, 0x2D	; 45
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    2f30:	08 95       	ret

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    2f32:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 5;
    2f34:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2f36:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    2f38:	08 95       	ret

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2f3a:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 6;
    2f3c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2f3e:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    2f40:	08 95       	ret

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 12;
    2f42:	8c e0       	ldi	r24, 0x0C	; 12
		break;

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
			morse.lengthInSymbols = 6;
    2f44:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    2f46:	65 e1       	ldi	r22, 0x15	; 21
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 12;
		}
		break;
    2f48:	08 95       	ret

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2f4a:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
			morse.lengthInSymbols = 5;
    2f4c:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    2f4e:	61 e1       	ldi	r22, 0x11	; 17
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    2f50:	08 95       	ret

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2f52:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
			morse.lengthInSymbols = 5;
    2f54:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    2f56:	6a e0       	ldi	r22, 0x0A	; 10
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    2f58:	08 95       	ret

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    2f5a:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
			morse.lengthInSymbols = 6;
    2f5c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    2f5e:	61 e2       	ldi	r22, 0x21	; 33
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    2f60:	08 95       	ret

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2f62:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
			morse.lengthInSymbols = 6;
    2f64:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    2f66:	6c e2       	ldi	r22, 0x2C	; 44
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    2f68:	08 95       	ret

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    2f6a:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
			morse.lengthInSymbols = 6;
    2f6c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    2f6e:	62 e1       	ldi	r22, 0x12	; 18
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    2f70:	08 95       	ret

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
			morse.lengthInSymbols = 7;
			morse.lengthInElements = 17;
    2f72:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
			morse.lengthInSymbols = 7;
    2f74:	77 e0       	ldi	r23, 0x07	; 7
		}
		break;

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    2f76:	68 e4       	ldi	r22, 0x48	; 72
			morse.lengthInSymbols = 7;
			morse.lengthInElements = 17;
		}
		break;
    2f78:	08 95       	ret

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2f7a:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
			morse.lengthInSymbols = 6;
    2f7c:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    2f7e:	66 e1       	ldi	r22, 0x16	; 22
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    2f80:	08 95       	ret

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    2f82:	84 e0       	ldi	r24, 0x04	; 4
		}
		break;

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
    2f84:	77 e0       	ldi	r23, 0x07	; 7
			morse.lengthInElements = 17;
		}
		break;

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    2f86:	6f ef       	ldi	r22, 0xFF	; 255
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
		}
		break;
    2f88:	08 95       	ret

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    2f8a:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
    2f8c:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
		}
		break;

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    2f8e:	6e ef       	ldi	r22, 0xFE	; 254
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
		}
		break;
    2f90:	08 95       	ret

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
    2f92:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
			morse.lengthInSymbols = 5;
    2f94:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    2f96:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
		}
		break;
    2f98:	08 95       	ret

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
			morse.lengthInSymbols = 0;
			morse.lengthInElements = 0;
    2f9a:	80 e0       	ldi	r24, 0x00	; 0
		break;

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
			morse.lengthInSymbols = 0;
    2f9c:	70 e0       	ldi	r23, 0x00	; 0
		}
		break;

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    2f9e:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 0;
			morse.lengthInElements = 0;
		}
		break;
    2fa0:	08 95       	ret
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
    2fa2:	85 e0       	ldi	r24, 0x05	; 5
	switch( c )
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 2;
    2fa4:	72 e0       	ldi	r23, 0x02	; 2

	switch( c )
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2fa6:	62 e0       	ldi	r22, 0x02	; 2
		}
		break;
	}

	return( morse);
}
    2fa8:	08 95       	ret

00002faa <_Z9makeMorsePcPhS0_>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a BOOL indicating whether a CW carrier should be sent
 *  Pass in a pointer to a BOOL in the second and third arguments:
 */
BOOL makeMorse(char* s, BOOL* repeating, BOOL* finished)
{
    2faa:	cf 93       	push	r28
    2fac:	df 93       	push	r29
    2fae:	ea 01       	movw	r28, r20
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static BOOL completedString = FALSE;
	static BOOL carrierOn = FALSE;
	static BOOL holdKeyDown = FALSE;

	if(s)   /* load a new NULL-terminated string to send */
    2fb0:	00 97       	sbiw	r24, 0x00	; 0
    2fb2:	b1 f1       	breq	.+108    	; 0x3020 <_Z9makeMorsePcPhS0_+0x76>
	{
		holdKeyDown = FALSE;
    2fb4:	10 92 70 05 	sts	0x0570, r1	; 0x800570 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>

		if(repeating)
    2fb8:	61 15       	cp	r22, r1
    2fba:	71 05       	cpc	r23, r1
    2fbc:	21 f0       	breq	.+8      	; 0x2fc6 <_Z9makeMorsePcPhS0_+0x1c>
		{
			repeat = *repeating;
    2fbe:	db 01       	movw	r26, r22
    2fc0:	2c 91       	ld	r18, X
    2fc2:	20 93 1f 01 	sts	0x011F, r18	; 0x80011f <_ZZ9makeMorsePcPhS0_E6repeat>
		}

		if(*s)
    2fc6:	fc 01       	movw	r30, r24
    2fc8:	20 81       	ld	r18, Z
    2fca:	22 23       	and	r18, r18
    2fcc:	d9 f0       	breq	.+54     	; 0x3004 <_Z9makeMorsePcPhS0_+0x5a>
		{
			str = s;
    2fce:	90 93 6f 05 	sts	0x056F, r25	; 0x80056f <_ZZ9makeMorsePcPhS0_E3str+0x1>
    2fd2:	80 93 6e 05 	sts	0x056E, r24	; 0x80056e <_ZZ9makeMorsePcPhS0_E3str>
			c = ' ';
    2fd6:	80 e2       	ldi	r24, 0x20	; 32
    2fd8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <_ZZ9makeMorsePcPhS0_E1c>
			morseInProgress = getMorseChar(*str);
    2fdc:	82 2f       	mov	r24, r18
    2fde:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <_Z12getMorseCharc>
    2fe2:	60 93 6b 05 	sts	0x056B, r22	; 0x80056b <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    2fe6:	70 93 6c 05 	sts	0x056C, r23	; 0x80056c <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    2fea:	80 93 6d 05 	sts	0x056D, r24	; 0x80056d <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
			charIndex = 0;
    2fee:	10 92 6a 05 	sts	0x056A, r1	; 0x80056a <_ZZ9makeMorsePcPhS0_E9charIndex>
			symbolIndex = 0;
    2ff2:	10 92 69 05 	sts	0x0569, r1	; 0x800569 <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			elementIndex = 0;
    2ff6:	10 92 68 05 	sts	0x0568, r1	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
			addedSpace = 0;
    2ffa:	10 92 67 05 	sts	0x0567, r1	; 0x800567 <_ZZ9makeMorsePcPhS0_E10addedSpace>
			completedString = FALSE;
    2ffe:	10 92 66 05 	sts	0x0566, r1	; 0x800566 <_ZZ9makeMorsePcPhS0_E15completedString>
    3002:	0a c0       	rjmp	.+20     	; 0x3018 <_Z9makeMorsePcPhS0_+0x6e>
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    3004:	10 92 6f 05 	sts	0x056F, r1	; 0x80056f <_ZZ9makeMorsePcPhS0_E3str+0x1>
    3008:	10 92 6e 05 	sts	0x056E, r1	; 0x80056e <_ZZ9makeMorsePcPhS0_E3str>
			completedString = TRUE;
    300c:	81 e0       	ldi	r24, 0x01	; 1
    300e:	80 93 66 05 	sts	0x0566, r24	; 0x800566 <_ZZ9makeMorsePcPhS0_E15completedString>
			if(finished)
    3012:	20 97       	sbiw	r28, 0x00	; 0
    3014:	09 f0       	breq	.+2      	; 0x3018 <_Z9makeMorsePcPhS0_+0x6e>
			{
				*finished = TRUE;
    3016:	88 83       	st	Y, r24
			}
		}

		carrierOn = OFF;
    3018:	10 92 65 05 	sts	0x0565, r1	; 0x800565 <_ZZ9makeMorsePcPhS0_E9carrierOn>
		return( OFF);
    301c:	80 e0       	ldi	r24, 0x00	; 0
    301e:	c0 c0       	rjmp	.+384    	; 0x31a0 <_Z9makeMorsePcPhS0_+0x1f6>
	}
	else if(str)
    3020:	e0 91 6e 05 	lds	r30, 0x056E	; 0x80056e <_ZZ9makeMorsePcPhS0_E3str>
    3024:	f0 91 6f 05 	lds	r31, 0x056F	; 0x80056f <_ZZ9makeMorsePcPhS0_E3str+0x1>
    3028:	30 97       	sbiw	r30, 0x00	; 0
    302a:	09 f4       	brne	.+2      	; 0x302e <_Z9makeMorsePcPhS0_+0x84>
    302c:	aa c0       	rjmp	.+340    	; 0x3182 <_Z9makeMorsePcPhS0_+0x1d8>
	{
		if(repeating)
    302e:	61 15       	cp	r22, r1
    3030:	71 05       	cpc	r23, r1
    3032:	21 f0       	breq	.+8      	; 0x303c <_Z9makeMorsePcPhS0_+0x92>
		{
			*repeating = repeat;
    3034:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <_ZZ9makeMorsePcPhS0_E6repeat>
    3038:	db 01       	movw	r26, r22
    303a:	8c 93       	st	X, r24
		}

		if(completedString)
    303c:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <_ZZ9makeMorsePcPhS0_E15completedString>
    3040:	88 23       	and	r24, r24
    3042:	49 f0       	breq	.+18     	; 0x3056 <_Z9makeMorsePcPhS0_+0xac>
		{
			if(finished)
    3044:	20 97       	sbiw	r28, 0x00	; 0
    3046:	09 f4       	brne	.+2      	; 0x304a <_Z9makeMorsePcPhS0_+0xa0>
    3048:	a8 c0       	rjmp	.+336    	; 0x319a <_Z9makeMorsePcPhS0_+0x1f0>
			{
				*finished = TRUE;
    304a:	81 e0       	ldi	r24, 0x01	; 1
    304c:	88 83       	st	Y, r24
				holdKeyDown = FALSE;
    304e:	10 92 70 05 	sts	0x0570, r1	; 0x800570 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
			}
			return( OFF);
    3052:	80 e0       	ldi	r24, 0x00	; 0
    3054:	a5 c0       	rjmp	.+330    	; 0x31a0 <_Z9makeMorsePcPhS0_+0x1f6>
		}

		if(elementIndex)
    3056:	80 91 68 05 	lds	r24, 0x0568	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    305a:	88 23       	and	r24, r24
    305c:	21 f0       	breq	.+8      	; 0x3066 <_Z9makeMorsePcPhS0_+0xbc>
		{
			elementIndex--;
    305e:	81 50       	subi	r24, 0x01	; 1
    3060:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    3064:	7f c0       	rjmp	.+254    	; 0x3164 <_Z9makeMorsePcPhS0_+0x1ba>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    3066:	80 91 65 05 	lds	r24, 0x0565	; 0x800565 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    306a:	88 23       	and	r24, r24
    306c:	81 f0       	breq	.+32     	; 0x308e <_Z9makeMorsePcPhS0_+0xe4>
    306e:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    3072:	81 11       	cpse	r24, r1
    3074:	0c c0       	rjmp	.+24     	; 0x308e <_Z9makeMorsePcPhS0_+0xe4>
		{
			carrierOn = FALSE;
    3076:	10 92 65 05 	sts	0x0565, r1	; 0x800565 <_ZZ9makeMorsePcPhS0_E9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    307a:	80 91 67 05 	lds	r24, 0x0567	; 0x800567 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    307e:	88 23       	and	r24, r24
    3080:	09 f4       	brne	.+2      	; 0x3084 <_Z9makeMorsePcPhS0_+0xda>
    3082:	70 c0       	rjmp	.+224    	; 0x3164 <_Z9makeMorsePcPhS0_+0x1ba>
			{
				elementIndex = addedSpace;
    3084:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
				addedSpace = 0;
    3088:	10 92 67 05 	sts	0x0567, r1	; 0x800567 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    308c:	6b c0       	rjmp	.+214    	; 0x3164 <_Z9makeMorsePcPhS0_+0x1ba>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    308e:	90 91 6c 05 	lds	r25, 0x056C	; 0x80056c <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    3092:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    3096:	89 17       	cp	r24, r25
    3098:	90 f1       	brcs	.+100    	; 0x30fe <_Z9makeMorsePcPhS0_+0x154>
			{
				c = (*(str + ++charIndex));
    309a:	80 91 6a 05 	lds	r24, 0x056A	; 0x80056a <_ZZ9makeMorsePcPhS0_E9charIndex>
    309e:	8f 5f       	subi	r24, 0xFF	; 255
    30a0:	80 93 6a 05 	sts	0x056A, r24	; 0x80056a <_ZZ9makeMorsePcPhS0_E9charIndex>
    30a4:	df 01       	movw	r26, r30
    30a6:	a8 0f       	add	r26, r24
    30a8:	b1 1d       	adc	r27, r1
    30aa:	8c 91       	ld	r24, X
    30ac:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <_ZZ9makeMorsePcPhS0_E1c>

				if(!c)  /* wrap to beginning of text */
    30b0:	81 11       	cpse	r24, r1
    30b2:	19 c0       	rjmp	.+50     	; 0x30e6 <_Z9makeMorsePcPhS0_+0x13c>
				{
					if(repeat)
    30b4:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <_ZZ9makeMorsePcPhS0_E6repeat>
    30b8:	88 23       	and	r24, r24
    30ba:	31 f0       	breq	.+12     	; 0x30c8 <_Z9makeMorsePcPhS0_+0x11e>
					{
						c = *str;
    30bc:	80 81       	ld	r24, Z
    30be:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <_ZZ9makeMorsePcPhS0_E1c>
						charIndex = 0;
    30c2:	10 92 6a 05 	sts	0x056A, r1	; 0x80056a <_ZZ9makeMorsePcPhS0_E9charIndex>
    30c6:	0f c0       	rjmp	.+30     	; 0x30e6 <_Z9makeMorsePcPhS0_+0x13c>
					}
					else
					{
						str = NULL;
    30c8:	10 92 6f 05 	sts	0x056F, r1	; 0x80056f <_ZZ9makeMorsePcPhS0_E3str+0x1>
    30cc:	10 92 6e 05 	sts	0x056E, r1	; 0x80056e <_ZZ9makeMorsePcPhS0_E3str>
						carrierOn = OFF;
    30d0:	10 92 65 05 	sts	0x0565, r1	; 0x800565 <_ZZ9makeMorsePcPhS0_E9carrierOn>
						completedString = TRUE;
    30d4:	91 e0       	ldi	r25, 0x01	; 1
    30d6:	90 93 66 05 	sts	0x0566, r25	; 0x800566 <_ZZ9makeMorsePcPhS0_E15completedString>
						if(finished)
    30da:	20 97       	sbiw	r28, 0x00	; 0
    30dc:	09 f0       	breq	.+2      	; 0x30e0 <_Z9makeMorsePcPhS0_+0x136>
						{
							*finished = TRUE;
    30de:	98 83       	st	Y, r25
						}
						holdKeyDown = FALSE;
    30e0:	10 92 70 05 	sts	0x0570, r1	; 0x800570 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
						return( OFF );
    30e4:	5d c0       	rjmp	.+186    	; 0x31a0 <_Z9makeMorsePcPhS0_+0x1f6>
					}
				}

				morseInProgress = getMorseChar(c);
    30e6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <_ZZ9makeMorsePcPhS0_E1c>
    30ea:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <_Z12getMorseCharc>
    30ee:	60 93 6b 05 	sts	0x056B, r22	; 0x80056b <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    30f2:	70 93 6c 05 	sts	0x056C, r23	; 0x80056c <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    30f6:	80 93 6d 05 	sts	0x056D, r24	; 0x80056d <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x2>
				symbolIndex = 0;
    30fa:	10 92 69 05 	sts	0x0569, r1	; 0x800569 <_ZZ9makeMorsePcPhS0_E11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    30fe:	20 91 6b 05 	lds	r18, 0x056B	; 0x80056b <_ZZ9makeMorsePcPhS0_E15morseInProgress>
    3102:	2d 3f       	cpi	r18, 0xFD	; 253
    3104:	00 f5       	brcc	.+64     	; 0x3146 <_Z9makeMorsePcPhS0_+0x19c>
			{
				BOOL isDah = morseInProgress.pattern & (1 << symbolIndex++);
    3106:	40 91 69 05 	lds	r20, 0x0569	; 0x800569 <_ZZ9makeMorsePcPhS0_E11symbolIndex>
    310a:	31 e0       	ldi	r19, 0x01	; 1
    310c:	34 0f       	add	r19, r20
    310e:	30 93 69 05 	sts	0x0569, r19	; 0x800569 <_ZZ9makeMorsePcPhS0_E11symbolIndex>

				if(isDah)
    3112:	81 e0       	ldi	r24, 0x01	; 1
    3114:	90 e0       	ldi	r25, 0x00	; 0
    3116:	02 c0       	rjmp	.+4      	; 0x311c <_Z9makeMorsePcPhS0_+0x172>
    3118:	88 0f       	add	r24, r24
    311a:	99 1f       	adc	r25, r25
    311c:	4a 95       	dec	r20
    311e:	e2 f7       	brpl	.-8      	; 0x3118 <_Z9makeMorsePcPhS0_+0x16e>
    3120:	82 23       	and	r24, r18
    3122:	21 f0       	breq	.+8      	; 0x312c <_Z9makeMorsePcPhS0_+0x182>
				{
					elementIndex = 2;
    3124:	82 e0       	ldi	r24, 0x02	; 2
    3126:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    312a:	02 c0       	rjmp	.+4      	; 0x3130 <_Z9makeMorsePcPhS0_+0x186>
				}
				else
				{
					elementIndex = 0;
    312c:	10 92 68 05 	sts	0x0568, r1	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}

				carrierOn = TRUE;
    3130:	81 e0       	ldi	r24, 0x01	; 1
    3132:	80 93 65 05 	sts	0x0565, r24	; 0x800565 <_ZZ9makeMorsePcPhS0_E9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    3136:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
    313a:	38 17       	cp	r19, r24
    313c:	98 f0       	brcs	.+38     	; 0x3164 <_Z9makeMorsePcPhS0_+0x1ba>
				{
					addedSpace = 2;
    313e:	82 e0       	ldi	r24, 0x02	; 2
    3140:	80 93 67 05 	sts	0x0567, r24	; 0x800567 <_ZZ9makeMorsePcPhS0_E10addedSpace>
    3144:	0f c0       	rjmp	.+30     	; 0x3164 <_Z9makeMorsePcPhS0_+0x1ba>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    3146:	80 91 6c 05 	lds	r24, 0x056C	; 0x80056c <_ZZ9makeMorsePcPhS0_E15morseInProgress+0x1>
				symbolIndex = 255;  /* ensure the next character gets read */
    314a:	9f ef       	ldi	r25, 0xFF	; 255
    314c:	90 93 69 05 	sts	0x0569, r25	; 0x800569 <_ZZ9makeMorsePcPhS0_E11symbolIndex>
				carrierOn = FALSE;
    3150:	10 92 65 05 	sts	0x0565, r1	; 0x800565 <_ZZ9makeMorsePcPhS0_E9carrierOn>
				if(sym >= 4 )
    3154:	84 30       	cpi	r24, 0x04	; 4
    3156:	20 f0       	brcs	.+8      	; 0x3160 <_Z9makeMorsePcPhS0_+0x1b6>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    3158:	84 50       	subi	r24, 0x04	; 4
    315a:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
    315e:	02 c0       	rjmp	.+4      	; 0x3164 <_Z9makeMorsePcPhS0_+0x1ba>
				}
				else
				{
					elementIndex = 0;
    3160:	10 92 68 05 	sts	0x0568, r1	; 0x800568 <_ZZ9makeMorsePcPhS0_E12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    3164:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <_ZZ9makeMorsePcPhS0_E1c>
    3168:	8c 33       	cpi	r24, 0x3C	; 60
    316a:	31 f4       	brne	.+12     	; 0x3178 <_Z9makeMorsePcPhS0_+0x1ce>
		{
			holdKeyDown = TRUE;
    316c:	81 e0       	ldi	r24, 0x01	; 1
    316e:	80 93 70 05 	sts	0x0570, r24	; 0x800570 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
		{
			holdKeyDown = FALSE;
		}
	}

	if(finished)
    3172:	20 97       	sbiw	r28, 0x00	; 0
    3174:	41 f4       	brne	.+16     	; 0x3186 <_Z9makeMorsePcPhS0_+0x1dc>
    3176:	14 c0       	rjmp	.+40     	; 0x31a0 <_Z9makeMorsePcPhS0_+0x1f6>
		{
			holdKeyDown = TRUE;
		}
		else
		{
			holdKeyDown = FALSE;
    3178:	10 92 70 05 	sts	0x0570, r1	; 0x800570 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
		}
	}

	if(finished)
    317c:	20 97       	sbiw	r28, 0x00	; 0
    317e:	19 f4       	brne	.+6      	; 0x3186 <_Z9makeMorsePcPhS0_+0x1dc>
    3180:	09 c0       	rjmp	.+18     	; 0x3194 <_Z9makeMorsePcPhS0_+0x1ea>
    3182:	20 97       	sbiw	r28, 0x00	; 0
    3184:	19 f0       	breq	.+6      	; 0x318c <_Z9makeMorsePcPhS0_+0x1e2>
	{
		*finished = completedString;
    3186:	80 91 66 05 	lds	r24, 0x0566	; 0x800566 <_ZZ9makeMorsePcPhS0_E15completedString>
    318a:	88 83       	st	Y, r24
	}

	if(holdKeyDown)
    318c:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <_ZZ9makeMorsePcPhS0_E11holdKeyDown>
    3190:	81 11       	cpse	r24, r1
    3192:	05 c0       	rjmp	.+10     	; 0x319e <_Z9makeMorsePcPhS0_+0x1f4>
	{
		return(TRUE);
	}
	else
	{
		return( carrierOn);
    3194:	80 91 65 05 	lds	r24, 0x0565	; 0x800565 <_ZZ9makeMorsePcPhS0_E9carrierOn>
    3198:	03 c0       	rjmp	.+6      	; 0x31a0 <_Z9makeMorsePcPhS0_+0x1f6>
			if(finished)
			{
				*finished = TRUE;
				holdKeyDown = FALSE;
			}
			return( OFF);
    319a:	80 e0       	ldi	r24, 0x00	; 0
    319c:	01 c0       	rjmp	.+2      	; 0x31a0 <_Z9makeMorsePcPhS0_+0x1f6>
		*finished = completedString;
	}

	if(holdKeyDown)
	{
		return(TRUE);
    319e:	81 e0       	ldi	r24, 0x01	; 1
	}
	else
	{
		return( carrierOn);
	}
}
    31a0:	df 91       	pop	r29
    31a2:	cf 91       	pop	r28
    31a4:	08 95       	ret

000031a6 <_Z26timeRequiredToSendStrAtWPMPcj>:
/**
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
    31a6:	cf 92       	push	r12
    31a8:	df 92       	push	r13
    31aa:	ef 92       	push	r14
    31ac:	ff 92       	push	r15
    31ae:	0f 93       	push	r16
    31b0:	1f 93       	push	r17
    31b2:	cf 93       	push	r28
    31b4:	fc 01       	movw	r30, r24
    31b6:	6b 01       	movw	r12, r22
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
	{
		c = str[i];
    31b8:	80 81       	ld	r24, Z
		if(!c)
    31ba:	88 23       	and	r24, r24
    31bc:	c1 f0       	breq	.+48     	; 0x31ee <_Z26timeRequiredToSendStrAtWPMPcj+0x48>
    31be:	8f 01       	movw	r16, r30
    31c0:	0f 5f       	subi	r16, 0xFF	; 255
    31c2:	1f 4f       	sbci	r17, 0xFF	; 255
    31c4:	7f 01       	movw	r14, r30
    31c6:	94 e1       	ldi	r25, 0x14	; 20
    31c8:	e9 0e       	add	r14, r25
    31ca:	f1 1c       	adc	r15, r1
    31cc:	c0 e0       	ldi	r28, 0x00	; 0
    31ce:	05 c0       	rjmp	.+10     	; 0x31da <_Z26timeRequiredToSendStrAtWPMPcj+0x34>
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
	{
		c = str[i];
    31d0:	f8 01       	movw	r30, r16
    31d2:	81 91       	ld	r24, Z+
    31d4:	8f 01       	movw	r16, r30
		if(!c)
    31d6:	88 23       	and	r24, r24
    31d8:	59 f0       	breq	.+22     	; 0x31f0 <_Z26timeRequiredToSendStrAtWPMPcj+0x4a>
		{
			break;
		}
		m = getMorseChar(c);
    31da:	0e 94 e2 16 	call	0x2dc4	; 0x2dc4 <_Z12getMorseCharc>
		if(m.pattern < INTER_WORD_SPACE)
    31de:	6d 3f       	cpi	r22, 0xFD	; 253
    31e0:	08 f4       	brcc	.+2      	; 0x31e4 <_Z26timeRequiredToSendStrAtWPMPcj+0x3e>
		{
			elements += 3;
    31e2:	cd 5f       	subi	r28, 0xFD	; 253
		}
		elements += m.lengthInElements;
    31e4:	c8 0f       	add	r28, r24
{
	uint8_t elements = 0;
	MorseCharacter m;
	char c;

	for(int i = 0; i < 20; i++)
    31e6:	0e 15       	cp	r16, r14
    31e8:	1f 05       	cpc	r17, r15
    31ea:	91 f7       	brne	.-28     	; 0x31d0 <_Z26timeRequiredToSendStrAtWPMPcj+0x2a>
    31ec:	01 c0       	rjmp	.+2      	; 0x31f0 <_Z26timeRequiredToSendStrAtWPMPcj+0x4a>
 *  Returns the number of milliseconds required to send the string pointed to by the first argument at the WPM code speed
 *  passed in the second argument.
 */
uint16_t timeRequiredToSendStrAtWPM(char* str, uint16_t spd)
{
	uint8_t elements = 0;
    31ee:	c0 e0       	ldi	r28, 0x00	; 0
			elements += 3;
		}
		elements += m.lengthInElements;
	}

	return(elements * WPM_TO_MS_PER_DOT(spd));
    31f0:	80 eb       	ldi	r24, 0xB0	; 176
    31f2:	94 e0       	ldi	r25, 0x04	; 4
    31f4:	b6 01       	movw	r22, r12
    31f6:	0e 94 d5 1b 	call	0x37aa	; 0x37aa <__udivmodhi4>
}
    31fa:	c6 9f       	mul	r28, r22
    31fc:	c0 01       	movw	r24, r0
    31fe:	c7 9f       	mul	r28, r23
    3200:	90 0d       	add	r25, r0
    3202:	11 24       	eor	r1, r1
    3204:	cf 91       	pop	r28
    3206:	1f 91       	pop	r17
    3208:	0f 91       	pop	r16
    320a:	ff 90       	pop	r15
    320c:	ef 90       	pop	r14
    320e:	df 90       	pop	r13
    3210:	cf 90       	pop	r12
    3212:	08 95       	ret

00003214 <__subsf3>:
    3214:	50 58       	subi	r21, 0x80	; 128

00003216 <__addsf3>:
    3216:	bb 27       	eor	r27, r27
    3218:	aa 27       	eor	r26, r26
    321a:	0e 94 22 19 	call	0x3244	; 0x3244 <__addsf3x>
    321e:	0c 94 cc 1a 	jmp	0x3598	; 0x3598 <__fp_round>
    3222:	0e 94 93 1a 	call	0x3526	; 0x3526 <__fp_pscA>
    3226:	38 f0       	brcs	.+14     	; 0x3236 <__addsf3+0x20>
    3228:	0e 94 9a 1a 	call	0x3534	; 0x3534 <__fp_pscB>
    322c:	20 f0       	brcs	.+8      	; 0x3236 <__addsf3+0x20>
    322e:	39 f4       	brne	.+14     	; 0x323e <__addsf3+0x28>
    3230:	9f 3f       	cpi	r25, 0xFF	; 255
    3232:	19 f4       	brne	.+6      	; 0x323a <__addsf3+0x24>
    3234:	26 f4       	brtc	.+8      	; 0x323e <__addsf3+0x28>
    3236:	0c 94 90 1a 	jmp	0x3520	; 0x3520 <__fp_nan>
    323a:	0e f4       	brtc	.+2      	; 0x323e <__addsf3+0x28>
    323c:	e0 95       	com	r30
    323e:	e7 fb       	bst	r30, 7
    3240:	0c 94 8a 1a 	jmp	0x3514	; 0x3514 <__fp_inf>

00003244 <__addsf3x>:
    3244:	e9 2f       	mov	r30, r25
    3246:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <__fp_split3>
    324a:	58 f3       	brcs	.-42     	; 0x3222 <__addsf3+0xc>
    324c:	ba 17       	cp	r27, r26
    324e:	62 07       	cpc	r22, r18
    3250:	73 07       	cpc	r23, r19
    3252:	84 07       	cpc	r24, r20
    3254:	95 07       	cpc	r25, r21
    3256:	20 f0       	brcs	.+8      	; 0x3260 <__addsf3x+0x1c>
    3258:	79 f4       	brne	.+30     	; 0x3278 <__addsf3x+0x34>
    325a:	a6 f5       	brtc	.+104    	; 0x32c4 <__addsf3x+0x80>
    325c:	0c 94 13 1b 	jmp	0x3626	; 0x3626 <__fp_zero>
    3260:	0e f4       	brtc	.+2      	; 0x3264 <__addsf3x+0x20>
    3262:	e0 95       	com	r30
    3264:	0b 2e       	mov	r0, r27
    3266:	ba 2f       	mov	r27, r26
    3268:	a0 2d       	mov	r26, r0
    326a:	0b 01       	movw	r0, r22
    326c:	b9 01       	movw	r22, r18
    326e:	90 01       	movw	r18, r0
    3270:	0c 01       	movw	r0, r24
    3272:	ca 01       	movw	r24, r20
    3274:	a0 01       	movw	r20, r0
    3276:	11 24       	eor	r1, r1
    3278:	ff 27       	eor	r31, r31
    327a:	59 1b       	sub	r21, r25
    327c:	99 f0       	breq	.+38     	; 0x32a4 <__addsf3x+0x60>
    327e:	59 3f       	cpi	r21, 0xF9	; 249
    3280:	50 f4       	brcc	.+20     	; 0x3296 <__addsf3x+0x52>
    3282:	50 3e       	cpi	r21, 0xE0	; 224
    3284:	68 f1       	brcs	.+90     	; 0x32e0 <__addsf3x+0x9c>
    3286:	1a 16       	cp	r1, r26
    3288:	f0 40       	sbci	r31, 0x00	; 0
    328a:	a2 2f       	mov	r26, r18
    328c:	23 2f       	mov	r18, r19
    328e:	34 2f       	mov	r19, r20
    3290:	44 27       	eor	r20, r20
    3292:	58 5f       	subi	r21, 0xF8	; 248
    3294:	f3 cf       	rjmp	.-26     	; 0x327c <__addsf3x+0x38>
    3296:	46 95       	lsr	r20
    3298:	37 95       	ror	r19
    329a:	27 95       	ror	r18
    329c:	a7 95       	ror	r26
    329e:	f0 40       	sbci	r31, 0x00	; 0
    32a0:	53 95       	inc	r21
    32a2:	c9 f7       	brne	.-14     	; 0x3296 <__addsf3x+0x52>
    32a4:	7e f4       	brtc	.+30     	; 0x32c4 <__addsf3x+0x80>
    32a6:	1f 16       	cp	r1, r31
    32a8:	ba 0b       	sbc	r27, r26
    32aa:	62 0b       	sbc	r22, r18
    32ac:	73 0b       	sbc	r23, r19
    32ae:	84 0b       	sbc	r24, r20
    32b0:	ba f0       	brmi	.+46     	; 0x32e0 <__addsf3x+0x9c>
    32b2:	91 50       	subi	r25, 0x01	; 1
    32b4:	a1 f0       	breq	.+40     	; 0x32de <__addsf3x+0x9a>
    32b6:	ff 0f       	add	r31, r31
    32b8:	bb 1f       	adc	r27, r27
    32ba:	66 1f       	adc	r22, r22
    32bc:	77 1f       	adc	r23, r23
    32be:	88 1f       	adc	r24, r24
    32c0:	c2 f7       	brpl	.-16     	; 0x32b2 <__addsf3x+0x6e>
    32c2:	0e c0       	rjmp	.+28     	; 0x32e0 <__addsf3x+0x9c>
    32c4:	ba 0f       	add	r27, r26
    32c6:	62 1f       	adc	r22, r18
    32c8:	73 1f       	adc	r23, r19
    32ca:	84 1f       	adc	r24, r20
    32cc:	48 f4       	brcc	.+18     	; 0x32e0 <__addsf3x+0x9c>
    32ce:	87 95       	ror	r24
    32d0:	77 95       	ror	r23
    32d2:	67 95       	ror	r22
    32d4:	b7 95       	ror	r27
    32d6:	f7 95       	ror	r31
    32d8:	9e 3f       	cpi	r25, 0xFE	; 254
    32da:	08 f0       	brcs	.+2      	; 0x32de <__addsf3x+0x9a>
    32dc:	b0 cf       	rjmp	.-160    	; 0x323e <__addsf3+0x28>
    32de:	93 95       	inc	r25
    32e0:	88 0f       	add	r24, r24
    32e2:	08 f0       	brcs	.+2      	; 0x32e6 <__addsf3x+0xa2>
    32e4:	99 27       	eor	r25, r25
    32e6:	ee 0f       	add	r30, r30
    32e8:	97 95       	ror	r25
    32ea:	87 95       	ror	r24
    32ec:	08 95       	ret

000032ee <__cmpsf2>:
    32ee:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__fp_cmp>
    32f2:	08 f4       	brcc	.+2      	; 0x32f6 <__cmpsf2+0x8>
    32f4:	81 e0       	ldi	r24, 0x01	; 1
    32f6:	08 95       	ret

000032f8 <cos>:
    32f8:	0e 94 a3 1a 	call	0x3546	; 0x3546 <__fp_rempio2>
    32fc:	e3 95       	inc	r30
    32fe:	0c 94 dd 1a 	jmp	0x35ba	; 0x35ba <__fp_sinus>

00003302 <__divsf3>:
    3302:	0e 94 95 19 	call	0x332a	; 0x332a <__divsf3x>
    3306:	0c 94 cc 1a 	jmp	0x3598	; 0x3598 <__fp_round>
    330a:	0e 94 9a 1a 	call	0x3534	; 0x3534 <__fp_pscB>
    330e:	58 f0       	brcs	.+22     	; 0x3326 <__divsf3+0x24>
    3310:	0e 94 93 1a 	call	0x3526	; 0x3526 <__fp_pscA>
    3314:	40 f0       	brcs	.+16     	; 0x3326 <__divsf3+0x24>
    3316:	29 f4       	brne	.+10     	; 0x3322 <__divsf3+0x20>
    3318:	5f 3f       	cpi	r21, 0xFF	; 255
    331a:	29 f0       	breq	.+10     	; 0x3326 <__divsf3+0x24>
    331c:	0c 94 8a 1a 	jmp	0x3514	; 0x3514 <__fp_inf>
    3320:	51 11       	cpse	r21, r1
    3322:	0c 94 14 1b 	jmp	0x3628	; 0x3628 <__fp_szero>
    3326:	0c 94 90 1a 	jmp	0x3520	; 0x3520 <__fp_nan>

0000332a <__divsf3x>:
    332a:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <__fp_split3>
    332e:	68 f3       	brcs	.-38     	; 0x330a <__divsf3+0x8>

00003330 <__divsf3_pse>:
    3330:	99 23       	and	r25, r25
    3332:	b1 f3       	breq	.-20     	; 0x3320 <__divsf3+0x1e>
    3334:	55 23       	and	r21, r21
    3336:	91 f3       	breq	.-28     	; 0x331c <__divsf3+0x1a>
    3338:	95 1b       	sub	r25, r21
    333a:	55 0b       	sbc	r21, r21
    333c:	bb 27       	eor	r27, r27
    333e:	aa 27       	eor	r26, r26
    3340:	62 17       	cp	r22, r18
    3342:	73 07       	cpc	r23, r19
    3344:	84 07       	cpc	r24, r20
    3346:	38 f0       	brcs	.+14     	; 0x3356 <__divsf3_pse+0x26>
    3348:	9f 5f       	subi	r25, 0xFF	; 255
    334a:	5f 4f       	sbci	r21, 0xFF	; 255
    334c:	22 0f       	add	r18, r18
    334e:	33 1f       	adc	r19, r19
    3350:	44 1f       	adc	r20, r20
    3352:	aa 1f       	adc	r26, r26
    3354:	a9 f3       	breq	.-22     	; 0x3340 <__divsf3_pse+0x10>
    3356:	35 d0       	rcall	.+106    	; 0x33c2 <__divsf3_pse+0x92>
    3358:	0e 2e       	mov	r0, r30
    335a:	3a f0       	brmi	.+14     	; 0x336a <__divsf3_pse+0x3a>
    335c:	e0 e8       	ldi	r30, 0x80	; 128
    335e:	32 d0       	rcall	.+100    	; 0x33c4 <__divsf3_pse+0x94>
    3360:	91 50       	subi	r25, 0x01	; 1
    3362:	50 40       	sbci	r21, 0x00	; 0
    3364:	e6 95       	lsr	r30
    3366:	00 1c       	adc	r0, r0
    3368:	ca f7       	brpl	.-14     	; 0x335c <__divsf3_pse+0x2c>
    336a:	2b d0       	rcall	.+86     	; 0x33c2 <__divsf3_pse+0x92>
    336c:	fe 2f       	mov	r31, r30
    336e:	29 d0       	rcall	.+82     	; 0x33c2 <__divsf3_pse+0x92>
    3370:	66 0f       	add	r22, r22
    3372:	77 1f       	adc	r23, r23
    3374:	88 1f       	adc	r24, r24
    3376:	bb 1f       	adc	r27, r27
    3378:	26 17       	cp	r18, r22
    337a:	37 07       	cpc	r19, r23
    337c:	48 07       	cpc	r20, r24
    337e:	ab 07       	cpc	r26, r27
    3380:	b0 e8       	ldi	r27, 0x80	; 128
    3382:	09 f0       	breq	.+2      	; 0x3386 <__divsf3_pse+0x56>
    3384:	bb 0b       	sbc	r27, r27
    3386:	80 2d       	mov	r24, r0
    3388:	bf 01       	movw	r22, r30
    338a:	ff 27       	eor	r31, r31
    338c:	93 58       	subi	r25, 0x83	; 131
    338e:	5f 4f       	sbci	r21, 0xFF	; 255
    3390:	3a f0       	brmi	.+14     	; 0x33a0 <__divsf3_pse+0x70>
    3392:	9e 3f       	cpi	r25, 0xFE	; 254
    3394:	51 05       	cpc	r21, r1
    3396:	78 f0       	brcs	.+30     	; 0x33b6 <__divsf3_pse+0x86>
    3398:	0c 94 8a 1a 	jmp	0x3514	; 0x3514 <__fp_inf>
    339c:	0c 94 14 1b 	jmp	0x3628	; 0x3628 <__fp_szero>
    33a0:	5f 3f       	cpi	r21, 0xFF	; 255
    33a2:	e4 f3       	brlt	.-8      	; 0x339c <__divsf3_pse+0x6c>
    33a4:	98 3e       	cpi	r25, 0xE8	; 232
    33a6:	d4 f3       	brlt	.-12     	; 0x339c <__divsf3_pse+0x6c>
    33a8:	86 95       	lsr	r24
    33aa:	77 95       	ror	r23
    33ac:	67 95       	ror	r22
    33ae:	b7 95       	ror	r27
    33b0:	f7 95       	ror	r31
    33b2:	9f 5f       	subi	r25, 0xFF	; 255
    33b4:	c9 f7       	brne	.-14     	; 0x33a8 <__divsf3_pse+0x78>
    33b6:	88 0f       	add	r24, r24
    33b8:	91 1d       	adc	r25, r1
    33ba:	96 95       	lsr	r25
    33bc:	87 95       	ror	r24
    33be:	97 f9       	bld	r25, 7
    33c0:	08 95       	ret
    33c2:	e1 e0       	ldi	r30, 0x01	; 1
    33c4:	66 0f       	add	r22, r22
    33c6:	77 1f       	adc	r23, r23
    33c8:	88 1f       	adc	r24, r24
    33ca:	bb 1f       	adc	r27, r27
    33cc:	62 17       	cp	r22, r18
    33ce:	73 07       	cpc	r23, r19
    33d0:	84 07       	cpc	r24, r20
    33d2:	ba 07       	cpc	r27, r26
    33d4:	20 f0       	brcs	.+8      	; 0x33de <__divsf3_pse+0xae>
    33d6:	62 1b       	sub	r22, r18
    33d8:	73 0b       	sbc	r23, r19
    33da:	84 0b       	sbc	r24, r20
    33dc:	ba 0b       	sbc	r27, r26
    33de:	ee 1f       	adc	r30, r30
    33e0:	88 f7       	brcc	.-30     	; 0x33c4 <__divsf3_pse+0x94>
    33e2:	e0 95       	com	r30
    33e4:	08 95       	ret

000033e6 <__fixsfsi>:
    33e6:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <__fixunssfsi>
    33ea:	68 94       	set
    33ec:	b1 11       	cpse	r27, r1
    33ee:	0c 94 14 1b 	jmp	0x3628	; 0x3628 <__fp_szero>
    33f2:	08 95       	ret

000033f4 <__fixunssfsi>:
    33f4:	0e 94 f9 1a 	call	0x35f2	; 0x35f2 <__fp_splitA>
    33f8:	88 f0       	brcs	.+34     	; 0x341c <__fixunssfsi+0x28>
    33fa:	9f 57       	subi	r25, 0x7F	; 127
    33fc:	98 f0       	brcs	.+38     	; 0x3424 <__fixunssfsi+0x30>
    33fe:	b9 2f       	mov	r27, r25
    3400:	99 27       	eor	r25, r25
    3402:	b7 51       	subi	r27, 0x17	; 23
    3404:	b0 f0       	brcs	.+44     	; 0x3432 <__fixunssfsi+0x3e>
    3406:	e1 f0       	breq	.+56     	; 0x3440 <__fixunssfsi+0x4c>
    3408:	66 0f       	add	r22, r22
    340a:	77 1f       	adc	r23, r23
    340c:	88 1f       	adc	r24, r24
    340e:	99 1f       	adc	r25, r25
    3410:	1a f0       	brmi	.+6      	; 0x3418 <__fixunssfsi+0x24>
    3412:	ba 95       	dec	r27
    3414:	c9 f7       	brne	.-14     	; 0x3408 <__fixunssfsi+0x14>
    3416:	14 c0       	rjmp	.+40     	; 0x3440 <__fixunssfsi+0x4c>
    3418:	b1 30       	cpi	r27, 0x01	; 1
    341a:	91 f0       	breq	.+36     	; 0x3440 <__fixunssfsi+0x4c>
    341c:	0e 94 13 1b 	call	0x3626	; 0x3626 <__fp_zero>
    3420:	b1 e0       	ldi	r27, 0x01	; 1
    3422:	08 95       	ret
    3424:	0c 94 13 1b 	jmp	0x3626	; 0x3626 <__fp_zero>
    3428:	67 2f       	mov	r22, r23
    342a:	78 2f       	mov	r23, r24
    342c:	88 27       	eor	r24, r24
    342e:	b8 5f       	subi	r27, 0xF8	; 248
    3430:	39 f0       	breq	.+14     	; 0x3440 <__fixunssfsi+0x4c>
    3432:	b9 3f       	cpi	r27, 0xF9	; 249
    3434:	cc f3       	brlt	.-14     	; 0x3428 <__fixunssfsi+0x34>
    3436:	86 95       	lsr	r24
    3438:	77 95       	ror	r23
    343a:	67 95       	ror	r22
    343c:	b3 95       	inc	r27
    343e:	d9 f7       	brne	.-10     	; 0x3436 <__fixunssfsi+0x42>
    3440:	3e f4       	brtc	.+14     	; 0x3450 <__fixunssfsi+0x5c>
    3442:	90 95       	com	r25
    3444:	80 95       	com	r24
    3446:	70 95       	com	r23
    3448:	61 95       	neg	r22
    344a:	7f 4f       	sbci	r23, 0xFF	; 255
    344c:	8f 4f       	sbci	r24, 0xFF	; 255
    344e:	9f 4f       	sbci	r25, 0xFF	; 255
    3450:	08 95       	ret

00003452 <__floatunsisf>:
    3452:	e8 94       	clt
    3454:	09 c0       	rjmp	.+18     	; 0x3468 <__floatsisf+0x12>

00003456 <__floatsisf>:
    3456:	97 fb       	bst	r25, 7
    3458:	3e f4       	brtc	.+14     	; 0x3468 <__floatsisf+0x12>
    345a:	90 95       	com	r25
    345c:	80 95       	com	r24
    345e:	70 95       	com	r23
    3460:	61 95       	neg	r22
    3462:	7f 4f       	sbci	r23, 0xFF	; 255
    3464:	8f 4f       	sbci	r24, 0xFF	; 255
    3466:	9f 4f       	sbci	r25, 0xFF	; 255
    3468:	99 23       	and	r25, r25
    346a:	a9 f0       	breq	.+42     	; 0x3496 <__floatsisf+0x40>
    346c:	f9 2f       	mov	r31, r25
    346e:	96 e9       	ldi	r25, 0x96	; 150
    3470:	bb 27       	eor	r27, r27
    3472:	93 95       	inc	r25
    3474:	f6 95       	lsr	r31
    3476:	87 95       	ror	r24
    3478:	77 95       	ror	r23
    347a:	67 95       	ror	r22
    347c:	b7 95       	ror	r27
    347e:	f1 11       	cpse	r31, r1
    3480:	f8 cf       	rjmp	.-16     	; 0x3472 <__floatsisf+0x1c>
    3482:	fa f4       	brpl	.+62     	; 0x34c2 <__floatsisf+0x6c>
    3484:	bb 0f       	add	r27, r27
    3486:	11 f4       	brne	.+4      	; 0x348c <__floatsisf+0x36>
    3488:	60 ff       	sbrs	r22, 0
    348a:	1b c0       	rjmp	.+54     	; 0x34c2 <__floatsisf+0x6c>
    348c:	6f 5f       	subi	r22, 0xFF	; 255
    348e:	7f 4f       	sbci	r23, 0xFF	; 255
    3490:	8f 4f       	sbci	r24, 0xFF	; 255
    3492:	9f 4f       	sbci	r25, 0xFF	; 255
    3494:	16 c0       	rjmp	.+44     	; 0x34c2 <__floatsisf+0x6c>
    3496:	88 23       	and	r24, r24
    3498:	11 f0       	breq	.+4      	; 0x349e <__floatsisf+0x48>
    349a:	96 e9       	ldi	r25, 0x96	; 150
    349c:	11 c0       	rjmp	.+34     	; 0x34c0 <__floatsisf+0x6a>
    349e:	77 23       	and	r23, r23
    34a0:	21 f0       	breq	.+8      	; 0x34aa <__floatsisf+0x54>
    34a2:	9e e8       	ldi	r25, 0x8E	; 142
    34a4:	87 2f       	mov	r24, r23
    34a6:	76 2f       	mov	r23, r22
    34a8:	05 c0       	rjmp	.+10     	; 0x34b4 <__floatsisf+0x5e>
    34aa:	66 23       	and	r22, r22
    34ac:	71 f0       	breq	.+28     	; 0x34ca <__floatsisf+0x74>
    34ae:	96 e8       	ldi	r25, 0x86	; 134
    34b0:	86 2f       	mov	r24, r22
    34b2:	70 e0       	ldi	r23, 0x00	; 0
    34b4:	60 e0       	ldi	r22, 0x00	; 0
    34b6:	2a f0       	brmi	.+10     	; 0x34c2 <__floatsisf+0x6c>
    34b8:	9a 95       	dec	r25
    34ba:	66 0f       	add	r22, r22
    34bc:	77 1f       	adc	r23, r23
    34be:	88 1f       	adc	r24, r24
    34c0:	da f7       	brpl	.-10     	; 0x34b8 <__floatsisf+0x62>
    34c2:	88 0f       	add	r24, r24
    34c4:	96 95       	lsr	r25
    34c6:	87 95       	ror	r24
    34c8:	97 f9       	bld	r25, 7
    34ca:	08 95       	ret

000034cc <__fp_cmp>:
    34cc:	99 0f       	add	r25, r25
    34ce:	00 08       	sbc	r0, r0
    34d0:	55 0f       	add	r21, r21
    34d2:	aa 0b       	sbc	r26, r26
    34d4:	e0 e8       	ldi	r30, 0x80	; 128
    34d6:	fe ef       	ldi	r31, 0xFE	; 254
    34d8:	16 16       	cp	r1, r22
    34da:	17 06       	cpc	r1, r23
    34dc:	e8 07       	cpc	r30, r24
    34de:	f9 07       	cpc	r31, r25
    34e0:	c0 f0       	brcs	.+48     	; 0x3512 <__fp_cmp+0x46>
    34e2:	12 16       	cp	r1, r18
    34e4:	13 06       	cpc	r1, r19
    34e6:	e4 07       	cpc	r30, r20
    34e8:	f5 07       	cpc	r31, r21
    34ea:	98 f0       	brcs	.+38     	; 0x3512 <__fp_cmp+0x46>
    34ec:	62 1b       	sub	r22, r18
    34ee:	73 0b       	sbc	r23, r19
    34f0:	84 0b       	sbc	r24, r20
    34f2:	95 0b       	sbc	r25, r21
    34f4:	39 f4       	brne	.+14     	; 0x3504 <__fp_cmp+0x38>
    34f6:	0a 26       	eor	r0, r26
    34f8:	61 f0       	breq	.+24     	; 0x3512 <__fp_cmp+0x46>
    34fa:	23 2b       	or	r18, r19
    34fc:	24 2b       	or	r18, r20
    34fe:	25 2b       	or	r18, r21
    3500:	21 f4       	brne	.+8      	; 0x350a <__fp_cmp+0x3e>
    3502:	08 95       	ret
    3504:	0a 26       	eor	r0, r26
    3506:	09 f4       	brne	.+2      	; 0x350a <__fp_cmp+0x3e>
    3508:	a1 40       	sbci	r26, 0x01	; 1
    350a:	a6 95       	lsr	r26
    350c:	8f ef       	ldi	r24, 0xFF	; 255
    350e:	81 1d       	adc	r24, r1
    3510:	81 1d       	adc	r24, r1
    3512:	08 95       	ret

00003514 <__fp_inf>:
    3514:	97 f9       	bld	r25, 7
    3516:	9f 67       	ori	r25, 0x7F	; 127
    3518:	80 e8       	ldi	r24, 0x80	; 128
    351a:	70 e0       	ldi	r23, 0x00	; 0
    351c:	60 e0       	ldi	r22, 0x00	; 0
    351e:	08 95       	ret

00003520 <__fp_nan>:
    3520:	9f ef       	ldi	r25, 0xFF	; 255
    3522:	80 ec       	ldi	r24, 0xC0	; 192
    3524:	08 95       	ret

00003526 <__fp_pscA>:
    3526:	00 24       	eor	r0, r0
    3528:	0a 94       	dec	r0
    352a:	16 16       	cp	r1, r22
    352c:	17 06       	cpc	r1, r23
    352e:	18 06       	cpc	r1, r24
    3530:	09 06       	cpc	r0, r25
    3532:	08 95       	ret

00003534 <__fp_pscB>:
    3534:	00 24       	eor	r0, r0
    3536:	0a 94       	dec	r0
    3538:	12 16       	cp	r1, r18
    353a:	13 06       	cpc	r1, r19
    353c:	14 06       	cpc	r1, r20
    353e:	05 06       	cpc	r0, r21
    3540:	08 95       	ret
    3542:	0c 94 90 1a 	jmp	0x3520	; 0x3520 <__fp_nan>

00003546 <__fp_rempio2>:
    3546:	0e 94 f9 1a 	call	0x35f2	; 0x35f2 <__fp_splitA>
    354a:	d8 f3       	brcs	.-10     	; 0x3542 <__fp_pscB+0xe>
    354c:	e8 94       	clt
    354e:	e0 e0       	ldi	r30, 0x00	; 0
    3550:	bb 27       	eor	r27, r27
    3552:	9f 57       	subi	r25, 0x7F	; 127
    3554:	f0 f0       	brcs	.+60     	; 0x3592 <__fp_rempio2+0x4c>
    3556:	2a ed       	ldi	r18, 0xDA	; 218
    3558:	3f e0       	ldi	r19, 0x0F	; 15
    355a:	49 ec       	ldi	r20, 0xC9	; 201
    355c:	06 c0       	rjmp	.+12     	; 0x356a <__fp_rempio2+0x24>
    355e:	ee 0f       	add	r30, r30
    3560:	bb 0f       	add	r27, r27
    3562:	66 1f       	adc	r22, r22
    3564:	77 1f       	adc	r23, r23
    3566:	88 1f       	adc	r24, r24
    3568:	28 f0       	brcs	.+10     	; 0x3574 <__fp_rempio2+0x2e>
    356a:	b2 3a       	cpi	r27, 0xA2	; 162
    356c:	62 07       	cpc	r22, r18
    356e:	73 07       	cpc	r23, r19
    3570:	84 07       	cpc	r24, r20
    3572:	28 f0       	brcs	.+10     	; 0x357e <__fp_rempio2+0x38>
    3574:	b2 5a       	subi	r27, 0xA2	; 162
    3576:	62 0b       	sbc	r22, r18
    3578:	73 0b       	sbc	r23, r19
    357a:	84 0b       	sbc	r24, r20
    357c:	e3 95       	inc	r30
    357e:	9a 95       	dec	r25
    3580:	72 f7       	brpl	.-36     	; 0x355e <__fp_rempio2+0x18>
    3582:	80 38       	cpi	r24, 0x80	; 128
    3584:	30 f4       	brcc	.+12     	; 0x3592 <__fp_rempio2+0x4c>
    3586:	9a 95       	dec	r25
    3588:	bb 0f       	add	r27, r27
    358a:	66 1f       	adc	r22, r22
    358c:	77 1f       	adc	r23, r23
    358e:	88 1f       	adc	r24, r24
    3590:	d2 f7       	brpl	.-12     	; 0x3586 <__fp_rempio2+0x40>
    3592:	90 48       	sbci	r25, 0x80	; 128
    3594:	0c 94 8e 1b 	jmp	0x371c	; 0x371c <__fp_mpack_finite>

00003598 <__fp_round>:
    3598:	09 2e       	mov	r0, r25
    359a:	03 94       	inc	r0
    359c:	00 0c       	add	r0, r0
    359e:	11 f4       	brne	.+4      	; 0x35a4 <__fp_round+0xc>
    35a0:	88 23       	and	r24, r24
    35a2:	52 f0       	brmi	.+20     	; 0x35b8 <__fp_round+0x20>
    35a4:	bb 0f       	add	r27, r27
    35a6:	40 f4       	brcc	.+16     	; 0x35b8 <__fp_round+0x20>
    35a8:	bf 2b       	or	r27, r31
    35aa:	11 f4       	brne	.+4      	; 0x35b0 <__fp_round+0x18>
    35ac:	60 ff       	sbrs	r22, 0
    35ae:	04 c0       	rjmp	.+8      	; 0x35b8 <__fp_round+0x20>
    35b0:	6f 5f       	subi	r22, 0xFF	; 255
    35b2:	7f 4f       	sbci	r23, 0xFF	; 255
    35b4:	8f 4f       	sbci	r24, 0xFF	; 255
    35b6:	9f 4f       	sbci	r25, 0xFF	; 255
    35b8:	08 95       	ret

000035ba <__fp_sinus>:
    35ba:	ef 93       	push	r30
    35bc:	e0 ff       	sbrs	r30, 0
    35be:	07 c0       	rjmp	.+14     	; 0x35ce <__fp_sinus+0x14>
    35c0:	a2 ea       	ldi	r26, 0xA2	; 162
    35c2:	2a ed       	ldi	r18, 0xDA	; 218
    35c4:	3f e0       	ldi	r19, 0x0F	; 15
    35c6:	49 ec       	ldi	r20, 0xC9	; 201
    35c8:	5f eb       	ldi	r21, 0xBF	; 191
    35ca:	0e 94 22 19 	call	0x3244	; 0x3244 <__addsf3x>
    35ce:	0e 94 cc 1a 	call	0x3598	; 0x3598 <__fp_round>
    35d2:	0f 90       	pop	r0
    35d4:	03 94       	inc	r0
    35d6:	01 fc       	sbrc	r0, 1
    35d8:	90 58       	subi	r25, 0x80	; 128
    35da:	e0 eb       	ldi	r30, 0xB0	; 176
    35dc:	f1 e0       	ldi	r31, 0x01	; 1
    35de:	0c 94 9a 1b 	jmp	0x3734	; 0x3734 <__fp_powsodd>

000035e2 <__fp_split3>:
    35e2:	57 fd       	sbrc	r21, 7
    35e4:	90 58       	subi	r25, 0x80	; 128
    35e6:	44 0f       	add	r20, r20
    35e8:	55 1f       	adc	r21, r21
    35ea:	59 f0       	breq	.+22     	; 0x3602 <__fp_splitA+0x10>
    35ec:	5f 3f       	cpi	r21, 0xFF	; 255
    35ee:	71 f0       	breq	.+28     	; 0x360c <__fp_splitA+0x1a>
    35f0:	47 95       	ror	r20

000035f2 <__fp_splitA>:
    35f2:	88 0f       	add	r24, r24
    35f4:	97 fb       	bst	r25, 7
    35f6:	99 1f       	adc	r25, r25
    35f8:	61 f0       	breq	.+24     	; 0x3612 <__fp_splitA+0x20>
    35fa:	9f 3f       	cpi	r25, 0xFF	; 255
    35fc:	79 f0       	breq	.+30     	; 0x361c <__fp_splitA+0x2a>
    35fe:	87 95       	ror	r24
    3600:	08 95       	ret
    3602:	12 16       	cp	r1, r18
    3604:	13 06       	cpc	r1, r19
    3606:	14 06       	cpc	r1, r20
    3608:	55 1f       	adc	r21, r21
    360a:	f2 cf       	rjmp	.-28     	; 0x35f0 <__fp_split3+0xe>
    360c:	46 95       	lsr	r20
    360e:	f1 df       	rcall	.-30     	; 0x35f2 <__fp_splitA>
    3610:	08 c0       	rjmp	.+16     	; 0x3622 <__fp_splitA+0x30>
    3612:	16 16       	cp	r1, r22
    3614:	17 06       	cpc	r1, r23
    3616:	18 06       	cpc	r1, r24
    3618:	99 1f       	adc	r25, r25
    361a:	f1 cf       	rjmp	.-30     	; 0x35fe <__fp_splitA+0xc>
    361c:	86 95       	lsr	r24
    361e:	71 05       	cpc	r23, r1
    3620:	61 05       	cpc	r22, r1
    3622:	08 94       	sec
    3624:	08 95       	ret

00003626 <__fp_zero>:
    3626:	e8 94       	clt

00003628 <__fp_szero>:
    3628:	bb 27       	eor	r27, r27
    362a:	66 27       	eor	r22, r22
    362c:	77 27       	eor	r23, r23
    362e:	cb 01       	movw	r24, r22
    3630:	97 f9       	bld	r25, 7
    3632:	08 95       	ret

00003634 <__gesf2>:
    3634:	0e 94 66 1a 	call	0x34cc	; 0x34cc <__fp_cmp>
    3638:	08 f4       	brcc	.+2      	; 0x363c <__gesf2+0x8>
    363a:	8f ef       	ldi	r24, 0xFF	; 255
    363c:	08 95       	ret

0000363e <__mulsf3>:
    363e:	0e 94 32 1b 	call	0x3664	; 0x3664 <__mulsf3x>
    3642:	0c 94 cc 1a 	jmp	0x3598	; 0x3598 <__fp_round>
    3646:	0e 94 93 1a 	call	0x3526	; 0x3526 <__fp_pscA>
    364a:	38 f0       	brcs	.+14     	; 0x365a <__mulsf3+0x1c>
    364c:	0e 94 9a 1a 	call	0x3534	; 0x3534 <__fp_pscB>
    3650:	20 f0       	brcs	.+8      	; 0x365a <__mulsf3+0x1c>
    3652:	95 23       	and	r25, r21
    3654:	11 f0       	breq	.+4      	; 0x365a <__mulsf3+0x1c>
    3656:	0c 94 8a 1a 	jmp	0x3514	; 0x3514 <__fp_inf>
    365a:	0c 94 90 1a 	jmp	0x3520	; 0x3520 <__fp_nan>
    365e:	11 24       	eor	r1, r1
    3660:	0c 94 14 1b 	jmp	0x3628	; 0x3628 <__fp_szero>

00003664 <__mulsf3x>:
    3664:	0e 94 f1 1a 	call	0x35e2	; 0x35e2 <__fp_split3>
    3668:	70 f3       	brcs	.-36     	; 0x3646 <__mulsf3+0x8>

0000366a <__mulsf3_pse>:
    366a:	95 9f       	mul	r25, r21
    366c:	c1 f3       	breq	.-16     	; 0x365e <__mulsf3+0x20>
    366e:	95 0f       	add	r25, r21
    3670:	50 e0       	ldi	r21, 0x00	; 0
    3672:	55 1f       	adc	r21, r21
    3674:	62 9f       	mul	r22, r18
    3676:	f0 01       	movw	r30, r0
    3678:	72 9f       	mul	r23, r18
    367a:	bb 27       	eor	r27, r27
    367c:	f0 0d       	add	r31, r0
    367e:	b1 1d       	adc	r27, r1
    3680:	63 9f       	mul	r22, r19
    3682:	aa 27       	eor	r26, r26
    3684:	f0 0d       	add	r31, r0
    3686:	b1 1d       	adc	r27, r1
    3688:	aa 1f       	adc	r26, r26
    368a:	64 9f       	mul	r22, r20
    368c:	66 27       	eor	r22, r22
    368e:	b0 0d       	add	r27, r0
    3690:	a1 1d       	adc	r26, r1
    3692:	66 1f       	adc	r22, r22
    3694:	82 9f       	mul	r24, r18
    3696:	22 27       	eor	r18, r18
    3698:	b0 0d       	add	r27, r0
    369a:	a1 1d       	adc	r26, r1
    369c:	62 1f       	adc	r22, r18
    369e:	73 9f       	mul	r23, r19
    36a0:	b0 0d       	add	r27, r0
    36a2:	a1 1d       	adc	r26, r1
    36a4:	62 1f       	adc	r22, r18
    36a6:	83 9f       	mul	r24, r19
    36a8:	a0 0d       	add	r26, r0
    36aa:	61 1d       	adc	r22, r1
    36ac:	22 1f       	adc	r18, r18
    36ae:	74 9f       	mul	r23, r20
    36b0:	33 27       	eor	r19, r19
    36b2:	a0 0d       	add	r26, r0
    36b4:	61 1d       	adc	r22, r1
    36b6:	23 1f       	adc	r18, r19
    36b8:	84 9f       	mul	r24, r20
    36ba:	60 0d       	add	r22, r0
    36bc:	21 1d       	adc	r18, r1
    36be:	82 2f       	mov	r24, r18
    36c0:	76 2f       	mov	r23, r22
    36c2:	6a 2f       	mov	r22, r26
    36c4:	11 24       	eor	r1, r1
    36c6:	9f 57       	subi	r25, 0x7F	; 127
    36c8:	50 40       	sbci	r21, 0x00	; 0
    36ca:	9a f0       	brmi	.+38     	; 0x36f2 <__mulsf3_pse+0x88>
    36cc:	f1 f0       	breq	.+60     	; 0x370a <__mulsf3_pse+0xa0>
    36ce:	88 23       	and	r24, r24
    36d0:	4a f0       	brmi	.+18     	; 0x36e4 <__mulsf3_pse+0x7a>
    36d2:	ee 0f       	add	r30, r30
    36d4:	ff 1f       	adc	r31, r31
    36d6:	bb 1f       	adc	r27, r27
    36d8:	66 1f       	adc	r22, r22
    36da:	77 1f       	adc	r23, r23
    36dc:	88 1f       	adc	r24, r24
    36de:	91 50       	subi	r25, 0x01	; 1
    36e0:	50 40       	sbci	r21, 0x00	; 0
    36e2:	a9 f7       	brne	.-22     	; 0x36ce <__mulsf3_pse+0x64>
    36e4:	9e 3f       	cpi	r25, 0xFE	; 254
    36e6:	51 05       	cpc	r21, r1
    36e8:	80 f0       	brcs	.+32     	; 0x370a <__mulsf3_pse+0xa0>
    36ea:	0c 94 8a 1a 	jmp	0x3514	; 0x3514 <__fp_inf>
    36ee:	0c 94 14 1b 	jmp	0x3628	; 0x3628 <__fp_szero>
    36f2:	5f 3f       	cpi	r21, 0xFF	; 255
    36f4:	e4 f3       	brlt	.-8      	; 0x36ee <__mulsf3_pse+0x84>
    36f6:	98 3e       	cpi	r25, 0xE8	; 232
    36f8:	d4 f3       	brlt	.-12     	; 0x36ee <__mulsf3_pse+0x84>
    36fa:	86 95       	lsr	r24
    36fc:	77 95       	ror	r23
    36fe:	67 95       	ror	r22
    3700:	b7 95       	ror	r27
    3702:	f7 95       	ror	r31
    3704:	e7 95       	ror	r30
    3706:	9f 5f       	subi	r25, 0xFF	; 255
    3708:	c1 f7       	brne	.-16     	; 0x36fa <__mulsf3_pse+0x90>
    370a:	fe 2b       	or	r31, r30
    370c:	88 0f       	add	r24, r24
    370e:	91 1d       	adc	r25, r1
    3710:	96 95       	lsr	r25
    3712:	87 95       	ror	r24
    3714:	97 f9       	bld	r25, 7
    3716:	08 95       	ret

00003718 <__fp_mpack>:
    3718:	9f 3f       	cpi	r25, 0xFF	; 255
    371a:	31 f0       	breq	.+12     	; 0x3728 <__fp_mpack_finite+0xc>

0000371c <__fp_mpack_finite>:
    371c:	91 50       	subi	r25, 0x01	; 1
    371e:	20 f4       	brcc	.+8      	; 0x3728 <__fp_mpack_finite+0xc>
    3720:	87 95       	ror	r24
    3722:	77 95       	ror	r23
    3724:	67 95       	ror	r22
    3726:	b7 95       	ror	r27
    3728:	88 0f       	add	r24, r24
    372a:	91 1d       	adc	r25, r1
    372c:	96 95       	lsr	r25
    372e:	87 95       	ror	r24
    3730:	97 f9       	bld	r25, 7
    3732:	08 95       	ret

00003734 <__fp_powsodd>:
    3734:	9f 93       	push	r25
    3736:	8f 93       	push	r24
    3738:	7f 93       	push	r23
    373a:	6f 93       	push	r22
    373c:	ff 93       	push	r31
    373e:	ef 93       	push	r30
    3740:	9b 01       	movw	r18, r22
    3742:	ac 01       	movw	r20, r24
    3744:	0e 94 1f 1b 	call	0x363e	; 0x363e <__mulsf3>
    3748:	ef 91       	pop	r30
    374a:	ff 91       	pop	r31
    374c:	0e 94 ae 1b 	call	0x375c	; 0x375c <__fp_powser>
    3750:	2f 91       	pop	r18
    3752:	3f 91       	pop	r19
    3754:	4f 91       	pop	r20
    3756:	5f 91       	pop	r21
    3758:	0c 94 1f 1b 	jmp	0x363e	; 0x363e <__mulsf3>

0000375c <__fp_powser>:
    375c:	df 93       	push	r29
    375e:	cf 93       	push	r28
    3760:	1f 93       	push	r17
    3762:	0f 93       	push	r16
    3764:	ff 92       	push	r15
    3766:	ef 92       	push	r14
    3768:	df 92       	push	r13
    376a:	7b 01       	movw	r14, r22
    376c:	8c 01       	movw	r16, r24
    376e:	68 94       	set
    3770:	06 c0       	rjmp	.+12     	; 0x377e <__fp_powser+0x22>
    3772:	da 2e       	mov	r13, r26
    3774:	ef 01       	movw	r28, r30
    3776:	0e 94 32 1b 	call	0x3664	; 0x3664 <__mulsf3x>
    377a:	fe 01       	movw	r30, r28
    377c:	e8 94       	clt
    377e:	a5 91       	lpm	r26, Z+
    3780:	25 91       	lpm	r18, Z+
    3782:	35 91       	lpm	r19, Z+
    3784:	45 91       	lpm	r20, Z+
    3786:	55 91       	lpm	r21, Z+
    3788:	a6 f3       	brts	.-24     	; 0x3772 <__fp_powser+0x16>
    378a:	ef 01       	movw	r28, r30
    378c:	0e 94 22 19 	call	0x3244	; 0x3244 <__addsf3x>
    3790:	fe 01       	movw	r30, r28
    3792:	97 01       	movw	r18, r14
    3794:	a8 01       	movw	r20, r16
    3796:	da 94       	dec	r13
    3798:	69 f7       	brne	.-38     	; 0x3774 <__fp_powser+0x18>
    379a:	df 90       	pop	r13
    379c:	ef 90       	pop	r14
    379e:	ff 90       	pop	r15
    37a0:	0f 91       	pop	r16
    37a2:	1f 91       	pop	r17
    37a4:	cf 91       	pop	r28
    37a6:	df 91       	pop	r29
    37a8:	08 95       	ret

000037aa <__udivmodhi4>:
    37aa:	aa 1b       	sub	r26, r26
    37ac:	bb 1b       	sub	r27, r27
    37ae:	51 e1       	ldi	r21, 0x11	; 17
    37b0:	07 c0       	rjmp	.+14     	; 0x37c0 <__udivmodhi4_ep>

000037b2 <__udivmodhi4_loop>:
    37b2:	aa 1f       	adc	r26, r26
    37b4:	bb 1f       	adc	r27, r27
    37b6:	a6 17       	cp	r26, r22
    37b8:	b7 07       	cpc	r27, r23
    37ba:	10 f0       	brcs	.+4      	; 0x37c0 <__udivmodhi4_ep>
    37bc:	a6 1b       	sub	r26, r22
    37be:	b7 0b       	sbc	r27, r23

000037c0 <__udivmodhi4_ep>:
    37c0:	88 1f       	adc	r24, r24
    37c2:	99 1f       	adc	r25, r25
    37c4:	5a 95       	dec	r21
    37c6:	a9 f7       	brne	.-22     	; 0x37b2 <__udivmodhi4_loop>
    37c8:	80 95       	com	r24
    37ca:	90 95       	com	r25
    37cc:	bc 01       	movw	r22, r24
    37ce:	cd 01       	movw	r24, r26
    37d0:	08 95       	ret

000037d2 <__divmodhi4>:
    37d2:	97 fb       	bst	r25, 7
    37d4:	07 2e       	mov	r0, r23
    37d6:	16 f4       	brtc	.+4      	; 0x37dc <__divmodhi4+0xa>
    37d8:	00 94       	com	r0
    37da:	07 d0       	rcall	.+14     	; 0x37ea <__divmodhi4_neg1>
    37dc:	77 fd       	sbrc	r23, 7
    37de:	09 d0       	rcall	.+18     	; 0x37f2 <__divmodhi4_neg2>
    37e0:	0e 94 d5 1b 	call	0x37aa	; 0x37aa <__udivmodhi4>
    37e4:	07 fc       	sbrc	r0, 7
    37e6:	05 d0       	rcall	.+10     	; 0x37f2 <__divmodhi4_neg2>
    37e8:	3e f4       	brtc	.+14     	; 0x37f8 <__divmodhi4_exit>

000037ea <__divmodhi4_neg1>:
    37ea:	90 95       	com	r25
    37ec:	81 95       	neg	r24
    37ee:	9f 4f       	sbci	r25, 0xFF	; 255
    37f0:	08 95       	ret

000037f2 <__divmodhi4_neg2>:
    37f2:	70 95       	com	r23
    37f4:	61 95       	neg	r22
    37f6:	7f 4f       	sbci	r23, 0xFF	; 255

000037f8 <__divmodhi4_exit>:
    37f8:	08 95       	ret

000037fa <__udivmodsi4>:
    37fa:	a1 e2       	ldi	r26, 0x21	; 33
    37fc:	1a 2e       	mov	r1, r26
    37fe:	aa 1b       	sub	r26, r26
    3800:	bb 1b       	sub	r27, r27
    3802:	fd 01       	movw	r30, r26
    3804:	0d c0       	rjmp	.+26     	; 0x3820 <__udivmodsi4_ep>

00003806 <__udivmodsi4_loop>:
    3806:	aa 1f       	adc	r26, r26
    3808:	bb 1f       	adc	r27, r27
    380a:	ee 1f       	adc	r30, r30
    380c:	ff 1f       	adc	r31, r31
    380e:	a2 17       	cp	r26, r18
    3810:	b3 07       	cpc	r27, r19
    3812:	e4 07       	cpc	r30, r20
    3814:	f5 07       	cpc	r31, r21
    3816:	20 f0       	brcs	.+8      	; 0x3820 <__udivmodsi4_ep>
    3818:	a2 1b       	sub	r26, r18
    381a:	b3 0b       	sbc	r27, r19
    381c:	e4 0b       	sbc	r30, r20
    381e:	f5 0b       	sbc	r31, r21

00003820 <__udivmodsi4_ep>:
    3820:	66 1f       	adc	r22, r22
    3822:	77 1f       	adc	r23, r23
    3824:	88 1f       	adc	r24, r24
    3826:	99 1f       	adc	r25, r25
    3828:	1a 94       	dec	r1
    382a:	69 f7       	brne	.-38     	; 0x3806 <__udivmodsi4_loop>
    382c:	60 95       	com	r22
    382e:	70 95       	com	r23
    3830:	80 95       	com	r24
    3832:	90 95       	com	r25
    3834:	9b 01       	movw	r18, r22
    3836:	ac 01       	movw	r20, r24
    3838:	bd 01       	movw	r22, r26
    383a:	cf 01       	movw	r24, r30
    383c:	08 95       	ret

0000383e <__divmodsi4>:
    383e:	05 2e       	mov	r0, r21
    3840:	97 fb       	bst	r25, 7
    3842:	1e f4       	brtc	.+6      	; 0x384a <__divmodsi4+0xc>
    3844:	00 94       	com	r0
    3846:	0e 94 36 1c 	call	0x386c	; 0x386c <__negsi2>
    384a:	57 fd       	sbrc	r21, 7
    384c:	07 d0       	rcall	.+14     	; 0x385c <__divmodsi4_neg2>
    384e:	0e 94 fd 1b 	call	0x37fa	; 0x37fa <__udivmodsi4>
    3852:	07 fc       	sbrc	r0, 7
    3854:	03 d0       	rcall	.+6      	; 0x385c <__divmodsi4_neg2>
    3856:	4e f4       	brtc	.+18     	; 0x386a <__divmodsi4_exit>
    3858:	0c 94 36 1c 	jmp	0x386c	; 0x386c <__negsi2>

0000385c <__divmodsi4_neg2>:
    385c:	50 95       	com	r21
    385e:	40 95       	com	r20
    3860:	30 95       	com	r19
    3862:	21 95       	neg	r18
    3864:	3f 4f       	sbci	r19, 0xFF	; 255
    3866:	4f 4f       	sbci	r20, 0xFF	; 255
    3868:	5f 4f       	sbci	r21, 0xFF	; 255

0000386a <__divmodsi4_exit>:
    386a:	08 95       	ret

0000386c <__negsi2>:
    386c:	90 95       	com	r25
    386e:	80 95       	com	r24
    3870:	70 95       	com	r23
    3872:	61 95       	neg	r22
    3874:	7f 4f       	sbci	r23, 0xFF	; 255
    3876:	8f 4f       	sbci	r24, 0xFF	; 255
    3878:	9f 4f       	sbci	r25, 0xFF	; 255
    387a:	08 95       	ret

0000387c <__tablejump2__>:
    387c:	ee 0f       	add	r30, r30
    387e:	ff 1f       	adc	r31, r31
    3880:	05 90       	lpm	r0, Z+
    3882:	f4 91       	lpm	r31, Z
    3884:	e0 2d       	mov	r30, r0
    3886:	09 94       	ijmp

00003888 <__umulhisi3>:
    3888:	a2 9f       	mul	r26, r18
    388a:	b0 01       	movw	r22, r0
    388c:	b3 9f       	mul	r27, r19
    388e:	c0 01       	movw	r24, r0
    3890:	a3 9f       	mul	r26, r19
    3892:	70 0d       	add	r23, r0
    3894:	81 1d       	adc	r24, r1
    3896:	11 24       	eor	r1, r1
    3898:	91 1d       	adc	r25, r1
    389a:	b2 9f       	mul	r27, r18
    389c:	70 0d       	add	r23, r0
    389e:	81 1d       	adc	r24, r1
    38a0:	11 24       	eor	r1, r1
    38a2:	91 1d       	adc	r25, r1
    38a4:	08 95       	ret

000038a6 <dtostrf>:
    38a6:	ef 92       	push	r14
    38a8:	0f 93       	push	r16
    38aa:	1f 93       	push	r17
    38ac:	cf 93       	push	r28
    38ae:	df 93       	push	r29
    38b0:	e8 01       	movw	r28, r16
    38b2:	47 fd       	sbrc	r20, 7
    38b4:	02 c0       	rjmp	.+4      	; 0x38ba <dtostrf+0x14>
    38b6:	34 e0       	ldi	r19, 0x04	; 4
    38b8:	01 c0       	rjmp	.+2      	; 0x38bc <dtostrf+0x16>
    38ba:	34 e1       	ldi	r19, 0x14	; 20
    38bc:	04 2e       	mov	r0, r20
    38be:	00 0c       	add	r0, r0
    38c0:	55 0b       	sbc	r21, r21
    38c2:	57 ff       	sbrs	r21, 7
    38c4:	03 c0       	rjmp	.+6      	; 0x38cc <dtostrf+0x26>
    38c6:	51 95       	neg	r21
    38c8:	41 95       	neg	r20
    38ca:	51 09       	sbc	r21, r1
    38cc:	e3 2e       	mov	r14, r19
    38ce:	02 2f       	mov	r16, r18
    38d0:	24 2f       	mov	r18, r20
    38d2:	ae 01       	movw	r20, r28
    38d4:	0e 94 2b 20 	call	0x4056	; 0x4056 <dtoa_prf>
    38d8:	ce 01       	movw	r24, r28
    38da:	df 91       	pop	r29
    38dc:	cf 91       	pop	r28
    38de:	1f 91       	pop	r17
    38e0:	0f 91       	pop	r16
    38e2:	ef 90       	pop	r14
    38e4:	08 95       	ret

000038e6 <malloc>:
    38e6:	0f 93       	push	r16
    38e8:	1f 93       	push	r17
    38ea:	cf 93       	push	r28
    38ec:	df 93       	push	r29
    38ee:	82 30       	cpi	r24, 0x02	; 2
    38f0:	91 05       	cpc	r25, r1
    38f2:	10 f4       	brcc	.+4      	; 0x38f8 <malloc+0x12>
    38f4:	82 e0       	ldi	r24, 0x02	; 2
    38f6:	90 e0       	ldi	r25, 0x00	; 0
    38f8:	e0 91 73 05 	lds	r30, 0x0573	; 0x800573 <__flp>
    38fc:	f0 91 74 05 	lds	r31, 0x0574	; 0x800574 <__flp+0x1>
    3900:	20 e0       	ldi	r18, 0x00	; 0
    3902:	30 e0       	ldi	r19, 0x00	; 0
    3904:	a0 e0       	ldi	r26, 0x00	; 0
    3906:	b0 e0       	ldi	r27, 0x00	; 0
    3908:	30 97       	sbiw	r30, 0x00	; 0
    390a:	19 f1       	breq	.+70     	; 0x3952 <malloc+0x6c>
    390c:	40 81       	ld	r20, Z
    390e:	51 81       	ldd	r21, Z+1	; 0x01
    3910:	02 81       	ldd	r16, Z+2	; 0x02
    3912:	13 81       	ldd	r17, Z+3	; 0x03
    3914:	48 17       	cp	r20, r24
    3916:	59 07       	cpc	r21, r25
    3918:	c8 f0       	brcs	.+50     	; 0x394c <malloc+0x66>
    391a:	84 17       	cp	r24, r20
    391c:	95 07       	cpc	r25, r21
    391e:	69 f4       	brne	.+26     	; 0x393a <malloc+0x54>
    3920:	10 97       	sbiw	r26, 0x00	; 0
    3922:	31 f0       	breq	.+12     	; 0x3930 <malloc+0x4a>
    3924:	12 96       	adiw	r26, 0x02	; 2
    3926:	0c 93       	st	X, r16
    3928:	12 97       	sbiw	r26, 0x02	; 2
    392a:	13 96       	adiw	r26, 0x03	; 3
    392c:	1c 93       	st	X, r17
    392e:	27 c0       	rjmp	.+78     	; 0x397e <malloc+0x98>
    3930:	00 93 73 05 	sts	0x0573, r16	; 0x800573 <__flp>
    3934:	10 93 74 05 	sts	0x0574, r17	; 0x800574 <__flp+0x1>
    3938:	22 c0       	rjmp	.+68     	; 0x397e <malloc+0x98>
    393a:	21 15       	cp	r18, r1
    393c:	31 05       	cpc	r19, r1
    393e:	19 f0       	breq	.+6      	; 0x3946 <malloc+0x60>
    3940:	42 17       	cp	r20, r18
    3942:	53 07       	cpc	r21, r19
    3944:	18 f4       	brcc	.+6      	; 0x394c <malloc+0x66>
    3946:	9a 01       	movw	r18, r20
    3948:	bd 01       	movw	r22, r26
    394a:	ef 01       	movw	r28, r30
    394c:	df 01       	movw	r26, r30
    394e:	f8 01       	movw	r30, r16
    3950:	db cf       	rjmp	.-74     	; 0x3908 <malloc+0x22>
    3952:	21 15       	cp	r18, r1
    3954:	31 05       	cpc	r19, r1
    3956:	f9 f0       	breq	.+62     	; 0x3996 <malloc+0xb0>
    3958:	28 1b       	sub	r18, r24
    395a:	39 0b       	sbc	r19, r25
    395c:	24 30       	cpi	r18, 0x04	; 4
    395e:	31 05       	cpc	r19, r1
    3960:	80 f4       	brcc	.+32     	; 0x3982 <malloc+0x9c>
    3962:	8a 81       	ldd	r24, Y+2	; 0x02
    3964:	9b 81       	ldd	r25, Y+3	; 0x03
    3966:	61 15       	cp	r22, r1
    3968:	71 05       	cpc	r23, r1
    396a:	21 f0       	breq	.+8      	; 0x3974 <malloc+0x8e>
    396c:	fb 01       	movw	r30, r22
    396e:	93 83       	std	Z+3, r25	; 0x03
    3970:	82 83       	std	Z+2, r24	; 0x02
    3972:	04 c0       	rjmp	.+8      	; 0x397c <malloc+0x96>
    3974:	90 93 74 05 	sts	0x0574, r25	; 0x800574 <__flp+0x1>
    3978:	80 93 73 05 	sts	0x0573, r24	; 0x800573 <__flp>
    397c:	fe 01       	movw	r30, r28
    397e:	32 96       	adiw	r30, 0x02	; 2
    3980:	44 c0       	rjmp	.+136    	; 0x3a0a <malloc+0x124>
    3982:	fe 01       	movw	r30, r28
    3984:	e2 0f       	add	r30, r18
    3986:	f3 1f       	adc	r31, r19
    3988:	81 93       	st	Z+, r24
    398a:	91 93       	st	Z+, r25
    398c:	22 50       	subi	r18, 0x02	; 2
    398e:	31 09       	sbc	r19, r1
    3990:	39 83       	std	Y+1, r19	; 0x01
    3992:	28 83       	st	Y, r18
    3994:	3a c0       	rjmp	.+116    	; 0x3a0a <malloc+0x124>
    3996:	20 91 71 05 	lds	r18, 0x0571	; 0x800571 <__brkval>
    399a:	30 91 72 05 	lds	r19, 0x0572	; 0x800572 <__brkval+0x1>
    399e:	23 2b       	or	r18, r19
    39a0:	41 f4       	brne	.+16     	; 0x39b2 <malloc+0xcc>
    39a2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    39a6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    39aa:	30 93 72 05 	sts	0x0572, r19	; 0x800572 <__brkval+0x1>
    39ae:	20 93 71 05 	sts	0x0571, r18	; 0x800571 <__brkval>
    39b2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    39b6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    39ba:	21 15       	cp	r18, r1
    39bc:	31 05       	cpc	r19, r1
    39be:	41 f4       	brne	.+16     	; 0x39d0 <malloc+0xea>
    39c0:	2d b7       	in	r18, 0x3d	; 61
    39c2:	3e b7       	in	r19, 0x3e	; 62
    39c4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    39c8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    39cc:	24 1b       	sub	r18, r20
    39ce:	35 0b       	sbc	r19, r21
    39d0:	e0 91 71 05 	lds	r30, 0x0571	; 0x800571 <__brkval>
    39d4:	f0 91 72 05 	lds	r31, 0x0572	; 0x800572 <__brkval+0x1>
    39d8:	e2 17       	cp	r30, r18
    39da:	f3 07       	cpc	r31, r19
    39dc:	a0 f4       	brcc	.+40     	; 0x3a06 <malloc+0x120>
    39de:	2e 1b       	sub	r18, r30
    39e0:	3f 0b       	sbc	r19, r31
    39e2:	28 17       	cp	r18, r24
    39e4:	39 07       	cpc	r19, r25
    39e6:	78 f0       	brcs	.+30     	; 0x3a06 <malloc+0x120>
    39e8:	ac 01       	movw	r20, r24
    39ea:	4e 5f       	subi	r20, 0xFE	; 254
    39ec:	5f 4f       	sbci	r21, 0xFF	; 255
    39ee:	24 17       	cp	r18, r20
    39f0:	35 07       	cpc	r19, r21
    39f2:	48 f0       	brcs	.+18     	; 0x3a06 <malloc+0x120>
    39f4:	4e 0f       	add	r20, r30
    39f6:	5f 1f       	adc	r21, r31
    39f8:	50 93 72 05 	sts	0x0572, r21	; 0x800572 <__brkval+0x1>
    39fc:	40 93 71 05 	sts	0x0571, r20	; 0x800571 <__brkval>
    3a00:	81 93       	st	Z+, r24
    3a02:	91 93       	st	Z+, r25
    3a04:	02 c0       	rjmp	.+4      	; 0x3a0a <malloc+0x124>
    3a06:	e0 e0       	ldi	r30, 0x00	; 0
    3a08:	f0 e0       	ldi	r31, 0x00	; 0
    3a0a:	cf 01       	movw	r24, r30
    3a0c:	df 91       	pop	r29
    3a0e:	cf 91       	pop	r28
    3a10:	1f 91       	pop	r17
    3a12:	0f 91       	pop	r16
    3a14:	08 95       	ret

00003a16 <free>:
    3a16:	cf 93       	push	r28
    3a18:	df 93       	push	r29
    3a1a:	00 97       	sbiw	r24, 0x00	; 0
    3a1c:	09 f4       	brne	.+2      	; 0x3a20 <free+0xa>
    3a1e:	81 c0       	rjmp	.+258    	; 0x3b22 <free+0x10c>
    3a20:	fc 01       	movw	r30, r24
    3a22:	32 97       	sbiw	r30, 0x02	; 2
    3a24:	13 82       	std	Z+3, r1	; 0x03
    3a26:	12 82       	std	Z+2, r1	; 0x02
    3a28:	a0 91 73 05 	lds	r26, 0x0573	; 0x800573 <__flp>
    3a2c:	b0 91 74 05 	lds	r27, 0x0574	; 0x800574 <__flp+0x1>
    3a30:	10 97       	sbiw	r26, 0x00	; 0
    3a32:	81 f4       	brne	.+32     	; 0x3a54 <free+0x3e>
    3a34:	20 81       	ld	r18, Z
    3a36:	31 81       	ldd	r19, Z+1	; 0x01
    3a38:	82 0f       	add	r24, r18
    3a3a:	93 1f       	adc	r25, r19
    3a3c:	20 91 71 05 	lds	r18, 0x0571	; 0x800571 <__brkval>
    3a40:	30 91 72 05 	lds	r19, 0x0572	; 0x800572 <__brkval+0x1>
    3a44:	28 17       	cp	r18, r24
    3a46:	39 07       	cpc	r19, r25
    3a48:	51 f5       	brne	.+84     	; 0x3a9e <free+0x88>
    3a4a:	f0 93 72 05 	sts	0x0572, r31	; 0x800572 <__brkval+0x1>
    3a4e:	e0 93 71 05 	sts	0x0571, r30	; 0x800571 <__brkval>
    3a52:	67 c0       	rjmp	.+206    	; 0x3b22 <free+0x10c>
    3a54:	ed 01       	movw	r28, r26
    3a56:	20 e0       	ldi	r18, 0x00	; 0
    3a58:	30 e0       	ldi	r19, 0x00	; 0
    3a5a:	ce 17       	cp	r28, r30
    3a5c:	df 07       	cpc	r29, r31
    3a5e:	40 f4       	brcc	.+16     	; 0x3a70 <free+0x5a>
    3a60:	4a 81       	ldd	r20, Y+2	; 0x02
    3a62:	5b 81       	ldd	r21, Y+3	; 0x03
    3a64:	9e 01       	movw	r18, r28
    3a66:	41 15       	cp	r20, r1
    3a68:	51 05       	cpc	r21, r1
    3a6a:	f1 f0       	breq	.+60     	; 0x3aa8 <free+0x92>
    3a6c:	ea 01       	movw	r28, r20
    3a6e:	f5 cf       	rjmp	.-22     	; 0x3a5a <free+0x44>
    3a70:	d3 83       	std	Z+3, r29	; 0x03
    3a72:	c2 83       	std	Z+2, r28	; 0x02
    3a74:	40 81       	ld	r20, Z
    3a76:	51 81       	ldd	r21, Z+1	; 0x01
    3a78:	84 0f       	add	r24, r20
    3a7a:	95 1f       	adc	r25, r21
    3a7c:	c8 17       	cp	r28, r24
    3a7e:	d9 07       	cpc	r29, r25
    3a80:	59 f4       	brne	.+22     	; 0x3a98 <free+0x82>
    3a82:	88 81       	ld	r24, Y
    3a84:	99 81       	ldd	r25, Y+1	; 0x01
    3a86:	84 0f       	add	r24, r20
    3a88:	95 1f       	adc	r25, r21
    3a8a:	02 96       	adiw	r24, 0x02	; 2
    3a8c:	91 83       	std	Z+1, r25	; 0x01
    3a8e:	80 83       	st	Z, r24
    3a90:	8a 81       	ldd	r24, Y+2	; 0x02
    3a92:	9b 81       	ldd	r25, Y+3	; 0x03
    3a94:	93 83       	std	Z+3, r25	; 0x03
    3a96:	82 83       	std	Z+2, r24	; 0x02
    3a98:	21 15       	cp	r18, r1
    3a9a:	31 05       	cpc	r19, r1
    3a9c:	29 f4       	brne	.+10     	; 0x3aa8 <free+0x92>
    3a9e:	f0 93 74 05 	sts	0x0574, r31	; 0x800574 <__flp+0x1>
    3aa2:	e0 93 73 05 	sts	0x0573, r30	; 0x800573 <__flp>
    3aa6:	3d c0       	rjmp	.+122    	; 0x3b22 <free+0x10c>
    3aa8:	e9 01       	movw	r28, r18
    3aaa:	fb 83       	std	Y+3, r31	; 0x03
    3aac:	ea 83       	std	Y+2, r30	; 0x02
    3aae:	49 91       	ld	r20, Y+
    3ab0:	59 91       	ld	r21, Y+
    3ab2:	c4 0f       	add	r28, r20
    3ab4:	d5 1f       	adc	r29, r21
    3ab6:	ec 17       	cp	r30, r28
    3ab8:	fd 07       	cpc	r31, r29
    3aba:	61 f4       	brne	.+24     	; 0x3ad4 <free+0xbe>
    3abc:	80 81       	ld	r24, Z
    3abe:	91 81       	ldd	r25, Z+1	; 0x01
    3ac0:	84 0f       	add	r24, r20
    3ac2:	95 1f       	adc	r25, r21
    3ac4:	02 96       	adiw	r24, 0x02	; 2
    3ac6:	e9 01       	movw	r28, r18
    3ac8:	99 83       	std	Y+1, r25	; 0x01
    3aca:	88 83       	st	Y, r24
    3acc:	82 81       	ldd	r24, Z+2	; 0x02
    3ace:	93 81       	ldd	r25, Z+3	; 0x03
    3ad0:	9b 83       	std	Y+3, r25	; 0x03
    3ad2:	8a 83       	std	Y+2, r24	; 0x02
    3ad4:	e0 e0       	ldi	r30, 0x00	; 0
    3ad6:	f0 e0       	ldi	r31, 0x00	; 0
    3ad8:	12 96       	adiw	r26, 0x02	; 2
    3ada:	8d 91       	ld	r24, X+
    3adc:	9c 91       	ld	r25, X
    3ade:	13 97       	sbiw	r26, 0x03	; 3
    3ae0:	00 97       	sbiw	r24, 0x00	; 0
    3ae2:	19 f0       	breq	.+6      	; 0x3aea <free+0xd4>
    3ae4:	fd 01       	movw	r30, r26
    3ae6:	dc 01       	movw	r26, r24
    3ae8:	f7 cf       	rjmp	.-18     	; 0x3ad8 <free+0xc2>
    3aea:	8d 91       	ld	r24, X+
    3aec:	9c 91       	ld	r25, X
    3aee:	11 97       	sbiw	r26, 0x01	; 1
    3af0:	9d 01       	movw	r18, r26
    3af2:	2e 5f       	subi	r18, 0xFE	; 254
    3af4:	3f 4f       	sbci	r19, 0xFF	; 255
    3af6:	82 0f       	add	r24, r18
    3af8:	93 1f       	adc	r25, r19
    3afa:	20 91 71 05 	lds	r18, 0x0571	; 0x800571 <__brkval>
    3afe:	30 91 72 05 	lds	r19, 0x0572	; 0x800572 <__brkval+0x1>
    3b02:	28 17       	cp	r18, r24
    3b04:	39 07       	cpc	r19, r25
    3b06:	69 f4       	brne	.+26     	; 0x3b22 <free+0x10c>
    3b08:	30 97       	sbiw	r30, 0x00	; 0
    3b0a:	29 f4       	brne	.+10     	; 0x3b16 <free+0x100>
    3b0c:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <__flp+0x1>
    3b10:	10 92 73 05 	sts	0x0573, r1	; 0x800573 <__flp>
    3b14:	02 c0       	rjmp	.+4      	; 0x3b1a <free+0x104>
    3b16:	13 82       	std	Z+3, r1	; 0x03
    3b18:	12 82       	std	Z+2, r1	; 0x02
    3b1a:	b0 93 72 05 	sts	0x0572, r27	; 0x800572 <__brkval+0x1>
    3b1e:	a0 93 71 05 	sts	0x0571, r26	; 0x800571 <__brkval>
    3b22:	df 91       	pop	r29
    3b24:	cf 91       	pop	r28
    3b26:	08 95       	ret

00003b28 <atoi>:
    3b28:	fc 01       	movw	r30, r24
    3b2a:	88 27       	eor	r24, r24
    3b2c:	99 27       	eor	r25, r25
    3b2e:	e8 94       	clt
    3b30:	21 91       	ld	r18, Z+
    3b32:	20 32       	cpi	r18, 0x20	; 32
    3b34:	e9 f3       	breq	.-6      	; 0x3b30 <atoi+0x8>
    3b36:	29 30       	cpi	r18, 0x09	; 9
    3b38:	10 f0       	brcs	.+4      	; 0x3b3e <atoi+0x16>
    3b3a:	2e 30       	cpi	r18, 0x0E	; 14
    3b3c:	c8 f3       	brcs	.-14     	; 0x3b30 <atoi+0x8>
    3b3e:	2b 32       	cpi	r18, 0x2B	; 43
    3b40:	41 f0       	breq	.+16     	; 0x3b52 <atoi+0x2a>
    3b42:	2d 32       	cpi	r18, 0x2D	; 45
    3b44:	39 f4       	brne	.+14     	; 0x3b54 <atoi+0x2c>
    3b46:	68 94       	set
    3b48:	04 c0       	rjmp	.+8      	; 0x3b52 <atoi+0x2a>
    3b4a:	0e 94 20 1e 	call	0x3c40	; 0x3c40 <__mulhi_const_10>
    3b4e:	82 0f       	add	r24, r18
    3b50:	91 1d       	adc	r25, r1
    3b52:	21 91       	ld	r18, Z+
    3b54:	20 53       	subi	r18, 0x30	; 48
    3b56:	2a 30       	cpi	r18, 0x0A	; 10
    3b58:	c0 f3       	brcs	.-16     	; 0x3b4a <atoi+0x22>
    3b5a:	1e f4       	brtc	.+6      	; 0x3b62 <atoi+0x3a>
    3b5c:	90 95       	com	r25
    3b5e:	81 95       	neg	r24
    3b60:	9f 4f       	sbci	r25, 0xFF	; 255
    3b62:	08 95       	ret

00003b64 <atol>:
    3b64:	1f 93       	push	r17
    3b66:	fc 01       	movw	r30, r24
    3b68:	99 27       	eor	r25, r25
    3b6a:	88 27       	eor	r24, r24
    3b6c:	bc 01       	movw	r22, r24
    3b6e:	e8 94       	clt
    3b70:	11 91       	ld	r17, Z+
    3b72:	10 32       	cpi	r17, 0x20	; 32
    3b74:	e9 f3       	breq	.-6      	; 0x3b70 <atol+0xc>
    3b76:	19 30       	cpi	r17, 0x09	; 9
    3b78:	10 f0       	brcs	.+4      	; 0x3b7e <atol+0x1a>
    3b7a:	1e 30       	cpi	r17, 0x0E	; 14
    3b7c:	c8 f3       	brcs	.-14     	; 0x3b70 <atol+0xc>
    3b7e:	1b 32       	cpi	r17, 0x2B	; 43
    3b80:	51 f0       	breq	.+20     	; 0x3b96 <atol+0x32>
    3b82:	1d 32       	cpi	r17, 0x2D	; 45
    3b84:	49 f4       	brne	.+18     	; 0x3b98 <atol+0x34>
    3b86:	68 94       	set
    3b88:	06 c0       	rjmp	.+12     	; 0x3b96 <atol+0x32>
    3b8a:	0e 94 0b 1e 	call	0x3c16	; 0x3c16 <__mulsi_const_10>
    3b8e:	61 0f       	add	r22, r17
    3b90:	71 1d       	adc	r23, r1
    3b92:	81 1d       	adc	r24, r1
    3b94:	91 1d       	adc	r25, r1
    3b96:	11 91       	ld	r17, Z+
    3b98:	10 53       	subi	r17, 0x30	; 48
    3b9a:	1a 30       	cpi	r17, 0x0A	; 10
    3b9c:	b0 f3       	brcs	.-20     	; 0x3b8a <atol+0x26>
    3b9e:	3e f4       	brtc	.+14     	; 0x3bae <atol+0x4a>
    3ba0:	90 95       	com	r25
    3ba2:	80 95       	com	r24
    3ba4:	70 95       	com	r23
    3ba6:	61 95       	neg	r22
    3ba8:	7f 4f       	sbci	r23, 0xFF	; 255
    3baa:	8f 4f       	sbci	r24, 0xFF	; 255
    3bac:	9f 4f       	sbci	r25, 0xFF	; 255
    3bae:	1f 91       	pop	r17
    3bb0:	08 95       	ret

00003bb2 <toupper>:
    3bb2:	91 11       	cpse	r25, r1
    3bb4:	08 95       	ret
    3bb6:	81 56       	subi	r24, 0x61	; 97
    3bb8:	8a 51       	subi	r24, 0x1A	; 26
    3bba:	08 f4       	brcc	.+2      	; 0x3bbe <toupper+0xc>
    3bbc:	80 52       	subi	r24, 0x20	; 32
    3bbe:	85 58       	subi	r24, 0x85	; 133
    3bc0:	08 95       	ret

00003bc2 <strcat>:
    3bc2:	fb 01       	movw	r30, r22
    3bc4:	dc 01       	movw	r26, r24
    3bc6:	0d 90       	ld	r0, X+
    3bc8:	00 20       	and	r0, r0
    3bca:	e9 f7       	brne	.-6      	; 0x3bc6 <strcat+0x4>
    3bcc:	11 97       	sbiw	r26, 0x01	; 1
    3bce:	01 90       	ld	r0, Z+
    3bd0:	0d 92       	st	X+, r0
    3bd2:	00 20       	and	r0, r0
    3bd4:	e1 f7       	brne	.-8      	; 0x3bce <strcat+0xc>
    3bd6:	08 95       	ret

00003bd8 <strcpy>:
    3bd8:	fb 01       	movw	r30, r22
    3bda:	dc 01       	movw	r26, r24
    3bdc:	01 90       	ld	r0, Z+
    3bde:	0d 92       	st	X+, r0
    3be0:	00 20       	and	r0, r0
    3be2:	e1 f7       	brne	.-8      	; 0x3bdc <strcpy+0x4>
    3be4:	08 95       	ret

00003be6 <strlen>:
    3be6:	fc 01       	movw	r30, r24
    3be8:	01 90       	ld	r0, Z+
    3bea:	00 20       	and	r0, r0
    3bec:	e9 f7       	brne	.-6      	; 0x3be8 <strlen+0x2>
    3bee:	80 95       	com	r24
    3bf0:	90 95       	com	r25
    3bf2:	8e 0f       	add	r24, r30
    3bf4:	9f 1f       	adc	r25, r31
    3bf6:	08 95       	ret

00003bf8 <strncpy>:
    3bf8:	fb 01       	movw	r30, r22
    3bfa:	dc 01       	movw	r26, r24
    3bfc:	41 50       	subi	r20, 0x01	; 1
    3bfe:	50 40       	sbci	r21, 0x00	; 0
    3c00:	48 f0       	brcs	.+18     	; 0x3c14 <strncpy+0x1c>
    3c02:	01 90       	ld	r0, Z+
    3c04:	0d 92       	st	X+, r0
    3c06:	00 20       	and	r0, r0
    3c08:	c9 f7       	brne	.-14     	; 0x3bfc <strncpy+0x4>
    3c0a:	01 c0       	rjmp	.+2      	; 0x3c0e <strncpy+0x16>
    3c0c:	1d 92       	st	X+, r1
    3c0e:	41 50       	subi	r20, 0x01	; 1
    3c10:	50 40       	sbci	r21, 0x00	; 0
    3c12:	e0 f7       	brcc	.-8      	; 0x3c0c <strncpy+0x14>
    3c14:	08 95       	ret

00003c16 <__mulsi_const_10>:
    3c16:	59 2f       	mov	r21, r25
    3c18:	48 2f       	mov	r20, r24
    3c1a:	37 2f       	mov	r19, r23
    3c1c:	26 2f       	mov	r18, r22
    3c1e:	66 0f       	add	r22, r22
    3c20:	77 1f       	adc	r23, r23
    3c22:	88 1f       	adc	r24, r24
    3c24:	99 1f       	adc	r25, r25
    3c26:	66 0f       	add	r22, r22
    3c28:	77 1f       	adc	r23, r23
    3c2a:	88 1f       	adc	r24, r24
    3c2c:	99 1f       	adc	r25, r25
    3c2e:	62 0f       	add	r22, r18
    3c30:	73 1f       	adc	r23, r19
    3c32:	84 1f       	adc	r24, r20
    3c34:	95 1f       	adc	r25, r21
    3c36:	66 0f       	add	r22, r22
    3c38:	77 1f       	adc	r23, r23
    3c3a:	88 1f       	adc	r24, r24
    3c3c:	99 1f       	adc	r25, r25
    3c3e:	08 95       	ret

00003c40 <__mulhi_const_10>:
    3c40:	7a e0       	ldi	r23, 0x0A	; 10
    3c42:	97 9f       	mul	r25, r23
    3c44:	90 2d       	mov	r25, r0
    3c46:	87 9f       	mul	r24, r23
    3c48:	80 2d       	mov	r24, r0
    3c4a:	91 0d       	add	r25, r1
    3c4c:	11 24       	eor	r1, r1
    3c4e:	08 95       	ret

00003c50 <sprintf>:
    3c50:	ae e0       	ldi	r26, 0x0E	; 14
    3c52:	b0 e0       	ldi	r27, 0x00	; 0
    3c54:	ee e2       	ldi	r30, 0x2E	; 46
    3c56:	fe e1       	ldi	r31, 0x1E	; 30
    3c58:	0c 94 5f 23 	jmp	0x46be	; 0x46be <__prologue_saves__+0x1c>
    3c5c:	0d 89       	ldd	r16, Y+21	; 0x15
    3c5e:	1e 89       	ldd	r17, Y+22	; 0x16
    3c60:	86 e0       	ldi	r24, 0x06	; 6
    3c62:	8c 83       	std	Y+4, r24	; 0x04
    3c64:	1a 83       	std	Y+2, r17	; 0x02
    3c66:	09 83       	std	Y+1, r16	; 0x01
    3c68:	8f ef       	ldi	r24, 0xFF	; 255
    3c6a:	9f e7       	ldi	r25, 0x7F	; 127
    3c6c:	9e 83       	std	Y+6, r25	; 0x06
    3c6e:	8d 83       	std	Y+5, r24	; 0x05
    3c70:	ae 01       	movw	r20, r28
    3c72:	47 5e       	subi	r20, 0xE7	; 231
    3c74:	5f 4f       	sbci	r21, 0xFF	; 255
    3c76:	6f 89       	ldd	r22, Y+23	; 0x17
    3c78:	78 8d       	ldd	r23, Y+24	; 0x18
    3c7a:	ce 01       	movw	r24, r28
    3c7c:	01 96       	adiw	r24, 0x01	; 1
    3c7e:	0e 94 4a 1e 	call	0x3c94	; 0x3c94 <vfprintf>
    3c82:	ef 81       	ldd	r30, Y+7	; 0x07
    3c84:	f8 85       	ldd	r31, Y+8	; 0x08
    3c86:	e0 0f       	add	r30, r16
    3c88:	f1 1f       	adc	r31, r17
    3c8a:	10 82       	st	Z, r1
    3c8c:	2e 96       	adiw	r28, 0x0e	; 14
    3c8e:	e4 e0       	ldi	r30, 0x04	; 4
    3c90:	0c 94 7b 23 	jmp	0x46f6	; 0x46f6 <__epilogue_restores__+0x1c>

00003c94 <vfprintf>:
    3c94:	ab e0       	ldi	r26, 0x0B	; 11
    3c96:	b0 e0       	ldi	r27, 0x00	; 0
    3c98:	e0 e5       	ldi	r30, 0x50	; 80
    3c9a:	fe e1       	ldi	r31, 0x1E	; 30
    3c9c:	0c 94 51 23 	jmp	0x46a2	; 0x46a2 <__prologue_saves__>
    3ca0:	6c 01       	movw	r12, r24
    3ca2:	7b 01       	movw	r14, r22
    3ca4:	8a 01       	movw	r16, r20
    3ca6:	fc 01       	movw	r30, r24
    3ca8:	17 82       	std	Z+7, r1	; 0x07
    3caa:	16 82       	std	Z+6, r1	; 0x06
    3cac:	83 81       	ldd	r24, Z+3	; 0x03
    3cae:	81 ff       	sbrs	r24, 1
    3cb0:	cc c1       	rjmp	.+920    	; 0x404a <vfprintf+0x3b6>
    3cb2:	ce 01       	movw	r24, r28
    3cb4:	01 96       	adiw	r24, 0x01	; 1
    3cb6:	3c 01       	movw	r6, r24
    3cb8:	f6 01       	movw	r30, r12
    3cba:	93 81       	ldd	r25, Z+3	; 0x03
    3cbc:	f7 01       	movw	r30, r14
    3cbe:	93 fd       	sbrc	r25, 3
    3cc0:	85 91       	lpm	r24, Z+
    3cc2:	93 ff       	sbrs	r25, 3
    3cc4:	81 91       	ld	r24, Z+
    3cc6:	7f 01       	movw	r14, r30
    3cc8:	88 23       	and	r24, r24
    3cca:	09 f4       	brne	.+2      	; 0x3cce <vfprintf+0x3a>
    3ccc:	ba c1       	rjmp	.+884    	; 0x4042 <vfprintf+0x3ae>
    3cce:	85 32       	cpi	r24, 0x25	; 37
    3cd0:	39 f4       	brne	.+14     	; 0x3ce0 <vfprintf+0x4c>
    3cd2:	93 fd       	sbrc	r25, 3
    3cd4:	85 91       	lpm	r24, Z+
    3cd6:	93 ff       	sbrs	r25, 3
    3cd8:	81 91       	ld	r24, Z+
    3cda:	7f 01       	movw	r14, r30
    3cdc:	85 32       	cpi	r24, 0x25	; 37
    3cde:	29 f4       	brne	.+10     	; 0x3cea <vfprintf+0x56>
    3ce0:	b6 01       	movw	r22, r12
    3ce2:	90 e0       	ldi	r25, 0x00	; 0
    3ce4:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    3ce8:	e7 cf       	rjmp	.-50     	; 0x3cb8 <vfprintf+0x24>
    3cea:	91 2c       	mov	r9, r1
    3cec:	21 2c       	mov	r2, r1
    3cee:	31 2c       	mov	r3, r1
    3cf0:	ff e1       	ldi	r31, 0x1F	; 31
    3cf2:	f3 15       	cp	r31, r3
    3cf4:	d8 f0       	brcs	.+54     	; 0x3d2c <vfprintf+0x98>
    3cf6:	8b 32       	cpi	r24, 0x2B	; 43
    3cf8:	79 f0       	breq	.+30     	; 0x3d18 <vfprintf+0x84>
    3cfa:	38 f4       	brcc	.+14     	; 0x3d0a <vfprintf+0x76>
    3cfc:	80 32       	cpi	r24, 0x20	; 32
    3cfe:	79 f0       	breq	.+30     	; 0x3d1e <vfprintf+0x8a>
    3d00:	83 32       	cpi	r24, 0x23	; 35
    3d02:	a1 f4       	brne	.+40     	; 0x3d2c <vfprintf+0x98>
    3d04:	23 2d       	mov	r18, r3
    3d06:	20 61       	ori	r18, 0x10	; 16
    3d08:	1d c0       	rjmp	.+58     	; 0x3d44 <vfprintf+0xb0>
    3d0a:	8d 32       	cpi	r24, 0x2D	; 45
    3d0c:	61 f0       	breq	.+24     	; 0x3d26 <vfprintf+0x92>
    3d0e:	80 33       	cpi	r24, 0x30	; 48
    3d10:	69 f4       	brne	.+26     	; 0x3d2c <vfprintf+0x98>
    3d12:	23 2d       	mov	r18, r3
    3d14:	21 60       	ori	r18, 0x01	; 1
    3d16:	16 c0       	rjmp	.+44     	; 0x3d44 <vfprintf+0xb0>
    3d18:	83 2d       	mov	r24, r3
    3d1a:	82 60       	ori	r24, 0x02	; 2
    3d1c:	38 2e       	mov	r3, r24
    3d1e:	e3 2d       	mov	r30, r3
    3d20:	e4 60       	ori	r30, 0x04	; 4
    3d22:	3e 2e       	mov	r3, r30
    3d24:	2a c0       	rjmp	.+84     	; 0x3d7a <vfprintf+0xe6>
    3d26:	f3 2d       	mov	r31, r3
    3d28:	f8 60       	ori	r31, 0x08	; 8
    3d2a:	1d c0       	rjmp	.+58     	; 0x3d66 <vfprintf+0xd2>
    3d2c:	37 fc       	sbrc	r3, 7
    3d2e:	2d c0       	rjmp	.+90     	; 0x3d8a <vfprintf+0xf6>
    3d30:	20 ed       	ldi	r18, 0xD0	; 208
    3d32:	28 0f       	add	r18, r24
    3d34:	2a 30       	cpi	r18, 0x0A	; 10
    3d36:	40 f0       	brcs	.+16     	; 0x3d48 <vfprintf+0xb4>
    3d38:	8e 32       	cpi	r24, 0x2E	; 46
    3d3a:	b9 f4       	brne	.+46     	; 0x3d6a <vfprintf+0xd6>
    3d3c:	36 fc       	sbrc	r3, 6
    3d3e:	81 c1       	rjmp	.+770    	; 0x4042 <vfprintf+0x3ae>
    3d40:	23 2d       	mov	r18, r3
    3d42:	20 64       	ori	r18, 0x40	; 64
    3d44:	32 2e       	mov	r3, r18
    3d46:	19 c0       	rjmp	.+50     	; 0x3d7a <vfprintf+0xe6>
    3d48:	36 fe       	sbrs	r3, 6
    3d4a:	06 c0       	rjmp	.+12     	; 0x3d58 <vfprintf+0xc4>
    3d4c:	8a e0       	ldi	r24, 0x0A	; 10
    3d4e:	98 9e       	mul	r9, r24
    3d50:	20 0d       	add	r18, r0
    3d52:	11 24       	eor	r1, r1
    3d54:	92 2e       	mov	r9, r18
    3d56:	11 c0       	rjmp	.+34     	; 0x3d7a <vfprintf+0xe6>
    3d58:	ea e0       	ldi	r30, 0x0A	; 10
    3d5a:	2e 9e       	mul	r2, r30
    3d5c:	20 0d       	add	r18, r0
    3d5e:	11 24       	eor	r1, r1
    3d60:	22 2e       	mov	r2, r18
    3d62:	f3 2d       	mov	r31, r3
    3d64:	f0 62       	ori	r31, 0x20	; 32
    3d66:	3f 2e       	mov	r3, r31
    3d68:	08 c0       	rjmp	.+16     	; 0x3d7a <vfprintf+0xe6>
    3d6a:	8c 36       	cpi	r24, 0x6C	; 108
    3d6c:	21 f4       	brne	.+8      	; 0x3d76 <vfprintf+0xe2>
    3d6e:	83 2d       	mov	r24, r3
    3d70:	80 68       	ori	r24, 0x80	; 128
    3d72:	38 2e       	mov	r3, r24
    3d74:	02 c0       	rjmp	.+4      	; 0x3d7a <vfprintf+0xe6>
    3d76:	88 36       	cpi	r24, 0x68	; 104
    3d78:	41 f4       	brne	.+16     	; 0x3d8a <vfprintf+0xf6>
    3d7a:	f7 01       	movw	r30, r14
    3d7c:	93 fd       	sbrc	r25, 3
    3d7e:	85 91       	lpm	r24, Z+
    3d80:	93 ff       	sbrs	r25, 3
    3d82:	81 91       	ld	r24, Z+
    3d84:	7f 01       	movw	r14, r30
    3d86:	81 11       	cpse	r24, r1
    3d88:	b3 cf       	rjmp	.-154    	; 0x3cf0 <vfprintf+0x5c>
    3d8a:	98 2f       	mov	r25, r24
    3d8c:	9f 7d       	andi	r25, 0xDF	; 223
    3d8e:	95 54       	subi	r25, 0x45	; 69
    3d90:	93 30       	cpi	r25, 0x03	; 3
    3d92:	28 f4       	brcc	.+10     	; 0x3d9e <vfprintf+0x10a>
    3d94:	0c 5f       	subi	r16, 0xFC	; 252
    3d96:	1f 4f       	sbci	r17, 0xFF	; 255
    3d98:	9f e3       	ldi	r25, 0x3F	; 63
    3d9a:	99 83       	std	Y+1, r25	; 0x01
    3d9c:	0d c0       	rjmp	.+26     	; 0x3db8 <vfprintf+0x124>
    3d9e:	83 36       	cpi	r24, 0x63	; 99
    3da0:	31 f0       	breq	.+12     	; 0x3dae <vfprintf+0x11a>
    3da2:	83 37       	cpi	r24, 0x73	; 115
    3da4:	71 f0       	breq	.+28     	; 0x3dc2 <vfprintf+0x12e>
    3da6:	83 35       	cpi	r24, 0x53	; 83
    3da8:	09 f0       	breq	.+2      	; 0x3dac <vfprintf+0x118>
    3daa:	59 c0       	rjmp	.+178    	; 0x3e5e <vfprintf+0x1ca>
    3dac:	21 c0       	rjmp	.+66     	; 0x3df0 <vfprintf+0x15c>
    3dae:	f8 01       	movw	r30, r16
    3db0:	80 81       	ld	r24, Z
    3db2:	89 83       	std	Y+1, r24	; 0x01
    3db4:	0e 5f       	subi	r16, 0xFE	; 254
    3db6:	1f 4f       	sbci	r17, 0xFF	; 255
    3db8:	88 24       	eor	r8, r8
    3dba:	83 94       	inc	r8
    3dbc:	91 2c       	mov	r9, r1
    3dbe:	53 01       	movw	r10, r6
    3dc0:	13 c0       	rjmp	.+38     	; 0x3de8 <vfprintf+0x154>
    3dc2:	28 01       	movw	r4, r16
    3dc4:	f2 e0       	ldi	r31, 0x02	; 2
    3dc6:	4f 0e       	add	r4, r31
    3dc8:	51 1c       	adc	r5, r1
    3dca:	f8 01       	movw	r30, r16
    3dcc:	a0 80       	ld	r10, Z
    3dce:	b1 80       	ldd	r11, Z+1	; 0x01
    3dd0:	36 fe       	sbrs	r3, 6
    3dd2:	03 c0       	rjmp	.+6      	; 0x3dda <vfprintf+0x146>
    3dd4:	69 2d       	mov	r22, r9
    3dd6:	70 e0       	ldi	r23, 0x00	; 0
    3dd8:	02 c0       	rjmp	.+4      	; 0x3dde <vfprintf+0x14a>
    3dda:	6f ef       	ldi	r22, 0xFF	; 255
    3ddc:	7f ef       	ldi	r23, 0xFF	; 255
    3dde:	c5 01       	movw	r24, r10
    3de0:	0e 94 68 22 	call	0x44d0	; 0x44d0 <strnlen>
    3de4:	4c 01       	movw	r8, r24
    3de6:	82 01       	movw	r16, r4
    3de8:	f3 2d       	mov	r31, r3
    3dea:	ff 77       	andi	r31, 0x7F	; 127
    3dec:	3f 2e       	mov	r3, r31
    3dee:	16 c0       	rjmp	.+44     	; 0x3e1c <vfprintf+0x188>
    3df0:	28 01       	movw	r4, r16
    3df2:	22 e0       	ldi	r18, 0x02	; 2
    3df4:	42 0e       	add	r4, r18
    3df6:	51 1c       	adc	r5, r1
    3df8:	f8 01       	movw	r30, r16
    3dfa:	a0 80       	ld	r10, Z
    3dfc:	b1 80       	ldd	r11, Z+1	; 0x01
    3dfe:	36 fe       	sbrs	r3, 6
    3e00:	03 c0       	rjmp	.+6      	; 0x3e08 <vfprintf+0x174>
    3e02:	69 2d       	mov	r22, r9
    3e04:	70 e0       	ldi	r23, 0x00	; 0
    3e06:	02 c0       	rjmp	.+4      	; 0x3e0c <vfprintf+0x178>
    3e08:	6f ef       	ldi	r22, 0xFF	; 255
    3e0a:	7f ef       	ldi	r23, 0xFF	; 255
    3e0c:	c5 01       	movw	r24, r10
    3e0e:	0e 94 5d 22 	call	0x44ba	; 0x44ba <strnlen_P>
    3e12:	4c 01       	movw	r8, r24
    3e14:	f3 2d       	mov	r31, r3
    3e16:	f0 68       	ori	r31, 0x80	; 128
    3e18:	3f 2e       	mov	r3, r31
    3e1a:	82 01       	movw	r16, r4
    3e1c:	33 fc       	sbrc	r3, 3
    3e1e:	1b c0       	rjmp	.+54     	; 0x3e56 <vfprintf+0x1c2>
    3e20:	82 2d       	mov	r24, r2
    3e22:	90 e0       	ldi	r25, 0x00	; 0
    3e24:	88 16       	cp	r8, r24
    3e26:	99 06       	cpc	r9, r25
    3e28:	b0 f4       	brcc	.+44     	; 0x3e56 <vfprintf+0x1c2>
    3e2a:	b6 01       	movw	r22, r12
    3e2c:	80 e2       	ldi	r24, 0x20	; 32
    3e2e:	90 e0       	ldi	r25, 0x00	; 0
    3e30:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    3e34:	2a 94       	dec	r2
    3e36:	f4 cf       	rjmp	.-24     	; 0x3e20 <vfprintf+0x18c>
    3e38:	f5 01       	movw	r30, r10
    3e3a:	37 fc       	sbrc	r3, 7
    3e3c:	85 91       	lpm	r24, Z+
    3e3e:	37 fe       	sbrs	r3, 7
    3e40:	81 91       	ld	r24, Z+
    3e42:	5f 01       	movw	r10, r30
    3e44:	b6 01       	movw	r22, r12
    3e46:	90 e0       	ldi	r25, 0x00	; 0
    3e48:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    3e4c:	21 10       	cpse	r2, r1
    3e4e:	2a 94       	dec	r2
    3e50:	21 e0       	ldi	r18, 0x01	; 1
    3e52:	82 1a       	sub	r8, r18
    3e54:	91 08       	sbc	r9, r1
    3e56:	81 14       	cp	r8, r1
    3e58:	91 04       	cpc	r9, r1
    3e5a:	71 f7       	brne	.-36     	; 0x3e38 <vfprintf+0x1a4>
    3e5c:	e8 c0       	rjmp	.+464    	; 0x402e <vfprintf+0x39a>
    3e5e:	84 36       	cpi	r24, 0x64	; 100
    3e60:	11 f0       	breq	.+4      	; 0x3e66 <vfprintf+0x1d2>
    3e62:	89 36       	cpi	r24, 0x69	; 105
    3e64:	41 f5       	brne	.+80     	; 0x3eb6 <vfprintf+0x222>
    3e66:	f8 01       	movw	r30, r16
    3e68:	37 fe       	sbrs	r3, 7
    3e6a:	07 c0       	rjmp	.+14     	; 0x3e7a <vfprintf+0x1e6>
    3e6c:	60 81       	ld	r22, Z
    3e6e:	71 81       	ldd	r23, Z+1	; 0x01
    3e70:	82 81       	ldd	r24, Z+2	; 0x02
    3e72:	93 81       	ldd	r25, Z+3	; 0x03
    3e74:	0c 5f       	subi	r16, 0xFC	; 252
    3e76:	1f 4f       	sbci	r17, 0xFF	; 255
    3e78:	08 c0       	rjmp	.+16     	; 0x3e8a <vfprintf+0x1f6>
    3e7a:	60 81       	ld	r22, Z
    3e7c:	71 81       	ldd	r23, Z+1	; 0x01
    3e7e:	07 2e       	mov	r0, r23
    3e80:	00 0c       	add	r0, r0
    3e82:	88 0b       	sbc	r24, r24
    3e84:	99 0b       	sbc	r25, r25
    3e86:	0e 5f       	subi	r16, 0xFE	; 254
    3e88:	1f 4f       	sbci	r17, 0xFF	; 255
    3e8a:	f3 2d       	mov	r31, r3
    3e8c:	ff 76       	andi	r31, 0x6F	; 111
    3e8e:	3f 2e       	mov	r3, r31
    3e90:	97 ff       	sbrs	r25, 7
    3e92:	09 c0       	rjmp	.+18     	; 0x3ea6 <vfprintf+0x212>
    3e94:	90 95       	com	r25
    3e96:	80 95       	com	r24
    3e98:	70 95       	com	r23
    3e9a:	61 95       	neg	r22
    3e9c:	7f 4f       	sbci	r23, 0xFF	; 255
    3e9e:	8f 4f       	sbci	r24, 0xFF	; 255
    3ea0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ea2:	f0 68       	ori	r31, 0x80	; 128
    3ea4:	3f 2e       	mov	r3, r31
    3ea6:	2a e0       	ldi	r18, 0x0A	; 10
    3ea8:	30 e0       	ldi	r19, 0x00	; 0
    3eaa:	a3 01       	movw	r20, r6
    3eac:	0e 94 af 22 	call	0x455e	; 0x455e <__ultoa_invert>
    3eb0:	88 2e       	mov	r8, r24
    3eb2:	86 18       	sub	r8, r6
    3eb4:	45 c0       	rjmp	.+138    	; 0x3f40 <vfprintf+0x2ac>
    3eb6:	85 37       	cpi	r24, 0x75	; 117
    3eb8:	31 f4       	brne	.+12     	; 0x3ec6 <vfprintf+0x232>
    3eba:	23 2d       	mov	r18, r3
    3ebc:	2f 7e       	andi	r18, 0xEF	; 239
    3ebe:	b2 2e       	mov	r11, r18
    3ec0:	2a e0       	ldi	r18, 0x0A	; 10
    3ec2:	30 e0       	ldi	r19, 0x00	; 0
    3ec4:	25 c0       	rjmp	.+74     	; 0x3f10 <vfprintf+0x27c>
    3ec6:	93 2d       	mov	r25, r3
    3ec8:	99 7f       	andi	r25, 0xF9	; 249
    3eca:	b9 2e       	mov	r11, r25
    3ecc:	8f 36       	cpi	r24, 0x6F	; 111
    3ece:	c1 f0       	breq	.+48     	; 0x3f00 <vfprintf+0x26c>
    3ed0:	18 f4       	brcc	.+6      	; 0x3ed8 <vfprintf+0x244>
    3ed2:	88 35       	cpi	r24, 0x58	; 88
    3ed4:	79 f0       	breq	.+30     	; 0x3ef4 <vfprintf+0x260>
    3ed6:	b5 c0       	rjmp	.+362    	; 0x4042 <vfprintf+0x3ae>
    3ed8:	80 37       	cpi	r24, 0x70	; 112
    3eda:	19 f0       	breq	.+6      	; 0x3ee2 <vfprintf+0x24e>
    3edc:	88 37       	cpi	r24, 0x78	; 120
    3ede:	21 f0       	breq	.+8      	; 0x3ee8 <vfprintf+0x254>
    3ee0:	b0 c0       	rjmp	.+352    	; 0x4042 <vfprintf+0x3ae>
    3ee2:	e9 2f       	mov	r30, r25
    3ee4:	e0 61       	ori	r30, 0x10	; 16
    3ee6:	be 2e       	mov	r11, r30
    3ee8:	b4 fe       	sbrs	r11, 4
    3eea:	0d c0       	rjmp	.+26     	; 0x3f06 <vfprintf+0x272>
    3eec:	fb 2d       	mov	r31, r11
    3eee:	f4 60       	ori	r31, 0x04	; 4
    3ef0:	bf 2e       	mov	r11, r31
    3ef2:	09 c0       	rjmp	.+18     	; 0x3f06 <vfprintf+0x272>
    3ef4:	34 fe       	sbrs	r3, 4
    3ef6:	0a c0       	rjmp	.+20     	; 0x3f0c <vfprintf+0x278>
    3ef8:	29 2f       	mov	r18, r25
    3efa:	26 60       	ori	r18, 0x06	; 6
    3efc:	b2 2e       	mov	r11, r18
    3efe:	06 c0       	rjmp	.+12     	; 0x3f0c <vfprintf+0x278>
    3f00:	28 e0       	ldi	r18, 0x08	; 8
    3f02:	30 e0       	ldi	r19, 0x00	; 0
    3f04:	05 c0       	rjmp	.+10     	; 0x3f10 <vfprintf+0x27c>
    3f06:	20 e1       	ldi	r18, 0x10	; 16
    3f08:	30 e0       	ldi	r19, 0x00	; 0
    3f0a:	02 c0       	rjmp	.+4      	; 0x3f10 <vfprintf+0x27c>
    3f0c:	20 e1       	ldi	r18, 0x10	; 16
    3f0e:	32 e0       	ldi	r19, 0x02	; 2
    3f10:	f8 01       	movw	r30, r16
    3f12:	b7 fe       	sbrs	r11, 7
    3f14:	07 c0       	rjmp	.+14     	; 0x3f24 <vfprintf+0x290>
    3f16:	60 81       	ld	r22, Z
    3f18:	71 81       	ldd	r23, Z+1	; 0x01
    3f1a:	82 81       	ldd	r24, Z+2	; 0x02
    3f1c:	93 81       	ldd	r25, Z+3	; 0x03
    3f1e:	0c 5f       	subi	r16, 0xFC	; 252
    3f20:	1f 4f       	sbci	r17, 0xFF	; 255
    3f22:	06 c0       	rjmp	.+12     	; 0x3f30 <vfprintf+0x29c>
    3f24:	60 81       	ld	r22, Z
    3f26:	71 81       	ldd	r23, Z+1	; 0x01
    3f28:	80 e0       	ldi	r24, 0x00	; 0
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	0e 5f       	subi	r16, 0xFE	; 254
    3f2e:	1f 4f       	sbci	r17, 0xFF	; 255
    3f30:	a3 01       	movw	r20, r6
    3f32:	0e 94 af 22 	call	0x455e	; 0x455e <__ultoa_invert>
    3f36:	88 2e       	mov	r8, r24
    3f38:	86 18       	sub	r8, r6
    3f3a:	fb 2d       	mov	r31, r11
    3f3c:	ff 77       	andi	r31, 0x7F	; 127
    3f3e:	3f 2e       	mov	r3, r31
    3f40:	36 fe       	sbrs	r3, 6
    3f42:	0d c0       	rjmp	.+26     	; 0x3f5e <vfprintf+0x2ca>
    3f44:	23 2d       	mov	r18, r3
    3f46:	2e 7f       	andi	r18, 0xFE	; 254
    3f48:	a2 2e       	mov	r10, r18
    3f4a:	89 14       	cp	r8, r9
    3f4c:	58 f4       	brcc	.+22     	; 0x3f64 <vfprintf+0x2d0>
    3f4e:	34 fe       	sbrs	r3, 4
    3f50:	0b c0       	rjmp	.+22     	; 0x3f68 <vfprintf+0x2d4>
    3f52:	32 fc       	sbrc	r3, 2
    3f54:	09 c0       	rjmp	.+18     	; 0x3f68 <vfprintf+0x2d4>
    3f56:	83 2d       	mov	r24, r3
    3f58:	8e 7e       	andi	r24, 0xEE	; 238
    3f5a:	a8 2e       	mov	r10, r24
    3f5c:	05 c0       	rjmp	.+10     	; 0x3f68 <vfprintf+0x2d4>
    3f5e:	b8 2c       	mov	r11, r8
    3f60:	a3 2c       	mov	r10, r3
    3f62:	03 c0       	rjmp	.+6      	; 0x3f6a <vfprintf+0x2d6>
    3f64:	b8 2c       	mov	r11, r8
    3f66:	01 c0       	rjmp	.+2      	; 0x3f6a <vfprintf+0x2d6>
    3f68:	b9 2c       	mov	r11, r9
    3f6a:	a4 fe       	sbrs	r10, 4
    3f6c:	0f c0       	rjmp	.+30     	; 0x3f8c <vfprintf+0x2f8>
    3f6e:	fe 01       	movw	r30, r28
    3f70:	e8 0d       	add	r30, r8
    3f72:	f1 1d       	adc	r31, r1
    3f74:	80 81       	ld	r24, Z
    3f76:	80 33       	cpi	r24, 0x30	; 48
    3f78:	21 f4       	brne	.+8      	; 0x3f82 <vfprintf+0x2ee>
    3f7a:	9a 2d       	mov	r25, r10
    3f7c:	99 7e       	andi	r25, 0xE9	; 233
    3f7e:	a9 2e       	mov	r10, r25
    3f80:	09 c0       	rjmp	.+18     	; 0x3f94 <vfprintf+0x300>
    3f82:	a2 fe       	sbrs	r10, 2
    3f84:	06 c0       	rjmp	.+12     	; 0x3f92 <vfprintf+0x2fe>
    3f86:	b3 94       	inc	r11
    3f88:	b3 94       	inc	r11
    3f8a:	04 c0       	rjmp	.+8      	; 0x3f94 <vfprintf+0x300>
    3f8c:	8a 2d       	mov	r24, r10
    3f8e:	86 78       	andi	r24, 0x86	; 134
    3f90:	09 f0       	breq	.+2      	; 0x3f94 <vfprintf+0x300>
    3f92:	b3 94       	inc	r11
    3f94:	a3 fc       	sbrc	r10, 3
    3f96:	11 c0       	rjmp	.+34     	; 0x3fba <vfprintf+0x326>
    3f98:	a0 fe       	sbrs	r10, 0
    3f9a:	06 c0       	rjmp	.+12     	; 0x3fa8 <vfprintf+0x314>
    3f9c:	b2 14       	cp	r11, r2
    3f9e:	88 f4       	brcc	.+34     	; 0x3fc2 <vfprintf+0x32e>
    3fa0:	28 0c       	add	r2, r8
    3fa2:	92 2c       	mov	r9, r2
    3fa4:	9b 18       	sub	r9, r11
    3fa6:	0e c0       	rjmp	.+28     	; 0x3fc4 <vfprintf+0x330>
    3fa8:	b2 14       	cp	r11, r2
    3faa:	60 f4       	brcc	.+24     	; 0x3fc4 <vfprintf+0x330>
    3fac:	b6 01       	movw	r22, r12
    3fae:	80 e2       	ldi	r24, 0x20	; 32
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    3fb6:	b3 94       	inc	r11
    3fb8:	f7 cf       	rjmp	.-18     	; 0x3fa8 <vfprintf+0x314>
    3fba:	b2 14       	cp	r11, r2
    3fbc:	18 f4       	brcc	.+6      	; 0x3fc4 <vfprintf+0x330>
    3fbe:	2b 18       	sub	r2, r11
    3fc0:	02 c0       	rjmp	.+4      	; 0x3fc6 <vfprintf+0x332>
    3fc2:	98 2c       	mov	r9, r8
    3fc4:	21 2c       	mov	r2, r1
    3fc6:	a4 fe       	sbrs	r10, 4
    3fc8:	10 c0       	rjmp	.+32     	; 0x3fea <vfprintf+0x356>
    3fca:	b6 01       	movw	r22, r12
    3fcc:	80 e3       	ldi	r24, 0x30	; 48
    3fce:	90 e0       	ldi	r25, 0x00	; 0
    3fd0:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    3fd4:	a2 fe       	sbrs	r10, 2
    3fd6:	17 c0       	rjmp	.+46     	; 0x4006 <vfprintf+0x372>
    3fd8:	a1 fc       	sbrc	r10, 1
    3fda:	03 c0       	rjmp	.+6      	; 0x3fe2 <vfprintf+0x34e>
    3fdc:	88 e7       	ldi	r24, 0x78	; 120
    3fde:	90 e0       	ldi	r25, 0x00	; 0
    3fe0:	02 c0       	rjmp	.+4      	; 0x3fe6 <vfprintf+0x352>
    3fe2:	88 e5       	ldi	r24, 0x58	; 88
    3fe4:	90 e0       	ldi	r25, 0x00	; 0
    3fe6:	b6 01       	movw	r22, r12
    3fe8:	0c c0       	rjmp	.+24     	; 0x4002 <vfprintf+0x36e>
    3fea:	8a 2d       	mov	r24, r10
    3fec:	86 78       	andi	r24, 0x86	; 134
    3fee:	59 f0       	breq	.+22     	; 0x4006 <vfprintf+0x372>
    3ff0:	a1 fe       	sbrs	r10, 1
    3ff2:	02 c0       	rjmp	.+4      	; 0x3ff8 <vfprintf+0x364>
    3ff4:	8b e2       	ldi	r24, 0x2B	; 43
    3ff6:	01 c0       	rjmp	.+2      	; 0x3ffa <vfprintf+0x366>
    3ff8:	80 e2       	ldi	r24, 0x20	; 32
    3ffa:	a7 fc       	sbrc	r10, 7
    3ffc:	8d e2       	ldi	r24, 0x2D	; 45
    3ffe:	b6 01       	movw	r22, r12
    4000:	90 e0       	ldi	r25, 0x00	; 0
    4002:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    4006:	89 14       	cp	r8, r9
    4008:	38 f4       	brcc	.+14     	; 0x4018 <vfprintf+0x384>
    400a:	b6 01       	movw	r22, r12
    400c:	80 e3       	ldi	r24, 0x30	; 48
    400e:	90 e0       	ldi	r25, 0x00	; 0
    4010:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    4014:	9a 94       	dec	r9
    4016:	f7 cf       	rjmp	.-18     	; 0x4006 <vfprintf+0x372>
    4018:	8a 94       	dec	r8
    401a:	f3 01       	movw	r30, r6
    401c:	e8 0d       	add	r30, r8
    401e:	f1 1d       	adc	r31, r1
    4020:	80 81       	ld	r24, Z
    4022:	b6 01       	movw	r22, r12
    4024:	90 e0       	ldi	r25, 0x00	; 0
    4026:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    402a:	81 10       	cpse	r8, r1
    402c:	f5 cf       	rjmp	.-22     	; 0x4018 <vfprintf+0x384>
    402e:	22 20       	and	r2, r2
    4030:	09 f4       	brne	.+2      	; 0x4034 <vfprintf+0x3a0>
    4032:	42 ce       	rjmp	.-892    	; 0x3cb8 <vfprintf+0x24>
    4034:	b6 01       	movw	r22, r12
    4036:	80 e2       	ldi	r24, 0x20	; 32
    4038:	90 e0       	ldi	r25, 0x00	; 0
    403a:	0e 94 73 22 	call	0x44e6	; 0x44e6 <fputc>
    403e:	2a 94       	dec	r2
    4040:	f6 cf       	rjmp	.-20     	; 0x402e <vfprintf+0x39a>
    4042:	f6 01       	movw	r30, r12
    4044:	86 81       	ldd	r24, Z+6	; 0x06
    4046:	97 81       	ldd	r25, Z+7	; 0x07
    4048:	02 c0       	rjmp	.+4      	; 0x404e <vfprintf+0x3ba>
    404a:	8f ef       	ldi	r24, 0xFF	; 255
    404c:	9f ef       	ldi	r25, 0xFF	; 255
    404e:	2b 96       	adiw	r28, 0x0b	; 11
    4050:	e2 e1       	ldi	r30, 0x12	; 18
    4052:	0c 94 6d 23 	jmp	0x46da	; 0x46da <__epilogue_restores__>

00004056 <dtoa_prf>:
    4056:	a9 e0       	ldi	r26, 0x09	; 9
    4058:	b0 e0       	ldi	r27, 0x00	; 0
    405a:	e1 e3       	ldi	r30, 0x31	; 49
    405c:	f0 e2       	ldi	r31, 0x20	; 32
    405e:	0c 94 57 23 	jmp	0x46ae	; 0x46ae <__prologue_saves__+0xc>
    4062:	6a 01       	movw	r12, r20
    4064:	12 2f       	mov	r17, r18
    4066:	b0 2e       	mov	r11, r16
    4068:	2b e3       	ldi	r18, 0x3B	; 59
    406a:	20 17       	cp	r18, r16
    406c:	20 f0       	brcs	.+8      	; 0x4076 <dtoa_prf+0x20>
    406e:	ff 24       	eor	r15, r15
    4070:	f3 94       	inc	r15
    4072:	f0 0e       	add	r15, r16
    4074:	02 c0       	rjmp	.+4      	; 0x407a <dtoa_prf+0x24>
    4076:	2c e3       	ldi	r18, 0x3C	; 60
    4078:	f2 2e       	mov	r15, r18
    407a:	0f 2d       	mov	r16, r15
    407c:	27 e0       	ldi	r18, 0x07	; 7
    407e:	ae 01       	movw	r20, r28
    4080:	4f 5f       	subi	r20, 0xFF	; 255
    4082:	5f 4f       	sbci	r21, 0xFF	; 255
    4084:	0e 94 85 21 	call	0x430a	; 0x430a <__ftoa_engine>
    4088:	bc 01       	movw	r22, r24
    408a:	49 81       	ldd	r20, Y+1	; 0x01
    408c:	84 2f       	mov	r24, r20
    408e:	89 70       	andi	r24, 0x09	; 9
    4090:	81 30       	cpi	r24, 0x01	; 1
    4092:	31 f0       	breq	.+12     	; 0x40a0 <dtoa_prf+0x4a>
    4094:	e1 fc       	sbrc	r14, 1
    4096:	06 c0       	rjmp	.+12     	; 0x40a4 <dtoa_prf+0x4e>
    4098:	e0 fe       	sbrs	r14, 0
    409a:	06 c0       	rjmp	.+12     	; 0x40a8 <dtoa_prf+0x52>
    409c:	90 e2       	ldi	r25, 0x20	; 32
    409e:	05 c0       	rjmp	.+10     	; 0x40aa <dtoa_prf+0x54>
    40a0:	9d e2       	ldi	r25, 0x2D	; 45
    40a2:	03 c0       	rjmp	.+6      	; 0x40aa <dtoa_prf+0x54>
    40a4:	9b e2       	ldi	r25, 0x2B	; 43
    40a6:	01 c0       	rjmp	.+2      	; 0x40aa <dtoa_prf+0x54>
    40a8:	90 e0       	ldi	r25, 0x00	; 0
    40aa:	5e 2d       	mov	r21, r14
    40ac:	50 71       	andi	r21, 0x10	; 16
    40ae:	43 ff       	sbrs	r20, 3
    40b0:	3c c0       	rjmp	.+120    	; 0x412a <dtoa_prf+0xd4>
    40b2:	91 11       	cpse	r25, r1
    40b4:	02 c0       	rjmp	.+4      	; 0x40ba <dtoa_prf+0x64>
    40b6:	83 e0       	ldi	r24, 0x03	; 3
    40b8:	01 c0       	rjmp	.+2      	; 0x40bc <dtoa_prf+0x66>
    40ba:	84 e0       	ldi	r24, 0x04	; 4
    40bc:	81 17       	cp	r24, r17
    40be:	18 f4       	brcc	.+6      	; 0x40c6 <dtoa_prf+0x70>
    40c0:	21 2f       	mov	r18, r17
    40c2:	28 1b       	sub	r18, r24
    40c4:	01 c0       	rjmp	.+2      	; 0x40c8 <dtoa_prf+0x72>
    40c6:	20 e0       	ldi	r18, 0x00	; 0
    40c8:	51 11       	cpse	r21, r1
    40ca:	0b c0       	rjmp	.+22     	; 0x40e2 <dtoa_prf+0x8c>
    40cc:	f6 01       	movw	r30, r12
    40ce:	82 2f       	mov	r24, r18
    40d0:	30 e2       	ldi	r19, 0x20	; 32
    40d2:	88 23       	and	r24, r24
    40d4:	19 f0       	breq	.+6      	; 0x40dc <dtoa_prf+0x86>
    40d6:	31 93       	st	Z+, r19
    40d8:	81 50       	subi	r24, 0x01	; 1
    40da:	fb cf       	rjmp	.-10     	; 0x40d2 <dtoa_prf+0x7c>
    40dc:	c2 0e       	add	r12, r18
    40de:	d1 1c       	adc	r13, r1
    40e0:	20 e0       	ldi	r18, 0x00	; 0
    40e2:	99 23       	and	r25, r25
    40e4:	29 f0       	breq	.+10     	; 0x40f0 <dtoa_prf+0x9a>
    40e6:	d6 01       	movw	r26, r12
    40e8:	9c 93       	st	X, r25
    40ea:	f6 01       	movw	r30, r12
    40ec:	31 96       	adiw	r30, 0x01	; 1
    40ee:	6f 01       	movw	r12, r30
    40f0:	c6 01       	movw	r24, r12
    40f2:	03 96       	adiw	r24, 0x03	; 3
    40f4:	e2 fe       	sbrs	r14, 2
    40f6:	0a c0       	rjmp	.+20     	; 0x410c <dtoa_prf+0xb6>
    40f8:	3e e4       	ldi	r19, 0x4E	; 78
    40fa:	d6 01       	movw	r26, r12
    40fc:	3c 93       	st	X, r19
    40fe:	41 e4       	ldi	r20, 0x41	; 65
    4100:	11 96       	adiw	r26, 0x01	; 1
    4102:	4c 93       	st	X, r20
    4104:	11 97       	sbiw	r26, 0x01	; 1
    4106:	12 96       	adiw	r26, 0x02	; 2
    4108:	3c 93       	st	X, r19
    410a:	06 c0       	rjmp	.+12     	; 0x4118 <dtoa_prf+0xc2>
    410c:	3e e6       	ldi	r19, 0x6E	; 110
    410e:	f6 01       	movw	r30, r12
    4110:	30 83       	st	Z, r19
    4112:	41 e6       	ldi	r20, 0x61	; 97
    4114:	41 83       	std	Z+1, r20	; 0x01
    4116:	32 83       	std	Z+2, r19	; 0x02
    4118:	fc 01       	movw	r30, r24
    411a:	32 2f       	mov	r19, r18
    411c:	40 e2       	ldi	r20, 0x20	; 32
    411e:	33 23       	and	r19, r19
    4120:	09 f4       	brne	.+2      	; 0x4124 <dtoa_prf+0xce>
    4122:	42 c0       	rjmp	.+132    	; 0x41a8 <dtoa_prf+0x152>
    4124:	41 93       	st	Z+, r20
    4126:	31 50       	subi	r19, 0x01	; 1
    4128:	fa cf       	rjmp	.-12     	; 0x411e <dtoa_prf+0xc8>
    412a:	42 ff       	sbrs	r20, 2
    412c:	44 c0       	rjmp	.+136    	; 0x41b6 <dtoa_prf+0x160>
    412e:	91 11       	cpse	r25, r1
    4130:	02 c0       	rjmp	.+4      	; 0x4136 <dtoa_prf+0xe0>
    4132:	83 e0       	ldi	r24, 0x03	; 3
    4134:	01 c0       	rjmp	.+2      	; 0x4138 <dtoa_prf+0xe2>
    4136:	84 e0       	ldi	r24, 0x04	; 4
    4138:	81 17       	cp	r24, r17
    413a:	18 f4       	brcc	.+6      	; 0x4142 <dtoa_prf+0xec>
    413c:	21 2f       	mov	r18, r17
    413e:	28 1b       	sub	r18, r24
    4140:	01 c0       	rjmp	.+2      	; 0x4144 <dtoa_prf+0xee>
    4142:	20 e0       	ldi	r18, 0x00	; 0
    4144:	51 11       	cpse	r21, r1
    4146:	0b c0       	rjmp	.+22     	; 0x415e <dtoa_prf+0x108>
    4148:	f6 01       	movw	r30, r12
    414a:	82 2f       	mov	r24, r18
    414c:	30 e2       	ldi	r19, 0x20	; 32
    414e:	88 23       	and	r24, r24
    4150:	19 f0       	breq	.+6      	; 0x4158 <dtoa_prf+0x102>
    4152:	31 93       	st	Z+, r19
    4154:	81 50       	subi	r24, 0x01	; 1
    4156:	fb cf       	rjmp	.-10     	; 0x414e <dtoa_prf+0xf8>
    4158:	c2 0e       	add	r12, r18
    415a:	d1 1c       	adc	r13, r1
    415c:	20 e0       	ldi	r18, 0x00	; 0
    415e:	99 23       	and	r25, r25
    4160:	29 f0       	breq	.+10     	; 0x416c <dtoa_prf+0x116>
    4162:	d6 01       	movw	r26, r12
    4164:	9c 93       	st	X, r25
    4166:	f6 01       	movw	r30, r12
    4168:	31 96       	adiw	r30, 0x01	; 1
    416a:	6f 01       	movw	r12, r30
    416c:	c6 01       	movw	r24, r12
    416e:	03 96       	adiw	r24, 0x03	; 3
    4170:	e2 fe       	sbrs	r14, 2
    4172:	0b c0       	rjmp	.+22     	; 0x418a <dtoa_prf+0x134>
    4174:	39 e4       	ldi	r19, 0x49	; 73
    4176:	d6 01       	movw	r26, r12
    4178:	3c 93       	st	X, r19
    417a:	3e e4       	ldi	r19, 0x4E	; 78
    417c:	11 96       	adiw	r26, 0x01	; 1
    417e:	3c 93       	st	X, r19
    4180:	11 97       	sbiw	r26, 0x01	; 1
    4182:	36 e4       	ldi	r19, 0x46	; 70
    4184:	12 96       	adiw	r26, 0x02	; 2
    4186:	3c 93       	st	X, r19
    4188:	07 c0       	rjmp	.+14     	; 0x4198 <dtoa_prf+0x142>
    418a:	39 e6       	ldi	r19, 0x69	; 105
    418c:	f6 01       	movw	r30, r12
    418e:	30 83       	st	Z, r19
    4190:	3e e6       	ldi	r19, 0x6E	; 110
    4192:	31 83       	std	Z+1, r19	; 0x01
    4194:	36 e6       	ldi	r19, 0x66	; 102
    4196:	32 83       	std	Z+2, r19	; 0x02
    4198:	fc 01       	movw	r30, r24
    419a:	32 2f       	mov	r19, r18
    419c:	40 e2       	ldi	r20, 0x20	; 32
    419e:	33 23       	and	r19, r19
    41a0:	19 f0       	breq	.+6      	; 0x41a8 <dtoa_prf+0x152>
    41a2:	41 93       	st	Z+, r20
    41a4:	31 50       	subi	r19, 0x01	; 1
    41a6:	fb cf       	rjmp	.-10     	; 0x419e <dtoa_prf+0x148>
    41a8:	fc 01       	movw	r30, r24
    41aa:	e2 0f       	add	r30, r18
    41ac:	f1 1d       	adc	r31, r1
    41ae:	10 82       	st	Z, r1
    41b0:	8e ef       	ldi	r24, 0xFE	; 254
    41b2:	9f ef       	ldi	r25, 0xFF	; 255
    41b4:	a6 c0       	rjmp	.+332    	; 0x4302 <dtoa_prf+0x2ac>
    41b6:	21 e0       	ldi	r18, 0x01	; 1
    41b8:	30 e0       	ldi	r19, 0x00	; 0
    41ba:	91 11       	cpse	r25, r1
    41bc:	02 c0       	rjmp	.+4      	; 0x41c2 <dtoa_prf+0x16c>
    41be:	20 e0       	ldi	r18, 0x00	; 0
    41c0:	30 e0       	ldi	r19, 0x00	; 0
    41c2:	16 16       	cp	r1, r22
    41c4:	17 06       	cpc	r1, r23
    41c6:	1c f4       	brge	.+6      	; 0x41ce <dtoa_prf+0x178>
    41c8:	fb 01       	movw	r30, r22
    41ca:	31 96       	adiw	r30, 0x01	; 1
    41cc:	02 c0       	rjmp	.+4      	; 0x41d2 <dtoa_prf+0x17c>
    41ce:	e1 e0       	ldi	r30, 0x01	; 1
    41d0:	f0 e0       	ldi	r31, 0x00	; 0
    41d2:	2e 0f       	add	r18, r30
    41d4:	3f 1f       	adc	r19, r31
    41d6:	bb 20       	and	r11, r11
    41d8:	21 f0       	breq	.+8      	; 0x41e2 <dtoa_prf+0x18c>
    41da:	eb 2d       	mov	r30, r11
    41dc:	f0 e0       	ldi	r31, 0x00	; 0
    41de:	31 96       	adiw	r30, 0x01	; 1
    41e0:	02 c0       	rjmp	.+4      	; 0x41e6 <dtoa_prf+0x190>
    41e2:	e0 e0       	ldi	r30, 0x00	; 0
    41e4:	f0 e0       	ldi	r31, 0x00	; 0
    41e6:	2e 0f       	add	r18, r30
    41e8:	3f 1f       	adc	r19, r31
    41ea:	e1 2f       	mov	r30, r17
    41ec:	f0 e0       	ldi	r31, 0x00	; 0
    41ee:	2e 17       	cp	r18, r30
    41f0:	3f 07       	cpc	r19, r31
    41f2:	1c f4       	brge	.+6      	; 0x41fa <dtoa_prf+0x1a4>
    41f4:	12 1b       	sub	r17, r18
    41f6:	21 2f       	mov	r18, r17
    41f8:	01 c0       	rjmp	.+2      	; 0x41fc <dtoa_prf+0x1a6>
    41fa:	20 e0       	ldi	r18, 0x00	; 0
    41fc:	8e 2d       	mov	r24, r14
    41fe:	88 71       	andi	r24, 0x18	; 24
    4200:	59 f4       	brne	.+22     	; 0x4218 <dtoa_prf+0x1c2>
    4202:	f6 01       	movw	r30, r12
    4204:	82 2f       	mov	r24, r18
    4206:	30 e2       	ldi	r19, 0x20	; 32
    4208:	88 23       	and	r24, r24
    420a:	19 f0       	breq	.+6      	; 0x4212 <dtoa_prf+0x1bc>
    420c:	31 93       	st	Z+, r19
    420e:	81 50       	subi	r24, 0x01	; 1
    4210:	fb cf       	rjmp	.-10     	; 0x4208 <dtoa_prf+0x1b2>
    4212:	c2 0e       	add	r12, r18
    4214:	d1 1c       	adc	r13, r1
    4216:	20 e0       	ldi	r18, 0x00	; 0
    4218:	99 23       	and	r25, r25
    421a:	29 f0       	breq	.+10     	; 0x4226 <dtoa_prf+0x1d0>
    421c:	d6 01       	movw	r26, r12
    421e:	9c 93       	st	X, r25
    4220:	f6 01       	movw	r30, r12
    4222:	31 96       	adiw	r30, 0x01	; 1
    4224:	6f 01       	movw	r12, r30
    4226:	51 11       	cpse	r21, r1
    4228:	0b c0       	rjmp	.+22     	; 0x4240 <dtoa_prf+0x1ea>
    422a:	f6 01       	movw	r30, r12
    422c:	82 2f       	mov	r24, r18
    422e:	90 e3       	ldi	r25, 0x30	; 48
    4230:	88 23       	and	r24, r24
    4232:	19 f0       	breq	.+6      	; 0x423a <dtoa_prf+0x1e4>
    4234:	91 93       	st	Z+, r25
    4236:	81 50       	subi	r24, 0x01	; 1
    4238:	fb cf       	rjmp	.-10     	; 0x4230 <dtoa_prf+0x1da>
    423a:	c2 0e       	add	r12, r18
    423c:	d1 1c       	adc	r13, r1
    423e:	20 e0       	ldi	r18, 0x00	; 0
    4240:	0f 2d       	mov	r16, r15
    4242:	06 0f       	add	r16, r22
    4244:	9a 81       	ldd	r25, Y+2	; 0x02
    4246:	34 2f       	mov	r19, r20
    4248:	30 71       	andi	r19, 0x10	; 16
    424a:	44 ff       	sbrs	r20, 4
    424c:	03 c0       	rjmp	.+6      	; 0x4254 <dtoa_prf+0x1fe>
    424e:	91 33       	cpi	r25, 0x31	; 49
    4250:	09 f4       	brne	.+2      	; 0x4254 <dtoa_prf+0x1fe>
    4252:	01 50       	subi	r16, 0x01	; 1
    4254:	10 16       	cp	r1, r16
    4256:	24 f4       	brge	.+8      	; 0x4260 <dtoa_prf+0x20a>
    4258:	09 30       	cpi	r16, 0x09	; 9
    425a:	18 f0       	brcs	.+6      	; 0x4262 <dtoa_prf+0x20c>
    425c:	08 e0       	ldi	r16, 0x08	; 8
    425e:	01 c0       	rjmp	.+2      	; 0x4262 <dtoa_prf+0x20c>
    4260:	01 e0       	ldi	r16, 0x01	; 1
    4262:	ab 01       	movw	r20, r22
    4264:	77 ff       	sbrs	r23, 7
    4266:	02 c0       	rjmp	.+4      	; 0x426c <dtoa_prf+0x216>
    4268:	40 e0       	ldi	r20, 0x00	; 0
    426a:	50 e0       	ldi	r21, 0x00	; 0
    426c:	fb 01       	movw	r30, r22
    426e:	e4 1b       	sub	r30, r20
    4270:	f5 0b       	sbc	r31, r21
    4272:	a1 e0       	ldi	r26, 0x01	; 1
    4274:	b0 e0       	ldi	r27, 0x00	; 0
    4276:	ac 0f       	add	r26, r28
    4278:	bd 1f       	adc	r27, r29
    427a:	ea 0f       	add	r30, r26
    427c:	fb 1f       	adc	r31, r27
    427e:	8e e2       	ldi	r24, 0x2E	; 46
    4280:	a8 2e       	mov	r10, r24
    4282:	4b 01       	movw	r8, r22
    4284:	80 1a       	sub	r8, r16
    4286:	91 08       	sbc	r9, r1
    4288:	0b 2d       	mov	r16, r11
    428a:	10 e0       	ldi	r17, 0x00	; 0
    428c:	11 95       	neg	r17
    428e:	01 95       	neg	r16
    4290:	11 09       	sbc	r17, r1
    4292:	4f 3f       	cpi	r20, 0xFF	; 255
    4294:	bf ef       	ldi	r27, 0xFF	; 255
    4296:	5b 07       	cpc	r21, r27
    4298:	21 f4       	brne	.+8      	; 0x42a2 <dtoa_prf+0x24c>
    429a:	d6 01       	movw	r26, r12
    429c:	ac 92       	st	X, r10
    429e:	11 96       	adiw	r26, 0x01	; 1
    42a0:	6d 01       	movw	r12, r26
    42a2:	64 17       	cp	r22, r20
    42a4:	75 07       	cpc	r23, r21
    42a6:	2c f0       	brlt	.+10     	; 0x42b2 <dtoa_prf+0x25c>
    42a8:	84 16       	cp	r8, r20
    42aa:	95 06       	cpc	r9, r21
    42ac:	14 f4       	brge	.+4      	; 0x42b2 <dtoa_prf+0x25c>
    42ae:	81 81       	ldd	r24, Z+1	; 0x01
    42b0:	01 c0       	rjmp	.+2      	; 0x42b4 <dtoa_prf+0x25e>
    42b2:	80 e3       	ldi	r24, 0x30	; 48
    42b4:	41 50       	subi	r20, 0x01	; 1
    42b6:	51 09       	sbc	r21, r1
    42b8:	31 96       	adiw	r30, 0x01	; 1
    42ba:	d6 01       	movw	r26, r12
    42bc:	11 96       	adiw	r26, 0x01	; 1
    42be:	7d 01       	movw	r14, r26
    42c0:	40 17       	cp	r20, r16
    42c2:	51 07       	cpc	r21, r17
    42c4:	24 f0       	brlt	.+8      	; 0x42ce <dtoa_prf+0x278>
    42c6:	d6 01       	movw	r26, r12
    42c8:	8c 93       	st	X, r24
    42ca:	67 01       	movw	r12, r14
    42cc:	e2 cf       	rjmp	.-60     	; 0x4292 <dtoa_prf+0x23c>
    42ce:	64 17       	cp	r22, r20
    42d0:	75 07       	cpc	r23, r21
    42d2:	39 f4       	brne	.+14     	; 0x42e2 <dtoa_prf+0x28c>
    42d4:	96 33       	cpi	r25, 0x36	; 54
    42d6:	20 f4       	brcc	.+8      	; 0x42e0 <dtoa_prf+0x28a>
    42d8:	95 33       	cpi	r25, 0x35	; 53
    42da:	19 f4       	brne	.+6      	; 0x42e2 <dtoa_prf+0x28c>
    42dc:	31 11       	cpse	r19, r1
    42de:	01 c0       	rjmp	.+2      	; 0x42e2 <dtoa_prf+0x28c>
    42e0:	81 e3       	ldi	r24, 0x31	; 49
    42e2:	f6 01       	movw	r30, r12
    42e4:	80 83       	st	Z, r24
    42e6:	f7 01       	movw	r30, r14
    42e8:	82 2f       	mov	r24, r18
    42ea:	90 e2       	ldi	r25, 0x20	; 32
    42ec:	88 23       	and	r24, r24
    42ee:	19 f0       	breq	.+6      	; 0x42f6 <dtoa_prf+0x2a0>
    42f0:	91 93       	st	Z+, r25
    42f2:	81 50       	subi	r24, 0x01	; 1
    42f4:	fb cf       	rjmp	.-10     	; 0x42ec <dtoa_prf+0x296>
    42f6:	f7 01       	movw	r30, r14
    42f8:	e2 0f       	add	r30, r18
    42fa:	f1 1d       	adc	r31, r1
    42fc:	10 82       	st	Z, r1
    42fe:	80 e0       	ldi	r24, 0x00	; 0
    4300:	90 e0       	ldi	r25, 0x00	; 0
    4302:	29 96       	adiw	r28, 0x09	; 9
    4304:	ec e0       	ldi	r30, 0x0C	; 12
    4306:	0c 94 73 23 	jmp	0x46e6	; 0x46e6 <__epilogue_restores__+0xc>

0000430a <__ftoa_engine>:
    430a:	28 30       	cpi	r18, 0x08	; 8
    430c:	08 f0       	brcs	.+2      	; 0x4310 <__ftoa_engine+0x6>
    430e:	27 e0       	ldi	r18, 0x07	; 7
    4310:	33 27       	eor	r19, r19
    4312:	da 01       	movw	r26, r20
    4314:	99 0f       	add	r25, r25
    4316:	31 1d       	adc	r19, r1
    4318:	87 fd       	sbrc	r24, 7
    431a:	91 60       	ori	r25, 0x01	; 1
    431c:	00 96       	adiw	r24, 0x00	; 0
    431e:	61 05       	cpc	r22, r1
    4320:	71 05       	cpc	r23, r1
    4322:	39 f4       	brne	.+14     	; 0x4332 <__ftoa_engine+0x28>
    4324:	32 60       	ori	r19, 0x02	; 2
    4326:	2e 5f       	subi	r18, 0xFE	; 254
    4328:	3d 93       	st	X+, r19
    432a:	30 e3       	ldi	r19, 0x30	; 48
    432c:	2a 95       	dec	r18
    432e:	e1 f7       	brne	.-8      	; 0x4328 <__ftoa_engine+0x1e>
    4330:	08 95       	ret
    4332:	9f 3f       	cpi	r25, 0xFF	; 255
    4334:	30 f0       	brcs	.+12     	; 0x4342 <__ftoa_engine+0x38>
    4336:	80 38       	cpi	r24, 0x80	; 128
    4338:	71 05       	cpc	r23, r1
    433a:	61 05       	cpc	r22, r1
    433c:	09 f0       	breq	.+2      	; 0x4340 <__ftoa_engine+0x36>
    433e:	3c 5f       	subi	r19, 0xFC	; 252
    4340:	3c 5f       	subi	r19, 0xFC	; 252
    4342:	3d 93       	st	X+, r19
    4344:	91 30       	cpi	r25, 0x01	; 1
    4346:	08 f0       	brcs	.+2      	; 0x434a <__ftoa_engine+0x40>
    4348:	80 68       	ori	r24, 0x80	; 128
    434a:	91 1d       	adc	r25, r1
    434c:	df 93       	push	r29
    434e:	cf 93       	push	r28
    4350:	1f 93       	push	r17
    4352:	0f 93       	push	r16
    4354:	ff 92       	push	r15
    4356:	ef 92       	push	r14
    4358:	19 2f       	mov	r17, r25
    435a:	98 7f       	andi	r25, 0xF8	; 248
    435c:	96 95       	lsr	r25
    435e:	e9 2f       	mov	r30, r25
    4360:	96 95       	lsr	r25
    4362:	96 95       	lsr	r25
    4364:	e9 0f       	add	r30, r25
    4366:	ff 27       	eor	r31, r31
    4368:	e8 5d       	subi	r30, 0xD8	; 216
    436a:	fd 4f       	sbci	r31, 0xFD	; 253
    436c:	99 27       	eor	r25, r25
    436e:	33 27       	eor	r19, r19
    4370:	ee 24       	eor	r14, r14
    4372:	ff 24       	eor	r15, r15
    4374:	a7 01       	movw	r20, r14
    4376:	e7 01       	movw	r28, r14
    4378:	05 90       	lpm	r0, Z+
    437a:	08 94       	sec
    437c:	07 94       	ror	r0
    437e:	28 f4       	brcc	.+10     	; 0x438a <__ftoa_engine+0x80>
    4380:	36 0f       	add	r19, r22
    4382:	e7 1e       	adc	r14, r23
    4384:	f8 1e       	adc	r15, r24
    4386:	49 1f       	adc	r20, r25
    4388:	51 1d       	adc	r21, r1
    438a:	66 0f       	add	r22, r22
    438c:	77 1f       	adc	r23, r23
    438e:	88 1f       	adc	r24, r24
    4390:	99 1f       	adc	r25, r25
    4392:	06 94       	lsr	r0
    4394:	a1 f7       	brne	.-24     	; 0x437e <__ftoa_engine+0x74>
    4396:	05 90       	lpm	r0, Z+
    4398:	07 94       	ror	r0
    439a:	28 f4       	brcc	.+10     	; 0x43a6 <__ftoa_engine+0x9c>
    439c:	e7 0e       	add	r14, r23
    439e:	f8 1e       	adc	r15, r24
    43a0:	49 1f       	adc	r20, r25
    43a2:	56 1f       	adc	r21, r22
    43a4:	c1 1d       	adc	r28, r1
    43a6:	77 0f       	add	r23, r23
    43a8:	88 1f       	adc	r24, r24
    43aa:	99 1f       	adc	r25, r25
    43ac:	66 1f       	adc	r22, r22
    43ae:	06 94       	lsr	r0
    43b0:	a1 f7       	brne	.-24     	; 0x439a <__ftoa_engine+0x90>
    43b2:	05 90       	lpm	r0, Z+
    43b4:	07 94       	ror	r0
    43b6:	28 f4       	brcc	.+10     	; 0x43c2 <__ftoa_engine+0xb8>
    43b8:	f8 0e       	add	r15, r24
    43ba:	49 1f       	adc	r20, r25
    43bc:	56 1f       	adc	r21, r22
    43be:	c7 1f       	adc	r28, r23
    43c0:	d1 1d       	adc	r29, r1
    43c2:	88 0f       	add	r24, r24
    43c4:	99 1f       	adc	r25, r25
    43c6:	66 1f       	adc	r22, r22
    43c8:	77 1f       	adc	r23, r23
    43ca:	06 94       	lsr	r0
    43cc:	a1 f7       	brne	.-24     	; 0x43b6 <__ftoa_engine+0xac>
    43ce:	05 90       	lpm	r0, Z+
    43d0:	07 94       	ror	r0
    43d2:	20 f4       	brcc	.+8      	; 0x43dc <__ftoa_engine+0xd2>
    43d4:	49 0f       	add	r20, r25
    43d6:	56 1f       	adc	r21, r22
    43d8:	c7 1f       	adc	r28, r23
    43da:	d8 1f       	adc	r29, r24
    43dc:	99 0f       	add	r25, r25
    43de:	66 1f       	adc	r22, r22
    43e0:	77 1f       	adc	r23, r23
    43e2:	88 1f       	adc	r24, r24
    43e4:	06 94       	lsr	r0
    43e6:	a9 f7       	brne	.-22     	; 0x43d2 <__ftoa_engine+0xc8>
    43e8:	84 91       	lpm	r24, Z
    43ea:	10 95       	com	r17
    43ec:	17 70       	andi	r17, 0x07	; 7
    43ee:	41 f0       	breq	.+16     	; 0x4400 <__ftoa_engine+0xf6>
    43f0:	d6 95       	lsr	r29
    43f2:	c7 95       	ror	r28
    43f4:	57 95       	ror	r21
    43f6:	47 95       	ror	r20
    43f8:	f7 94       	ror	r15
    43fa:	e7 94       	ror	r14
    43fc:	1a 95       	dec	r17
    43fe:	c1 f7       	brne	.-16     	; 0x43f0 <__ftoa_engine+0xe6>
    4400:	ee ec       	ldi	r30, 0xCE	; 206
    4402:	f1 e0       	ldi	r31, 0x01	; 1
    4404:	68 94       	set
    4406:	15 90       	lpm	r1, Z+
    4408:	15 91       	lpm	r17, Z+
    440a:	35 91       	lpm	r19, Z+
    440c:	65 91       	lpm	r22, Z+
    440e:	95 91       	lpm	r25, Z+
    4410:	05 90       	lpm	r0, Z+
    4412:	7f e2       	ldi	r23, 0x2F	; 47
    4414:	73 95       	inc	r23
    4416:	e1 18       	sub	r14, r1
    4418:	f1 0a       	sbc	r15, r17
    441a:	43 0b       	sbc	r20, r19
    441c:	56 0b       	sbc	r21, r22
    441e:	c9 0b       	sbc	r28, r25
    4420:	d0 09       	sbc	r29, r0
    4422:	c0 f7       	brcc	.-16     	; 0x4414 <__ftoa_engine+0x10a>
    4424:	e1 0c       	add	r14, r1
    4426:	f1 1e       	adc	r15, r17
    4428:	43 1f       	adc	r20, r19
    442a:	56 1f       	adc	r21, r22
    442c:	c9 1f       	adc	r28, r25
    442e:	d0 1d       	adc	r29, r0
    4430:	7e f4       	brtc	.+30     	; 0x4450 <__ftoa_engine+0x146>
    4432:	70 33       	cpi	r23, 0x30	; 48
    4434:	11 f4       	brne	.+4      	; 0x443a <__ftoa_engine+0x130>
    4436:	8a 95       	dec	r24
    4438:	e6 cf       	rjmp	.-52     	; 0x4406 <__ftoa_engine+0xfc>
    443a:	e8 94       	clt
    443c:	01 50       	subi	r16, 0x01	; 1
    443e:	30 f0       	brcs	.+12     	; 0x444c <__ftoa_engine+0x142>
    4440:	08 0f       	add	r16, r24
    4442:	0a f4       	brpl	.+2      	; 0x4446 <__ftoa_engine+0x13c>
    4444:	00 27       	eor	r16, r16
    4446:	02 17       	cp	r16, r18
    4448:	08 f4       	brcc	.+2      	; 0x444c <__ftoa_engine+0x142>
    444a:	20 2f       	mov	r18, r16
    444c:	23 95       	inc	r18
    444e:	02 2f       	mov	r16, r18
    4450:	7a 33       	cpi	r23, 0x3A	; 58
    4452:	28 f0       	brcs	.+10     	; 0x445e <__ftoa_engine+0x154>
    4454:	79 e3       	ldi	r23, 0x39	; 57
    4456:	7d 93       	st	X+, r23
    4458:	2a 95       	dec	r18
    445a:	e9 f7       	brne	.-6      	; 0x4456 <__ftoa_engine+0x14c>
    445c:	10 c0       	rjmp	.+32     	; 0x447e <__ftoa_engine+0x174>
    445e:	7d 93       	st	X+, r23
    4460:	2a 95       	dec	r18
    4462:	89 f6       	brne	.-94     	; 0x4406 <__ftoa_engine+0xfc>
    4464:	06 94       	lsr	r0
    4466:	97 95       	ror	r25
    4468:	67 95       	ror	r22
    446a:	37 95       	ror	r19
    446c:	17 95       	ror	r17
    446e:	17 94       	ror	r1
    4470:	e1 18       	sub	r14, r1
    4472:	f1 0a       	sbc	r15, r17
    4474:	43 0b       	sbc	r20, r19
    4476:	56 0b       	sbc	r21, r22
    4478:	c9 0b       	sbc	r28, r25
    447a:	d0 09       	sbc	r29, r0
    447c:	98 f0       	brcs	.+38     	; 0x44a4 <__ftoa_engine+0x19a>
    447e:	23 95       	inc	r18
    4480:	7e 91       	ld	r23, -X
    4482:	73 95       	inc	r23
    4484:	7a 33       	cpi	r23, 0x3A	; 58
    4486:	08 f0       	brcs	.+2      	; 0x448a <__ftoa_engine+0x180>
    4488:	70 e3       	ldi	r23, 0x30	; 48
    448a:	7c 93       	st	X, r23
    448c:	20 13       	cpse	r18, r16
    448e:	b8 f7       	brcc	.-18     	; 0x447e <__ftoa_engine+0x174>
    4490:	7e 91       	ld	r23, -X
    4492:	70 61       	ori	r23, 0x10	; 16
    4494:	7d 93       	st	X+, r23
    4496:	30 f0       	brcs	.+12     	; 0x44a4 <__ftoa_engine+0x19a>
    4498:	83 95       	inc	r24
    449a:	71 e3       	ldi	r23, 0x31	; 49
    449c:	7d 93       	st	X+, r23
    449e:	70 e3       	ldi	r23, 0x30	; 48
    44a0:	2a 95       	dec	r18
    44a2:	e1 f7       	brne	.-8      	; 0x449c <__ftoa_engine+0x192>
    44a4:	11 24       	eor	r1, r1
    44a6:	ef 90       	pop	r14
    44a8:	ff 90       	pop	r15
    44aa:	0f 91       	pop	r16
    44ac:	1f 91       	pop	r17
    44ae:	cf 91       	pop	r28
    44b0:	df 91       	pop	r29
    44b2:	99 27       	eor	r25, r25
    44b4:	87 fd       	sbrc	r24, 7
    44b6:	90 95       	com	r25
    44b8:	08 95       	ret

000044ba <strnlen_P>:
    44ba:	fc 01       	movw	r30, r24
    44bc:	05 90       	lpm	r0, Z+
    44be:	61 50       	subi	r22, 0x01	; 1
    44c0:	70 40       	sbci	r23, 0x00	; 0
    44c2:	01 10       	cpse	r0, r1
    44c4:	d8 f7       	brcc	.-10     	; 0x44bc <strnlen_P+0x2>
    44c6:	80 95       	com	r24
    44c8:	90 95       	com	r25
    44ca:	8e 0f       	add	r24, r30
    44cc:	9f 1f       	adc	r25, r31
    44ce:	08 95       	ret

000044d0 <strnlen>:
    44d0:	fc 01       	movw	r30, r24
    44d2:	61 50       	subi	r22, 0x01	; 1
    44d4:	70 40       	sbci	r23, 0x00	; 0
    44d6:	01 90       	ld	r0, Z+
    44d8:	01 10       	cpse	r0, r1
    44da:	d8 f7       	brcc	.-10     	; 0x44d2 <strnlen+0x2>
    44dc:	80 95       	com	r24
    44de:	90 95       	com	r25
    44e0:	8e 0f       	add	r24, r30
    44e2:	9f 1f       	adc	r25, r31
    44e4:	08 95       	ret

000044e6 <fputc>:
    44e6:	0f 93       	push	r16
    44e8:	1f 93       	push	r17
    44ea:	cf 93       	push	r28
    44ec:	df 93       	push	r29
    44ee:	fb 01       	movw	r30, r22
    44f0:	23 81       	ldd	r18, Z+3	; 0x03
    44f2:	21 fd       	sbrc	r18, 1
    44f4:	03 c0       	rjmp	.+6      	; 0x44fc <fputc+0x16>
    44f6:	8f ef       	ldi	r24, 0xFF	; 255
    44f8:	9f ef       	ldi	r25, 0xFF	; 255
    44fa:	2c c0       	rjmp	.+88     	; 0x4554 <fputc+0x6e>
    44fc:	22 ff       	sbrs	r18, 2
    44fe:	16 c0       	rjmp	.+44     	; 0x452c <fputc+0x46>
    4500:	46 81       	ldd	r20, Z+6	; 0x06
    4502:	57 81       	ldd	r21, Z+7	; 0x07
    4504:	24 81       	ldd	r18, Z+4	; 0x04
    4506:	35 81       	ldd	r19, Z+5	; 0x05
    4508:	42 17       	cp	r20, r18
    450a:	53 07       	cpc	r21, r19
    450c:	44 f4       	brge	.+16     	; 0x451e <fputc+0x38>
    450e:	a0 81       	ld	r26, Z
    4510:	b1 81       	ldd	r27, Z+1	; 0x01
    4512:	9d 01       	movw	r18, r26
    4514:	2f 5f       	subi	r18, 0xFF	; 255
    4516:	3f 4f       	sbci	r19, 0xFF	; 255
    4518:	31 83       	std	Z+1, r19	; 0x01
    451a:	20 83       	st	Z, r18
    451c:	8c 93       	st	X, r24
    451e:	26 81       	ldd	r18, Z+6	; 0x06
    4520:	37 81       	ldd	r19, Z+7	; 0x07
    4522:	2f 5f       	subi	r18, 0xFF	; 255
    4524:	3f 4f       	sbci	r19, 0xFF	; 255
    4526:	37 83       	std	Z+7, r19	; 0x07
    4528:	26 83       	std	Z+6, r18	; 0x06
    452a:	14 c0       	rjmp	.+40     	; 0x4554 <fputc+0x6e>
    452c:	8b 01       	movw	r16, r22
    452e:	ec 01       	movw	r28, r24
    4530:	fb 01       	movw	r30, r22
    4532:	00 84       	ldd	r0, Z+8	; 0x08
    4534:	f1 85       	ldd	r31, Z+9	; 0x09
    4536:	e0 2d       	mov	r30, r0
    4538:	09 95       	icall
    453a:	89 2b       	or	r24, r25
    453c:	e1 f6       	brne	.-72     	; 0x44f6 <fputc+0x10>
    453e:	d8 01       	movw	r26, r16
    4540:	16 96       	adiw	r26, 0x06	; 6
    4542:	8d 91       	ld	r24, X+
    4544:	9c 91       	ld	r25, X
    4546:	17 97       	sbiw	r26, 0x07	; 7
    4548:	01 96       	adiw	r24, 0x01	; 1
    454a:	17 96       	adiw	r26, 0x07	; 7
    454c:	9c 93       	st	X, r25
    454e:	8e 93       	st	-X, r24
    4550:	16 97       	sbiw	r26, 0x06	; 6
    4552:	ce 01       	movw	r24, r28
    4554:	df 91       	pop	r29
    4556:	cf 91       	pop	r28
    4558:	1f 91       	pop	r17
    455a:	0f 91       	pop	r16
    455c:	08 95       	ret

0000455e <__ultoa_invert>:
    455e:	fa 01       	movw	r30, r20
    4560:	aa 27       	eor	r26, r26
    4562:	28 30       	cpi	r18, 0x08	; 8
    4564:	51 f1       	breq	.+84     	; 0x45ba <__ultoa_invert+0x5c>
    4566:	20 31       	cpi	r18, 0x10	; 16
    4568:	81 f1       	breq	.+96     	; 0x45ca <__ultoa_invert+0x6c>
    456a:	e8 94       	clt
    456c:	6f 93       	push	r22
    456e:	6e 7f       	andi	r22, 0xFE	; 254
    4570:	6e 5f       	subi	r22, 0xFE	; 254
    4572:	7f 4f       	sbci	r23, 0xFF	; 255
    4574:	8f 4f       	sbci	r24, 0xFF	; 255
    4576:	9f 4f       	sbci	r25, 0xFF	; 255
    4578:	af 4f       	sbci	r26, 0xFF	; 255
    457a:	b1 e0       	ldi	r27, 0x01	; 1
    457c:	3e d0       	rcall	.+124    	; 0x45fa <__ultoa_invert+0x9c>
    457e:	b4 e0       	ldi	r27, 0x04	; 4
    4580:	3c d0       	rcall	.+120    	; 0x45fa <__ultoa_invert+0x9c>
    4582:	67 0f       	add	r22, r23
    4584:	78 1f       	adc	r23, r24
    4586:	89 1f       	adc	r24, r25
    4588:	9a 1f       	adc	r25, r26
    458a:	a1 1d       	adc	r26, r1
    458c:	68 0f       	add	r22, r24
    458e:	79 1f       	adc	r23, r25
    4590:	8a 1f       	adc	r24, r26
    4592:	91 1d       	adc	r25, r1
    4594:	a1 1d       	adc	r26, r1
    4596:	6a 0f       	add	r22, r26
    4598:	71 1d       	adc	r23, r1
    459a:	81 1d       	adc	r24, r1
    459c:	91 1d       	adc	r25, r1
    459e:	a1 1d       	adc	r26, r1
    45a0:	20 d0       	rcall	.+64     	; 0x45e2 <__ultoa_invert+0x84>
    45a2:	09 f4       	brne	.+2      	; 0x45a6 <__ultoa_invert+0x48>
    45a4:	68 94       	set
    45a6:	3f 91       	pop	r19
    45a8:	2a e0       	ldi	r18, 0x0A	; 10
    45aa:	26 9f       	mul	r18, r22
    45ac:	11 24       	eor	r1, r1
    45ae:	30 19       	sub	r19, r0
    45b0:	30 5d       	subi	r19, 0xD0	; 208
    45b2:	31 93       	st	Z+, r19
    45b4:	de f6       	brtc	.-74     	; 0x456c <__ultoa_invert+0xe>
    45b6:	cf 01       	movw	r24, r30
    45b8:	08 95       	ret
    45ba:	46 2f       	mov	r20, r22
    45bc:	47 70       	andi	r20, 0x07	; 7
    45be:	40 5d       	subi	r20, 0xD0	; 208
    45c0:	41 93       	st	Z+, r20
    45c2:	b3 e0       	ldi	r27, 0x03	; 3
    45c4:	0f d0       	rcall	.+30     	; 0x45e4 <__ultoa_invert+0x86>
    45c6:	c9 f7       	brne	.-14     	; 0x45ba <__ultoa_invert+0x5c>
    45c8:	f6 cf       	rjmp	.-20     	; 0x45b6 <__ultoa_invert+0x58>
    45ca:	46 2f       	mov	r20, r22
    45cc:	4f 70       	andi	r20, 0x0F	; 15
    45ce:	40 5d       	subi	r20, 0xD0	; 208
    45d0:	4a 33       	cpi	r20, 0x3A	; 58
    45d2:	18 f0       	brcs	.+6      	; 0x45da <__ultoa_invert+0x7c>
    45d4:	49 5d       	subi	r20, 0xD9	; 217
    45d6:	31 fd       	sbrc	r19, 1
    45d8:	40 52       	subi	r20, 0x20	; 32
    45da:	41 93       	st	Z+, r20
    45dc:	02 d0       	rcall	.+4      	; 0x45e2 <__ultoa_invert+0x84>
    45de:	a9 f7       	brne	.-22     	; 0x45ca <__ultoa_invert+0x6c>
    45e0:	ea cf       	rjmp	.-44     	; 0x45b6 <__ultoa_invert+0x58>
    45e2:	b4 e0       	ldi	r27, 0x04	; 4
    45e4:	a6 95       	lsr	r26
    45e6:	97 95       	ror	r25
    45e8:	87 95       	ror	r24
    45ea:	77 95       	ror	r23
    45ec:	67 95       	ror	r22
    45ee:	ba 95       	dec	r27
    45f0:	c9 f7       	brne	.-14     	; 0x45e4 <__ultoa_invert+0x86>
    45f2:	00 97       	sbiw	r24, 0x00	; 0
    45f4:	61 05       	cpc	r22, r1
    45f6:	71 05       	cpc	r23, r1
    45f8:	08 95       	ret
    45fa:	9b 01       	movw	r18, r22
    45fc:	ac 01       	movw	r20, r24
    45fe:	0a 2e       	mov	r0, r26
    4600:	06 94       	lsr	r0
    4602:	57 95       	ror	r21
    4604:	47 95       	ror	r20
    4606:	37 95       	ror	r19
    4608:	27 95       	ror	r18
    460a:	ba 95       	dec	r27
    460c:	c9 f7       	brne	.-14     	; 0x4600 <__ultoa_invert+0xa2>
    460e:	62 0f       	add	r22, r18
    4610:	73 1f       	adc	r23, r19
    4612:	84 1f       	adc	r24, r20
    4614:	95 1f       	adc	r25, r21
    4616:	a0 1d       	adc	r26, r0
    4618:	08 95       	ret

0000461a <eeprom_read_byte>:
    461a:	f9 99       	sbic	0x1f, 1	; 31
    461c:	fe cf       	rjmp	.-4      	; 0x461a <eeprom_read_byte>
    461e:	92 bd       	out	0x22, r25	; 34
    4620:	81 bd       	out	0x21, r24	; 33
    4622:	f8 9a       	sbi	0x1f, 0	; 31
    4624:	99 27       	eor	r25, r25
    4626:	80 b5       	in	r24, 0x20	; 32
    4628:	08 95       	ret

0000462a <eeprom_read_word>:
    462a:	a8 e1       	ldi	r26, 0x18	; 24
    462c:	b0 e0       	ldi	r27, 0x00	; 0
    462e:	42 e0       	ldi	r20, 0x02	; 2
    4630:	50 e0       	ldi	r21, 0x00	; 0
    4632:	0c 94 43 23 	jmp	0x4686	; 0x4686 <eeprom_read_blraw>

00004636 <eeprom_update_byte>:
    4636:	26 2f       	mov	r18, r22

00004638 <eeprom_update_r18>:
    4638:	f9 99       	sbic	0x1f, 1	; 31
    463a:	fe cf       	rjmp	.-4      	; 0x4638 <eeprom_update_r18>
    463c:	92 bd       	out	0x22, r25	; 34
    463e:	81 bd       	out	0x21, r24	; 33
    4640:	f8 9a       	sbi	0x1f, 0	; 31
    4642:	01 97       	sbiw	r24, 0x01	; 1
    4644:	00 b4       	in	r0, 0x20	; 32
    4646:	02 16       	cp	r0, r18
    4648:	39 f0       	breq	.+14     	; 0x4658 <eeprom_update_r18+0x20>
    464a:	1f ba       	out	0x1f, r1	; 31
    464c:	20 bd       	out	0x20, r18	; 32
    464e:	0f b6       	in	r0, 0x3f	; 63
    4650:	f8 94       	cli
    4652:	fa 9a       	sbi	0x1f, 2	; 31
    4654:	f9 9a       	sbi	0x1f, 1	; 31
    4656:	0f be       	out	0x3f, r0	; 63
    4658:	08 95       	ret

0000465a <eeprom_update_word>:
    465a:	01 96       	adiw	r24, 0x01	; 1
    465c:	27 2f       	mov	r18, r23
    465e:	0e 94 1c 23 	call	0x4638	; 0x4638 <eeprom_update_r18>
    4662:	0c 94 1b 23 	jmp	0x4636	; 0x4636 <eeprom_update_byte>

00004666 <eeprom_write_byte>:
    4666:	26 2f       	mov	r18, r22

00004668 <eeprom_write_r18>:
    4668:	f9 99       	sbic	0x1f, 1	; 31
    466a:	fe cf       	rjmp	.-4      	; 0x4668 <eeprom_write_r18>
    466c:	1f ba       	out	0x1f, r1	; 31
    466e:	92 bd       	out	0x22, r25	; 34
    4670:	81 bd       	out	0x21, r24	; 33
    4672:	20 bd       	out	0x20, r18	; 32
    4674:	0f b6       	in	r0, 0x3f	; 63
    4676:	f8 94       	cli
    4678:	fa 9a       	sbi	0x1f, 2	; 31
    467a:	f9 9a       	sbi	0x1f, 1	; 31
    467c:	0f be       	out	0x3f, r0	; 63
    467e:	01 96       	adiw	r24, 0x01	; 1
    4680:	08 95       	ret

00004682 <eeprom_read_block>:
    4682:	dc 01       	movw	r26, r24
    4684:	cb 01       	movw	r24, r22

00004686 <eeprom_read_blraw>:
    4686:	fc 01       	movw	r30, r24
    4688:	f9 99       	sbic	0x1f, 1	; 31
    468a:	fe cf       	rjmp	.-4      	; 0x4688 <eeprom_read_blraw+0x2>
    468c:	06 c0       	rjmp	.+12     	; 0x469a <eeprom_read_blraw+0x14>
    468e:	f2 bd       	out	0x22, r31	; 34
    4690:	e1 bd       	out	0x21, r30	; 33
    4692:	f8 9a       	sbi	0x1f, 0	; 31
    4694:	31 96       	adiw	r30, 0x01	; 1
    4696:	00 b4       	in	r0, 0x20	; 32
    4698:	0d 92       	st	X+, r0
    469a:	41 50       	subi	r20, 0x01	; 1
    469c:	50 40       	sbci	r21, 0x00	; 0
    469e:	b8 f7       	brcc	.-18     	; 0x468e <eeprom_read_blraw+0x8>
    46a0:	08 95       	ret

000046a2 <__prologue_saves__>:
    46a2:	2f 92       	push	r2
    46a4:	3f 92       	push	r3
    46a6:	4f 92       	push	r4
    46a8:	5f 92       	push	r5
    46aa:	6f 92       	push	r6
    46ac:	7f 92       	push	r7
    46ae:	8f 92       	push	r8
    46b0:	9f 92       	push	r9
    46b2:	af 92       	push	r10
    46b4:	bf 92       	push	r11
    46b6:	cf 92       	push	r12
    46b8:	df 92       	push	r13
    46ba:	ef 92       	push	r14
    46bc:	ff 92       	push	r15
    46be:	0f 93       	push	r16
    46c0:	1f 93       	push	r17
    46c2:	cf 93       	push	r28
    46c4:	df 93       	push	r29
    46c6:	cd b7       	in	r28, 0x3d	; 61
    46c8:	de b7       	in	r29, 0x3e	; 62
    46ca:	ca 1b       	sub	r28, r26
    46cc:	db 0b       	sbc	r29, r27
    46ce:	0f b6       	in	r0, 0x3f	; 63
    46d0:	f8 94       	cli
    46d2:	de bf       	out	0x3e, r29	; 62
    46d4:	0f be       	out	0x3f, r0	; 63
    46d6:	cd bf       	out	0x3d, r28	; 61
    46d8:	09 94       	ijmp

000046da <__epilogue_restores__>:
    46da:	2a 88       	ldd	r2, Y+18	; 0x12
    46dc:	39 88       	ldd	r3, Y+17	; 0x11
    46de:	48 88       	ldd	r4, Y+16	; 0x10
    46e0:	5f 84       	ldd	r5, Y+15	; 0x0f
    46e2:	6e 84       	ldd	r6, Y+14	; 0x0e
    46e4:	7d 84       	ldd	r7, Y+13	; 0x0d
    46e6:	8c 84       	ldd	r8, Y+12	; 0x0c
    46e8:	9b 84       	ldd	r9, Y+11	; 0x0b
    46ea:	aa 84       	ldd	r10, Y+10	; 0x0a
    46ec:	b9 84       	ldd	r11, Y+9	; 0x09
    46ee:	c8 84       	ldd	r12, Y+8	; 0x08
    46f0:	df 80       	ldd	r13, Y+7	; 0x07
    46f2:	ee 80       	ldd	r14, Y+6	; 0x06
    46f4:	fd 80       	ldd	r15, Y+5	; 0x05
    46f6:	0c 81       	ldd	r16, Y+4	; 0x04
    46f8:	1b 81       	ldd	r17, Y+3	; 0x03
    46fa:	aa 81       	ldd	r26, Y+2	; 0x02
    46fc:	b9 81       	ldd	r27, Y+1	; 0x01
    46fe:	ce 0f       	add	r28, r30
    4700:	d1 1d       	adc	r29, r1
    4702:	0f b6       	in	r0, 0x3f	; 63
    4704:	f8 94       	cli
    4706:	de bf       	out	0x3e, r29	; 62
    4708:	0f be       	out	0x3f, r0	; 63
    470a:	cd bf       	out	0x3d, r28	; 61
    470c:	ed 01       	movw	r28, r26
    470e:	08 95       	ret

00004710 <__do_global_dtors>:
    4710:	11 e0       	ldi	r17, 0x01	; 1
    4712:	c5 e6       	ldi	r28, 0x65	; 101
    4714:	d1 e0       	ldi	r29, 0x01	; 1
    4716:	04 c0       	rjmp	.+8      	; 0x4720 <__do_global_dtors+0x10>
    4718:	fe 01       	movw	r30, r28
    471a:	0e 94 3e 1c 	call	0x387c	; 0x387c <__tablejump2__>
    471e:	21 96       	adiw	r28, 0x01	; 1
    4720:	c6 36       	cpi	r28, 0x66	; 102
    4722:	d1 07       	cpc	r29, r17
    4724:	c9 f7       	brne	.-14     	; 0x4718 <__do_global_dtors+0x8>
    4726:	f8 94       	cli

00004728 <__stop_program>:
    4728:	ff cf       	rjmp	.-2      	; 0x4728 <__stop_program>
