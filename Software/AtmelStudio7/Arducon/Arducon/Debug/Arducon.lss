
Arducon.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000178  00800100  000036b8  0000376c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000036b8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000202  00800278  00800278  000038e4  2**0
                  ALLOC
  3 .eeprom       0000032f  00810000  00810000  000038e4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .comment      0000005c  00000000  00000000  00003c13  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003c70  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000003b8  00000000  00000000  00003cb0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00006f97  00000000  00000000  00004068  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000015b6  00000000  00000000  0000afff  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00003bfa  00000000  00000000  0000c5b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c64  00000000  00000000  000101b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000020f9  00000000  00000000  00010e14  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005c9f  00000000  00000000  00012f0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000418  00000000  00000000  00018bac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 50 02 	jmp	0x4a0	; 0x4a0 <__dtors_end>
       4:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
       8:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
       c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      10:	0c 94 02 13 	jmp	0x2604	; 0x2604 <__vector_4>
      14:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      18:	0c 94 ac 0a 	jmp	0x1558	; 0x1558 <__vector_6>
      1c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      20:	0c 94 cd 0d 	jmp	0x1b9a	; 0x1b9a <__vector_8>
      24:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      28:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      2c:	0c 94 14 10 	jmp	0x2028	; 0x2028 <__vector_11>
      30:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      34:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      38:	0c 94 db 0f 	jmp	0x1fb6	; 0x1fb6 <__vector_14>
      3c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      40:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      44:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      48:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__vector_18>
      4c:	0c 94 80 0d 	jmp	0x1b00	; 0x1b00 <__vector_19>
      50:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      54:	0c 94 da 0b 	jmp	0x17b4	; 0x17b4 <__vector_21>
      58:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      5c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      60:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      64:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__bad_interrupt>
      68:	a5 02       	muls	r26, r21
      6a:	b0 02       	muls	r27, r16
      6c:	bb 02       	muls	r27, r27
      6e:	c6 02       	muls	r28, r22
      70:	d1 02       	muls	r29, r17
      72:	dc 02       	muls	r29, r28
      74:	e7 02       	muls	r30, r23
      76:	f2 02       	muls	r31, r18
      78:	fd 02       	muls	r31, r29
      7a:	08 03       	fmul	r16, r16
      7c:	13 03       	mulsu	r17, r19
      7e:	6a 03       	fmul	r22, r18
      80:	6a 03       	fmul	r22, r18
      82:	1e 03       	fmul	r17, r22
      84:	29 03       	fmul	r18, r17
      86:	34 03       	mulsu	r19, r20
      88:	3f 03       	fmul	r19, r23
      8a:	4a 03       	fmul	r20, r18
      8c:	55 03       	mulsu	r21, r21
      8e:	60 03       	mulsu	r22, r16
      90:	75 03       	mulsu	r23, r21
      92:	79 03       	fmul	r23, r17
      94:	7d 03       	fmul	r23, r21
      96:	81 03       	fmuls	r16, r17
      98:	85 03       	fmuls	r16, r21
      9a:	89 03       	fmulsu	r16, r17
      9c:	8d 03       	fmulsu	r16, r21
      9e:	92 03       	fmuls	r17, r18
      a0:	96 03       	fmuls	r17, r22
      a2:	af 03       	fmulsu	r18, r23
      a4:	af 03       	fmulsu	r18, r23
      a6:	9a 03       	fmulsu	r17, r18
      a8:	9e 03       	fmulsu	r17, r22
      aa:	a3 03       	fmuls	r18, r19
      ac:	a7 03       	fmuls	r18, r23
      ae:	ab 03       	fmulsu	r18, r19
      b0:	c0 03       	fmuls	r20, r16
      b2:	c6 03       	fmuls	r20, r22
      b4:	cc 03       	fmulsu	r20, r20
      b6:	d2 03       	fmuls	r21, r18
      b8:	d8 03       	fmulsu	r21, r16
      ba:	de 03       	fmulsu	r21, r22
      bc:	e4 03       	fmuls	r22, r20
      be:	ea 03       	fmulsu	r22, r18
      c0:	f0 03       	fmuls	r23, r16
      c2:	f6 03       	fmuls	r23, r22
      c4:	fc 03       	fmulsu	r23, r20
      c6:	1f 04       	cpc	r1, r15
      c8:	1f 04       	cpc	r1, r15
      ca:	02 04       	cpc	r0, r2
      cc:	08 04       	cpc	r0, r8
      ce:	0e 04       	cpc	r0, r14
      d0:	14 04       	cpc	r1, r4
      d2:	1a 04       	cpc	r1, r10
      d4:	cc 10       	cpse	r12, r12
      d6:	cc 10       	cpse	r12, r12
      d8:	cc 10       	cpse	r12, r12
      da:	cc 10       	cpse	r12, r12
      dc:	cc 10       	cpse	r12, r12
      de:	4c 11       	cpse	r20, r12
      e0:	4c 11       	cpse	r20, r12
      e2:	ea 10       	cpse	r14, r10
      e4:	ea 10       	cpse	r14, r10
      e6:	ea 10       	cpse	r14, r10
      e8:	ea 10       	cpse	r14, r10
      ea:	ea 10       	cpse	r14, r10
      ec:	0c 11       	cpse	r16, r12
      ee:	0c 11       	cpse	r16, r12
      f0:	0c 11       	cpse	r16, r12
      f2:	0c 11       	cpse	r16, r12
      f4:	0c 11       	cpse	r16, r12
      f6:	4c 11       	cpse	r20, r12
      f8:	2c 11       	cpse	r18, r12
      fa:	54 14       	cp	r5, r4
      fc:	18 14       	cp	r1, r8
      fe:	44 14       	cp	r4, r4
     100:	5c 14       	cp	r5, r12
     102:	48 14       	cp	r4, r8
     104:	5c 14       	cp	r5, r12
     106:	28 14       	cp	r2, r8
     108:	14 14       	cp	r1, r4
     10a:	20 14       	cp	r2, r0
     10c:	24 14       	cp	r2, r4
     10e:	5c 14       	cp	r5, r12
     110:	38 14       	cp	r3, r8
     112:	0c 14       	cp	r0, r12
     114:	3c 14       	cp	r3, r12
     116:	08 14       	cp	r0, r8
     118:	1c 14       	cp	r1, r12
     11a:	e0 13       	cpse	r30, r16
     11c:	e4 13       	cpse	r30, r20
     11e:	e8 13       	cpse	r30, r24
     120:	ec 13       	cpse	r30, r28
     122:	f0 13       	cpse	r31, r16
     124:	f4 13       	cpse	r31, r20
     126:	f8 13       	cpse	r31, r24
     128:	fc 13       	cpse	r31, r28
     12a:	00 14       	cp	r0, r0
     12c:	04 14       	cp	r0, r4
     12e:	2c 14       	cp	r2, r12
     130:	30 14       	cp	r3, r0
     132:	58 14       	cp	r5, r8
     134:	34 14       	cp	r3, r4
     136:	5c 14       	cp	r5, r12
     138:	10 14       	cp	r1, r0
     13a:	4c 14       	cp	r4, r12
     13c:	60 14       	cp	r6, r0
     13e:	7c 13       	cpse	r23, r28
     140:	80 13       	cpse	r24, r16
     142:	84 13       	cpse	r24, r20
     144:	88 13       	cpse	r24, r24
     146:	8c 13       	cpse	r24, r28
     148:	90 13       	cpse	r25, r16
     14a:	94 13       	cpse	r25, r20
     14c:	98 13       	cpse	r25, r24
     14e:	9c 13       	cpse	r25, r28
     150:	a0 13       	cpse	r26, r16
     152:	a4 13       	cpse	r26, r20
     154:	a8 13       	cpse	r26, r24
     156:	ac 13       	cpse	r26, r28
     158:	b0 13       	cpse	r27, r16
     15a:	b4 13       	cpse	r27, r20
     15c:	b8 13       	cpse	r27, r24
     15e:	bc 13       	cpse	r27, r28
     160:	c0 13       	cpse	r28, r16
     162:	c4 13       	cpse	r28, r20
     164:	c8 13       	cpse	r28, r24
     166:	cc 13       	cpse	r28, r28
     168:	d0 13       	cpse	r29, r16
     16a:	d4 13       	cpse	r29, r20
     16c:	d8 13       	cpse	r29, r24
     16e:	dc 13       	cpse	r29, r28
     170:	5c 14       	cp	r5, r12
     172:	5c 14       	cp	r5, r12
     174:	5c 14       	cp	r5, r12
     176:	5c 14       	cp	r5, r12
     178:	40 14       	cp	r4, r0
     17a:	5c 14       	cp	r5, r12
     17c:	5c 14       	cp	r5, r12
     17e:	5c 14       	cp	r5, r12
     180:	5c 14       	cp	r5, r12
     182:	5c 14       	cp	r5, r12
     184:	5c 14       	cp	r5, r12
     186:	5c 14       	cp	r5, r12
     188:	5c 14       	cp	r5, r12
     18a:	5c 14       	cp	r5, r12
     18c:	5c 14       	cp	r5, r12
     18e:	5c 14       	cp	r5, r12
     190:	5c 14       	cp	r5, r12
     192:	5c 14       	cp	r5, r12
     194:	5c 14       	cp	r5, r12
     196:	5c 14       	cp	r5, r12
     198:	5c 14       	cp	r5, r12
     19a:	5c 14       	cp	r5, r12
     19c:	5c 14       	cp	r5, r12
     19e:	5c 14       	cp	r5, r12
     1a0:	5c 14       	cp	r5, r12
     1a2:	5c 14       	cp	r5, r12
     1a4:	5c 14       	cp	r5, r12
     1a6:	5c 14       	cp	r5, r12
     1a8:	5c 14       	cp	r5, r12
     1aa:	5c 14       	cp	r5, r12
     1ac:	5c 14       	cp	r5, r12
     1ae:	5c 14       	cp	r5, r12
     1b0:	5c 14       	cp	r5, r12
     1b2:	50 14       	cp	r5, r0
     1b4:	05 a8       	ldd	r0, Z+53	; 0x35
     1b6:	4c cd       	rjmp	.-1384   	; 0xfffffc50 <__eeprom_end+0xff7ef921>
     1b8:	b2 d4       	rcall	.+2404   	; 0xb1e <_ZN13EepromManager17sendPROGMEMStringEPKc+0x46>
     1ba:	4e b9       	out	0x0e, r20	; 14
     1bc:	38 36       	cpi	r19, 0x68	; 104
     1be:	a9 02       	muls	r26, r25
     1c0:	0c 50       	subi	r16, 0x0C	; 12
     1c2:	b9 91       	ld	r27, Y+
     1c4:	86 88       	ldd	r8, Z+22	; 0x16
     1c6:	08 3c       	cpi	r16, 0xC8	; 200
     1c8:	a6 aa       	std	Z+54, r10	; 0x36
     1ca:	aa 2a       	or	r10, r26
     1cc:	be 00       	.word	0x00be	; ????
     1ce:	00 00       	nop
     1d0:	80 3f       	cpi	r24, 0xF0	; 240

000001d2 <__trampolines_end>:
     1d2:	53 75       	andi	r21, 0x53	; 83
     1d4:	63 63       	ori	r22, 0x33	; 51
     1d6:	65 73       	andi	r22, 0x35	; 53
     1d8:	73 21       	and	r23, r3
     1da:	20 45       	sbci	r18, 0x50	; 80
     1dc:	45 50       	subi	r20, 0x05	; 5
     1de:	52 4f       	sbci	r21, 0xF2	; 242
     1e0:	4d 20       	and	r4, r13
     1e2:	68 61       	ori	r22, 0x18	; 24
     1e4:	73 20       	and	r7, r3
     1e6:	62 65       	ori	r22, 0x52	; 82
     1e8:	65 6e       	ori	r22, 0xE5	; 229
     1ea:	20 70       	andi	r18, 0x00	; 0
     1ec:	72 6f       	ori	r23, 0xF2	; 242
     1ee:	67 72       	andi	r22, 0x27	; 39
     1f0:	61 6d       	ori	r22, 0xD1	; 209
     1f2:	6d 65       	ori	r22, 0x5D	; 93
     1f4:	64 2e       	mov	r6, r20
     1f6:	20 50       	subi	r18, 0x00	; 0
     1f8:	72 6f       	ori	r23, 0xF2	; 242
     1fa:	67 72       	andi	r22, 0x27	; 39
     1fc:	61 6d       	ori	r22, 0xD1	; 209
     1fe:	20 69       	ori	r18, 0x90	; 144
     200:	73 20       	and	r7, r3
     202:	64 6f       	ori	r22, 0xF4	; 244
     204:	6e 65       	ori	r22, 0x5E	; 94
     206:	2e 0a       	sbc	r2, r30
     208:	52 65       	ori	r21, 0x52	; 82
     20a:	66 6c       	ori	r22, 0xC6	; 198
     20c:	61 73       	andi	r22, 0x31	; 49
     20e:	68 20       	and	r6, r8
     210:	77 69       	ori	r23, 0x97	; 151
     212:	74 68       	ori	r23, 0x84	; 132
     214:	20 23       	and	r18, r16
     216:	64 65       	ori	r22, 0x54	; 84
     218:	66 69       	ori	r22, 0x96	; 150
     21a:	6e 65       	ori	r22, 0x5E	; 94
     21c:	20 49       	sbci	r18, 0x90	; 144
     21e:	4e 49       	sbci	r20, 0x9E	; 158
     220:	54 5f       	subi	r21, 0xF4	; 244
     222:	45 45       	sbci	r20, 0x55	; 85
     224:	50 52       	subi	r21, 0x20	; 32
     226:	4f 4d       	sbci	r20, 0xDF	; 223
     228:	5f 4f       	sbci	r21, 0xFF	; 255
     22a:	4e 4c       	sbci	r20, 0xCE	; 206
     22c:	59 20       	and	r5, r9
     22e:	46 41       	sbci	r20, 0x16	; 22
     230:	4c 53       	subi	r20, 0x3C	; 60
     232:	45 0a       	sbc	r4, r21
	...

00000235 <_ZL21TEXT_ERR_TIME_IN_PAST>:
     235:	45 72 72 3a 20 54 69 6d 65 20 69 6e 20 70 61 73     Err: Time in pas
     245:	74 21 0a 00                                         t!..

00000249 <_ZL21TEXT_ERR_INVALID_TIME>:
     249:	45 72 72 3a 20 49 6e 76 61 6c 69 64 20 74 69 6d     Err: Invalid tim
     259:	65 21 0a 00                                         e!..

0000025d <_ZL22TEXT_ERR_START_IN_PAST>:
     25d:	45 72 72 3a 20 53 74 61 72 74 20 69 6e 20 70 61     Err: Start in pa
     26d:	73 74 21 0a 00                                      st!..

00000272 <_ZL23TEXT_ERR_FINISH_IN_PAST>:
     272:	45 72 72 3a 20 46 69 6e 69 73 68 20 69 6e 20 70     Err: Finish in p
     282:	61 73 74 21 0a 00                                   ast!..

00000288 <_ZL28TEXT_ERR_FINISH_BEFORE_START>:
     288:	45 72 72 3a 20 46 69 6e 69 73 68 20 62 65 66 6f     Err: Finish befo
     298:	72 65 20 73 74 61 72 74 21 0a 00                    re start!..

000002a3 <_ZL11TEXT_SET_ID>:
     2a3:	49 44 20 5b 22 63 61 6c 6c 73 69 67 6e 22 5d 20     ID ["callsign"] 
     2b3:	3c 2d 20 53 65 74 20 63 61 6c 6c 73 69 67 6e 0a     <- Set callsign.
	...

000002c4 <_ZL15TEXT_SET_FINISH>:
     2c4:	43 4c 4b 20 46 20 59 59 4d 4d 44 44 68 68 6d 6d     CLK F YYMMDDhhmm
     2d4:	73 73 20 3c 2d 20 53 65 74 20 66 69 6e 69 73 68     ss <- Set finish
     2e4:	20 74 69 6d 65 0a 00                                 time..

000002eb <_ZL14TEXT_SET_START>:
     2eb:	43 4c 4b 20 53 20 59 59 4d 4d 44 44 68 68 6d 6d     CLK S YYMMDDhhmm
     2fb:	73 73 20 3c 2d 20 53 65 74 20 73 74 61 72 74 20     ss <- Set start 
     30b:	74 69 6d 65 0a 00                                   time..

00000311 <_ZL13TEXT_SET_TIME>:
     311:	43 4c 4b 20 54 20 59 59 4d 4d 44 44 68 68 6d 6d     CLK T YYMMDDhhmm
     321:	73 73 20 3c 2d 20 53 65 74 20 63 75 72 72 65 6e     ss <- Set curren
     331:	74 20 74 69 6d 65 0a 00                             t time..

00000339 <_ZL9HELP_TEXT>:
     339:	0a 43 6f 6d 6d 61 6e 64 73 3a 0a 20 20 43 4c 4b     .Commands:.  CLK
     349:	20 5b 54 7c 53 7c 46 7c 4f 20 5b 22 59 59 4d 4d      [T|S|F|O ["YYMM
     359:	44 44 68 68 6d 6d 73 73 22 5d 5d 20 2d 20 52 65     DDhhmmss"]] - Re
     369:	61 64 2f 73 65 74 20 74 69 6d 65 2f 73 74 61 72     ad/set time/star
     379:	74 2f 66 69 6e 69 73 68 2f 6f 66 66 73 65 74 0a     t/finish/offset.
     389:	20 20 46 4f 58 20 5b 66 6f 78 5d 2d 20 53 65 74       FOX [fox]- Set
     399:	20 66 6f 78 20 72 6f 6c 65 0a 20 20 49 44 20 5b      fox role.  ID [
     3a9:	63 61 6c 6c 73 69 67 6e 5d 20 2d 20 20 53 65 74     callsign] -  Set
     3b9:	20 63 61 6c 6c 73 69 67 6e 0a 20 20 53 59 4e 20      callsign.  SYN 
     3c9:	30 7c 31 7c 32 20 2d 20 53 79 6e 63 68 72 6f 6e     0|1|2 - Synchron
     3d9:	69 7a 65 0a 20 20 50 57 44 20 5b 70 77 64 5d 20     ize.  PWD [pwd] 
     3e9:	2d 20 53 65 74 20 44 54 4d 46 20 70 61 73 73 77     - Set DTMF passw
     3f9:	6f 72 64 0a 20 20 41 4d 20 5b 31 2d 36 5d 20 2d     ord.  AM [1-6] -
     409:	20 53 65 74 20 41 4d 20 74 6f 6e 65 20 66 72 65      Set AM tone fre
     419:	71 75 65 6e 63 79 0a 20 20 55 54 49 20 2d 20 52     quency.  UTI - R
     429:	65 61 64 20 76 6f 6c 74 73 20 26 20 74 65 6d 70     ead volts & temp
     439:	0a 20 20 53 45 54 20 53 7c 50 20 5b 73 65 74 74     .  SET S|P [sett
     449:	69 6e 67 5d 20 2d 20 53 65 74 20 49 44 20 63 6f     ing] - Set ID co
     459:	64 65 20 73 70 65 65 64 20 6f 72 20 50 54 54 20     de speed or PTT 
     469:	72 65 73 65 74 00                                   reset.

0000046f <_ZL17PRODUCT_NAME_LONG>:
     46f:	2a 2a 2a 20 41 72 64 75 63 6f 6e 20 46 6f 78 20     *** Arducon Fox 
     47f:	43 6f 6e 74 72 6f 6c 6c 65 72 20 56 65 72 2e 20     Controller Ver. 
     48f:	53 32 2e 35 35 58 20 2a 2a 2a 0a 00 00              S2.55X ***...

0000049c <__ctors_start>:
     49c:	64 13       	cpse	r22, r20

0000049e <__ctors_end>:
     49e:	69 13       	cpse	r22, r25

000004a0 <__dtors_end>:
     4a0:	11 24       	eor	r1, r1
     4a2:	1f be       	out	0x3f, r1	; 63
     4a4:	cf ef       	ldi	r28, 0xFF	; 255
     4a6:	d8 e0       	ldi	r29, 0x08	; 8
     4a8:	de bf       	out	0x3e, r29	; 62
     4aa:	cd bf       	out	0x3d, r28	; 61

000004ac <__do_copy_data>:
     4ac:	12 e0       	ldi	r17, 0x02	; 2
     4ae:	a0 e0       	ldi	r26, 0x00	; 0
     4b0:	b1 e0       	ldi	r27, 0x01	; 1
     4b2:	e8 eb       	ldi	r30, 0xB8	; 184
     4b4:	f6 e3       	ldi	r31, 0x36	; 54
     4b6:	02 c0       	rjmp	.+4      	; 0x4bc <__do_copy_data+0x10>
     4b8:	05 90       	lpm	r0, Z+
     4ba:	0d 92       	st	X+, r0
     4bc:	a8 37       	cpi	r26, 0x78	; 120
     4be:	b1 07       	cpc	r27, r17
     4c0:	d9 f7       	brne	.-10     	; 0x4b8 <__do_copy_data+0xc>

000004c2 <__do_clear_bss>:
     4c2:	24 e0       	ldi	r18, 0x04	; 4
     4c4:	a8 e7       	ldi	r26, 0x78	; 120
     4c6:	b2 e0       	ldi	r27, 0x02	; 2
     4c8:	01 c0       	rjmp	.+2      	; 0x4cc <.do_clear_bss_start>

000004ca <.do_clear_bss_loop>:
     4ca:	1d 92       	st	X+, r1

000004cc <.do_clear_bss_start>:
     4cc:	aa 37       	cpi	r26, 0x7A	; 122
     4ce:	b2 07       	cpc	r27, r18
     4d0:	e1 f7       	brne	.-8      	; 0x4ca <.do_clear_bss_loop>

000004d2 <__do_global_ctors>:
     4d2:	12 e0       	ldi	r17, 0x02	; 2
     4d4:	cf e4       	ldi	r28, 0x4F	; 79
     4d6:	d2 e0       	ldi	r29, 0x02	; 2
     4d8:	04 c0       	rjmp	.+8      	; 0x4e2 <__do_global_ctors+0x10>
     4da:	21 97       	sbiw	r28, 0x01	; 1
     4dc:	fe 01       	movw	r30, r28
     4de:	0e 94 04 18 	call	0x3008	; 0x3008 <__tablejump2__>
     4e2:	ce 34       	cpi	r28, 0x4E	; 78
     4e4:	d1 07       	cpc	r29, r17
     4e6:	c9 f7       	brne	.-14     	; 0x4da <__do_global_ctors+0x8>
     4e8:	0e 94 0c 0b 	call	0x1618	; 0x1618 <main>
     4ec:	0c 94 4f 1b 	jmp	0x369e	; 0x369e <__do_global_dtors>

000004f0 <__bad_interrupt>:
     4f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000004f4 <month_length>:
     4f4:	62 30       	cpi	r22, 0x02	; 2
     4f6:	21 f4       	brne	.+8      	; 0x500 <month_length+0xc>
     4f8:	0e 94 87 02 	call	0x50e	; 0x50e <is_leap_year>
     4fc:	84 5e       	subi	r24, 0xE4	; 228
     4fe:	08 95       	ret
     500:	68 30       	cpi	r22, 0x08	; 8
     502:	08 f0       	brcs	.+2      	; 0x506 <month_length+0x12>
     504:	6f 5f       	subi	r22, 0xFF	; 255
     506:	61 70       	andi	r22, 0x01	; 1
     508:	8e e1       	ldi	r24, 0x1E	; 30
     50a:	86 0f       	add	r24, r22
     50c:	08 95       	ret

0000050e <is_leap_year>:
     50e:	9c 01       	movw	r18, r24
     510:	23 70       	andi	r18, 0x03	; 3
     512:	33 27       	eor	r19, r19
     514:	23 2b       	or	r18, r19
     516:	59 f4       	brne	.+22     	; 0x52e <is_leap_year+0x20>
     518:	64 e6       	ldi	r22, 0x64	; 100
     51a:	70 e0       	ldi	r23, 0x00	; 0
     51c:	0e 94 af 17 	call	0x2f5e	; 0x2f5e <__divmodhi4>
     520:	89 2b       	or	r24, r25
     522:	39 f4       	brne	.+14     	; 0x532 <is_leap_year+0x24>
     524:	63 70       	andi	r22, 0x03	; 3
     526:	77 27       	eor	r23, r23
     528:	81 e0       	ldi	r24, 0x01	; 1
     52a:	67 2b       	or	r22, r23
     52c:	19 f0       	breq	.+6      	; 0x534 <is_leap_year+0x26>
     52e:	80 e0       	ldi	r24, 0x00	; 0
     530:	08 95       	ret
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	08 95       	ret

00000536 <pinMode>:
#include "ardooweeno.h"
#include <util/delay.h>

void pinMode(uint8_t pin, uint8_t mode)
{
	switch(pin)
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	84 31       	cpi	r24, 0x14	; 20
     53a:	91 05       	cpc	r25, r1
     53c:	08 f0       	brcs	.+2      	; 0x540 <pinMode+0xa>
     53e:	ca c0       	rjmp	.+404    	; 0x6d4 <pinMode+0x19e>
     540:	fc 01       	movw	r30, r24
     542:	ec 5c       	subi	r30, 0xCC	; 204
     544:	ff 4f       	sbci	r31, 0xFF	; 255
     546:	0c 94 04 18 	jmp	0x3008	; 0x3008 <__tablejump2__>
	{
		case PIN_RXD:
		{
			if(mode == OUTPUT)
     54a:	61 30       	cpi	r22, 0x01	; 1
     54c:	11 f4       	brne	.+4      	; 0x552 <pinMode+0x1c>
			{
				DDRD  |= (1 << PORTD0);
     54e:	50 9a       	sbi	0x0a, 0	; 10
     550:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD0);
     552:	50 98       	cbi	0x0a, 0	; 10

				if(mode == INPUT_PULLUP)
     554:	63 30       	cpi	r22, 0x03	; 3
     556:	11 f4       	brne	.+4      	; 0x55c <pinMode+0x26>
				{
					PORTD  |= (1 << PORTD0);
     558:	58 9a       	sbi	0x0b, 0	; 11
     55a:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD0);
     55c:	58 98       	cbi	0x0b, 0	; 11
     55e:	08 95       	ret
		}
		break;
		
		case PIN_TXD:
		{
			if(mode == OUTPUT)
     560:	61 30       	cpi	r22, 0x01	; 1
     562:	11 f4       	brne	.+4      	; 0x568 <pinMode+0x32>
			{
				DDRD  |= (1 << PORTD1);
     564:	51 9a       	sbi	0x0a, 1	; 10
     566:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD1);
     568:	51 98       	cbi	0x0a, 1	; 10

				if(mode == INPUT_PULLUP)
     56a:	63 30       	cpi	r22, 0x03	; 3
     56c:	11 f4       	brne	.+4      	; 0x572 <pinMode+0x3c>
				{
					PORTD  |= (1 << PORTD1);
     56e:	59 9a       	sbi	0x0b, 1	; 11
     570:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD1);
     572:	59 98       	cbi	0x0b, 1	; 11
     574:	08 95       	ret
		}
		break;
		
		case D2:
		{
			if(mode == OUTPUT)
     576:	61 30       	cpi	r22, 0x01	; 1
     578:	11 f4       	brne	.+4      	; 0x57e <pinMode+0x48>
			{
				DDRD  |= (1 << PORTD2);
     57a:	52 9a       	sbi	0x0a, 2	; 10
     57c:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD2);
     57e:	52 98       	cbi	0x0a, 2	; 10

				if(mode == INPUT_PULLUP)
     580:	63 30       	cpi	r22, 0x03	; 3
     582:	11 f4       	brne	.+4      	; 0x588 <pinMode+0x52>
				{
					PORTD  |= (1 << PORTD2);
     584:	5a 9a       	sbi	0x0b, 2	; 11
     586:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD2);
     588:	5a 98       	cbi	0x0b, 2	; 11
     58a:	08 95       	ret
		}
		break;

		case D3:
		{
			if(mode == OUTPUT)
     58c:	61 30       	cpi	r22, 0x01	; 1
     58e:	11 f4       	brne	.+4      	; 0x594 <pinMode+0x5e>
			{
				DDRD  |= (1 << PORTD3);
     590:	53 9a       	sbi	0x0a, 3	; 10
     592:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD3);
     594:	53 98       	cbi	0x0a, 3	; 10

				if(mode == INPUT_PULLUP)
     596:	63 30       	cpi	r22, 0x03	; 3
     598:	11 f4       	brne	.+4      	; 0x59e <pinMode+0x68>
				{
					PORTD  |= (1 << PORTD3);
     59a:	5b 9a       	sbi	0x0b, 3	; 11
     59c:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD3);
     59e:	5b 98       	cbi	0x0b, 3	; 11
     5a0:	08 95       	ret
		}
		break;

		case D4:
		{
			if(mode == OUTPUT)
     5a2:	61 30       	cpi	r22, 0x01	; 1
     5a4:	11 f4       	brne	.+4      	; 0x5aa <pinMode+0x74>
			{
				DDRD  |= (1 << PORTD4);
     5a6:	54 9a       	sbi	0x0a, 4	; 10
     5a8:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD4);
     5aa:	54 98       	cbi	0x0a, 4	; 10

				if(mode == INPUT_PULLUP)
     5ac:	63 30       	cpi	r22, 0x03	; 3
     5ae:	11 f4       	brne	.+4      	; 0x5b4 <pinMode+0x7e>
				{
					PORTD  |= (1 << PORTD4);
     5b0:	5c 9a       	sbi	0x0b, 4	; 11
     5b2:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD4);
     5b4:	5c 98       	cbi	0x0b, 4	; 11
     5b6:	08 95       	ret
		}
		break;

		case D5:
		{
			if(mode == OUTPUT)
     5b8:	61 30       	cpi	r22, 0x01	; 1
     5ba:	11 f4       	brne	.+4      	; 0x5c0 <pinMode+0x8a>
			{
				DDRD  |= (1 << PORTD5);
     5bc:	55 9a       	sbi	0x0a, 5	; 10
     5be:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD5);
     5c0:	55 98       	cbi	0x0a, 5	; 10

				if(mode == INPUT_PULLUP)
     5c2:	63 30       	cpi	r22, 0x03	; 3
     5c4:	11 f4       	brne	.+4      	; 0x5ca <pinMode+0x94>
				{
					PORTD  |= (1 << PORTD5);
     5c6:	5d 9a       	sbi	0x0b, 5	; 11
     5c8:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD5);
     5ca:	5d 98       	cbi	0x0b, 5	; 11
     5cc:	08 95       	ret
		}
		break;

		case D6:
		{
			if(mode == OUTPUT)
     5ce:	61 30       	cpi	r22, 0x01	; 1
     5d0:	11 f4       	brne	.+4      	; 0x5d6 <pinMode+0xa0>
			{
				DDRD  |= (1 << PORTD6);
     5d2:	56 9a       	sbi	0x0a, 6	; 10
     5d4:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD6);
     5d6:	56 98       	cbi	0x0a, 6	; 10

				if(mode == INPUT_PULLUP)
     5d8:	63 30       	cpi	r22, 0x03	; 3
     5da:	11 f4       	brne	.+4      	; 0x5e0 <pinMode+0xaa>
				{
					PORTD  |= (1 << PORTD6);
     5dc:	5e 9a       	sbi	0x0b, 6	; 11
     5de:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD6);
     5e0:	5e 98       	cbi	0x0b, 6	; 11
     5e2:	08 95       	ret
		}
		break;

		case D7:
		{
			if(mode == OUTPUT)
     5e4:	61 30       	cpi	r22, 0x01	; 1
     5e6:	11 f4       	brne	.+4      	; 0x5ec <pinMode+0xb6>
			{
				DDRD  |= (1 << PORTD7);
     5e8:	57 9a       	sbi	0x0a, 7	; 10
     5ea:	08 95       	ret
			}
			else
			{
				DDRD  &= ~(1 << PORTD7);
     5ec:	57 98       	cbi	0x0a, 7	; 10

				if(mode == INPUT_PULLUP)
     5ee:	63 30       	cpi	r22, 0x03	; 3
     5f0:	11 f4       	brne	.+4      	; 0x5f6 <pinMode+0xc0>
				{
					PORTD  |= (1 << PORTD7);
     5f2:	5f 9a       	sbi	0x0b, 7	; 11
     5f4:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTD7);
     5f6:	5f 98       	cbi	0x0b, 7	; 11
     5f8:	08 95       	ret
		}
		break;

		case D8:
		{
			if(mode == OUTPUT)
     5fa:	61 30       	cpi	r22, 0x01	; 1
     5fc:	11 f4       	brne	.+4      	; 0x602 <pinMode+0xcc>
			{
				DDRB  |= (1 << PORTB0);
     5fe:	20 9a       	sbi	0x04, 0	; 4
     600:	08 95       	ret
			}
			else
			{
				DDRB  &= ~(1 << PORTB0);
     602:	20 98       	cbi	0x04, 0	; 4

				if(mode == INPUT_PULLUP)
     604:	63 30       	cpi	r22, 0x03	; 3
     606:	11 f4       	brne	.+4      	; 0x60c <pinMode+0xd6>
				{
					PORTB  |= (1 << PORTB0);
     608:	28 9a       	sbi	0x05, 0	; 5
     60a:	08 95       	ret
				}
				else
				{
					PORTB &= ~(1 << PORTB0);
     60c:	28 98       	cbi	0x05, 0	; 5
     60e:	08 95       	ret
		}
		break;

		case D9:
		{
			if(mode == OUTPUT)
     610:	61 30       	cpi	r22, 0x01	; 1
     612:	11 f4       	brne	.+4      	; 0x618 <pinMode+0xe2>
			{
				DDRB  |= (1 << PORTB1);
     614:	21 9a       	sbi	0x04, 1	; 4
     616:	08 95       	ret
			}
			else
			{
				DDRB  &= ~(1 << PORTB1);
     618:	21 98       	cbi	0x04, 1	; 4

				if(mode == INPUT_PULLUP)
     61a:	63 30       	cpi	r22, 0x03	; 3
     61c:	11 f4       	brne	.+4      	; 0x622 <pinMode+0xec>
				{
					PORTB  |= (1 << PORTB1);
     61e:	29 9a       	sbi	0x05, 1	; 5
     620:	08 95       	ret
				}
				else
				{
					PORTB &= ~(1 << PORTB1);
     622:	29 98       	cbi	0x05, 1	; 5
     624:	08 95       	ret
		}
		break;

		case D10:
		{
			if(mode == OUTPUT)
     626:	61 30       	cpi	r22, 0x01	; 1
     628:	11 f4       	brne	.+4      	; 0x62e <pinMode+0xf8>
			{
				DDRB  |= (1 << PORTB2);
     62a:	22 9a       	sbi	0x04, 2	; 4
     62c:	08 95       	ret
			}
			else
			{
				DDRB  &= ~(1 << PORTB2);
     62e:	22 98       	cbi	0x04, 2	; 4

				if(mode == INPUT_PULLUP)
     630:	63 30       	cpi	r22, 0x03	; 3
     632:	11 f4       	brne	.+4      	; 0x638 <pinMode+0x102>
				{
					PORTB  |= (1 << PORTB2);
     634:	2a 9a       	sbi	0x05, 2	; 5
     636:	08 95       	ret
				}
				else
				{
					PORTB &= ~(1 << PORTB2);
     638:	2a 98       	cbi	0x05, 2	; 5
     63a:	08 95       	ret
		}
		break;

		case D13:
		{
			if(mode == OUTPUT)
     63c:	61 30       	cpi	r22, 0x01	; 1
     63e:	11 f4       	brne	.+4      	; 0x644 <pinMode+0x10e>
			{
				DDRB  |= (1 << PORTB5);
     640:	25 9a       	sbi	0x04, 5	; 4
     642:	08 95       	ret
			}
			else
			{
				DDRB  &= ~(1 << PORTB5);
     644:	25 98       	cbi	0x04, 5	; 4

				if(mode == INPUT_PULLUP)
     646:	63 30       	cpi	r22, 0x03	; 3
     648:	11 f4       	brne	.+4      	; 0x64e <pinMode+0x118>
				{
					PORTD  |= (1 << PORTB5);
     64a:	5d 9a       	sbi	0x0b, 5	; 11
     64c:	08 95       	ret
				}
				else
				{
					PORTD &= ~(1 << PORTB5);
     64e:	5d 98       	cbi	0x0b, 5	; 11
     650:	08 95       	ret
		}
		break;

		case A0:
		{
			if(mode == OUTPUT)
     652:	61 30       	cpi	r22, 0x01	; 1
     654:	11 f4       	brne	.+4      	; 0x65a <pinMode+0x124>
			{
				DDRC  |= (1 << PORTC0);
     656:	38 9a       	sbi	0x07, 0	; 7
     658:	08 95       	ret
			}
			else
			{
				DDRC  &= ~(1 << PORTC0);
     65a:	38 98       	cbi	0x07, 0	; 7

				if(mode == INPUT_PULLUP)
     65c:	63 30       	cpi	r22, 0x03	; 3
     65e:	11 f4       	brne	.+4      	; 0x664 <pinMode+0x12e>
				{
					PORTC  |= (1 << PORTC0);
     660:	40 9a       	sbi	0x08, 0	; 8
     662:	08 95       	ret
				}
				else
				{
					PORTC &= ~(1 << PORTC0);
     664:	40 98       	cbi	0x08, 0	; 8
     666:	08 95       	ret
		}
		break;

		case A1:
		{
			if(mode == OUTPUT)
     668:	61 30       	cpi	r22, 0x01	; 1
     66a:	11 f4       	brne	.+4      	; 0x670 <pinMode+0x13a>
			{
				DDRC  |= (1 << PORTC1);
     66c:	39 9a       	sbi	0x07, 1	; 7
     66e:	08 95       	ret
			}
			else
			{
				DDRC  &= ~(1 << PORTC1);
     670:	39 98       	cbi	0x07, 1	; 7

				if(mode == INPUT_PULLUP)
     672:	63 30       	cpi	r22, 0x03	; 3
     674:	11 f4       	brne	.+4      	; 0x67a <pinMode+0x144>
				{
					PORTC  |= (1 << PORTC1);
     676:	41 9a       	sbi	0x08, 1	; 8
     678:	08 95       	ret
				}
				else
				{
					PORTC &= ~(1 << PORTC1);
     67a:	41 98       	cbi	0x08, 1	; 8
     67c:	08 95       	ret
		}
		break;

		case A2:
		{
			if(mode == OUTPUT)
     67e:	61 30       	cpi	r22, 0x01	; 1
     680:	11 f4       	brne	.+4      	; 0x686 <pinMode+0x150>
			{
				DDRC  |= (1 << PORTC2);
     682:	3a 9a       	sbi	0x07, 2	; 7
     684:	08 95       	ret
			}
			else
			{
				DDRC  &= ~(1 << PORTC2);
     686:	3a 98       	cbi	0x07, 2	; 7

				if(mode == INPUT_PULLUP)
     688:	63 30       	cpi	r22, 0x03	; 3
     68a:	11 f4       	brne	.+4      	; 0x690 <pinMode+0x15a>
				{
					PORTC  |= (1 << PORTC2);
     68c:	42 9a       	sbi	0x08, 2	; 8
     68e:	08 95       	ret
				}
				else
				{
					PORTC &= ~(1 << PORTC2);
     690:	42 98       	cbi	0x08, 2	; 8
     692:	08 95       	ret
		}
		break;

		case A3:
		{
			if(mode == OUTPUT)
     694:	61 30       	cpi	r22, 0x01	; 1
     696:	11 f4       	brne	.+4      	; 0x69c <pinMode+0x166>
			{
				DDRC  |= (1 << PORTC3);
     698:	3b 9a       	sbi	0x07, 3	; 7
     69a:	08 95       	ret
			}
			else
			{
				DDRC  &= ~(1 << PORTC3);
     69c:	3b 98       	cbi	0x07, 3	; 7

				if(mode == INPUT_PULLUP)
     69e:	63 30       	cpi	r22, 0x03	; 3
     6a0:	11 f4       	brne	.+4      	; 0x6a6 <pinMode+0x170>
				{
					PORTC  |= (1 << PORTC3);
     6a2:	43 9a       	sbi	0x08, 3	; 8
     6a4:	08 95       	ret
				}
				else
				{
					PORTC &= ~(1 << PORTC3);
     6a6:	43 98       	cbi	0x08, 3	; 8
     6a8:	08 95       	ret
		}
		break;

		case A4:
		{
			if(mode == OUTPUT)
     6aa:	61 30       	cpi	r22, 0x01	; 1
     6ac:	11 f4       	brne	.+4      	; 0x6b2 <pinMode+0x17c>
			{
				DDRC  |= (1 << PORTC4);
     6ae:	3c 9a       	sbi	0x07, 4	; 7
     6b0:	08 95       	ret
			}
			else
			{
				DDRC  &= ~(1 << PORTC4);
     6b2:	3c 98       	cbi	0x07, 4	; 7

				if(mode == INPUT_PULLUP)
     6b4:	63 30       	cpi	r22, 0x03	; 3
     6b6:	11 f4       	brne	.+4      	; 0x6bc <pinMode+0x186>
				{
					PORTC  |= (1 << PORTC4);
     6b8:	44 9a       	sbi	0x08, 4	; 8
     6ba:	08 95       	ret
				}
				else
				{
					PORTC &= ~(1 << PORTC4);
     6bc:	44 98       	cbi	0x08, 4	; 8
     6be:	08 95       	ret
		}
		break;

		case A5:
		{
			if(mode == OUTPUT)
     6c0:	61 30       	cpi	r22, 0x01	; 1
     6c2:	11 f4       	brne	.+4      	; 0x6c8 <pinMode+0x192>
			{
				DDRC  |= (1 << PORTC5);
     6c4:	3d 9a       	sbi	0x07, 5	; 7
     6c6:	08 95       	ret
			}
			else
			{
				DDRC  &= ~(1 << PORTC5);
     6c8:	3d 98       	cbi	0x07, 5	; 7

				if(mode == INPUT_PULLUP)
     6ca:	63 30       	cpi	r22, 0x03	; 3
     6cc:	11 f4       	brne	.+4      	; 0x6d2 <pinMode+0x19c>
				{
					PORTC  |= (1 << PORTC5);
     6ce:	45 9a       	sbi	0x08, 5	; 8
     6d0:	08 95       	ret
				}
				else
				{
					PORTC &= ~(1 << PORTC5);
     6d2:	45 98       	cbi	0x08, 5	; 8
     6d4:	08 95       	ret

000006d6 <digitalRead>:

BOOL digitalRead(uint8_t pin)
{
	int result = 0;

	switch(pin)
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	fc 01       	movw	r30, r24
     6da:	32 97       	sbiw	r30, 0x02	; 2
     6dc:	e0 31       	cpi	r30, 0x10	; 16
     6de:	f1 05       	cpc	r31, r1
     6e0:	f0 f5       	brcc	.+124    	; 0x75e <digitalRead+0x88>
     6e2:	e8 5b       	subi	r30, 0xB8	; 184
     6e4:	ff 4f       	sbci	r31, 0xFF	; 255
     6e6:	0c 94 04 18 	jmp	0x3008	; 0x3008 <__tablejump2__>
	{
		case D2:
		{
			result = PIND & (1 << PORTD2);
     6ea:	29 b1       	in	r18, 0x09	; 9
     6ec:	24 70       	andi	r18, 0x04	; 4
     6ee:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     6f0:	38 c0       	rjmp	.+112    	; 0x762 <digitalRead+0x8c>

		case D3:
		{
			result = PIND & (1 << PORTD3);
     6f2:	29 b1       	in	r18, 0x09	; 9
     6f4:	28 70       	andi	r18, 0x08	; 8
     6f6:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     6f8:	34 c0       	rjmp	.+104    	; 0x762 <digitalRead+0x8c>

		case D4:
		{
			result = PIND & (1 << PORTD4);
     6fa:	29 b1       	in	r18, 0x09	; 9
     6fc:	20 71       	andi	r18, 0x10	; 16
     6fe:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     700:	30 c0       	rjmp	.+96     	; 0x762 <digitalRead+0x8c>

		case D5:
		{
			result = PIND & (1 << PORTD5);
     702:	29 b1       	in	r18, 0x09	; 9
     704:	20 72       	andi	r18, 0x20	; 32
     706:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     708:	2c c0       	rjmp	.+88     	; 0x762 <digitalRead+0x8c>

		case D6:
		{
			result = PIND & (1 << PORTD6);
     70a:	29 b1       	in	r18, 0x09	; 9
     70c:	20 74       	andi	r18, 0x40	; 64
     70e:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     710:	28 c0       	rjmp	.+80     	; 0x762 <digitalRead+0x8c>

		case D7:
		{
			result = PIND & (1 << PORTD7);
     712:	29 b1       	in	r18, 0x09	; 9
     714:	20 78       	andi	r18, 0x80	; 128
     716:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     718:	24 c0       	rjmp	.+72     	; 0x762 <digitalRead+0x8c>

		case D8:
		{
			result = PINB & (1 << PORTB0);
     71a:	83 b1       	in	r24, 0x03	; 3
     71c:	28 2f       	mov	r18, r24
     71e:	21 70       	andi	r18, 0x01	; 1
     720:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     722:	1f c0       	rjmp	.+62     	; 0x762 <digitalRead+0x8c>

		case D9:
		{
			result = PINB & (1 << PORTB1);
     724:	23 b1       	in	r18, 0x03	; 3
     726:	22 70       	andi	r18, 0x02	; 2
     728:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     72a:	1b c0       	rjmp	.+54     	; 0x762 <digitalRead+0x8c>

		case D10:
		{
			result = PINB & (1 << PORTB2);
     72c:	23 b1       	in	r18, 0x03	; 3
     72e:	24 70       	andi	r18, 0x04	; 4
     730:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     732:	17 c0       	rjmp	.+46     	; 0x762 <digitalRead+0x8c>

		case D13:
		{
			result = PINB & (1 << PORTB5);
     734:	23 b1       	in	r18, 0x03	; 3
     736:	20 72       	andi	r18, 0x20	; 32
     738:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     73a:	13 c0       	rjmp	.+38     	; 0x762 <digitalRead+0x8c>

		case A0:
		{
			result = PINC & (1 << PORTC0);
     73c:	86 b1       	in	r24, 0x06	; 6
     73e:	28 2f       	mov	r18, r24
     740:	21 70       	andi	r18, 0x01	; 1
     742:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     744:	0e c0       	rjmp	.+28     	; 0x762 <digitalRead+0x8c>

		case A1:
		{
			result = PINC & (1 << PORTC1);
     746:	26 b1       	in	r18, 0x06	; 6
     748:	22 70       	andi	r18, 0x02	; 2
     74a:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     74c:	0a c0       	rjmp	.+20     	; 0x762 <digitalRead+0x8c>

		case A2:
		{
			result = PINC & (1 << PORTC2);
     74e:	26 b1       	in	r18, 0x06	; 6
     750:	24 70       	andi	r18, 0x04	; 4
     752:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     754:	06 c0       	rjmp	.+12     	; 0x762 <digitalRead+0x8c>

		case A3:
		{
			result = PINC & (1 << PORTC3);
     756:	26 b1       	in	r18, 0x06	; 6
     758:	28 70       	andi	r18, 0x08	; 8
     75a:	30 e0       	ldi	r19, 0x00	; 0
		}
		break;
     75c:	02 c0       	rjmp	.+4      	; 0x762 <digitalRead+0x8c>
	}
}

BOOL digitalRead(uint8_t pin)
{
	int result = 0;
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e0       	ldi	r19, 0x00	; 0
		{
		}
		break;
	}

	return(result != 0);
     762:	81 e0       	ldi	r24, 0x01	; 1
     764:	23 2b       	or	r18, r19
     766:	09 f4       	brne	.+2      	; 0x76a <digitalRead+0x94>
     768:	80 e0       	ldi	r24, 0x00	; 0
}
     76a:	08 95       	ret

0000076c <digitalWrite>:

void digitalWrite(uint8_t pin, uint8_t value)
{
	switch(pin)
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	82 31       	cpi	r24, 0x12	; 18
     770:	91 05       	cpc	r25, r1
     772:	08 f0       	brcs	.+2      	; 0x776 <digitalWrite+0xa>
     774:	64 c0       	rjmp	.+200    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     776:	fc 01       	movw	r30, r24
     778:	e8 5a       	subi	r30, 0xA8	; 168
     77a:	ff 4f       	sbci	r31, 0xFF	; 255
     77c:	0c 94 04 18 	jmp	0x3008	; 0x3008 <__tablejump2__>
	{
		case PIN_RXD:
		{
			if(value)
     780:	66 23       	and	r22, r22
     782:	11 f0       	breq	.+4      	; 0x788 <digitalWrite+0x1c>
			{
				PORTD  |= (1 << PORTD0);
     784:	58 9a       	sbi	0x0b, 0	; 11
     786:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD0);
     788:	58 98       	cbi	0x0b, 0	; 11
     78a:	08 95       	ret
		} 
		break;
		
		case PIN_TXD:
		{
			if(value)
     78c:	66 23       	and	r22, r22
     78e:	11 f0       	breq	.+4      	; 0x794 <digitalWrite+0x28>
			{
				PORTD  |= (1 << PORTD1);
     790:	59 9a       	sbi	0x0b, 1	; 11
     792:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD1);
     794:	59 98       	cbi	0x0b, 1	; 11
     796:	08 95       	ret
		}
		break;
		
		case D2:
		{
			if(value)
     798:	66 23       	and	r22, r22
     79a:	11 f0       	breq	.+4      	; 0x7a0 <digitalWrite+0x34>
			{
				PORTD  |= (1 << PORTD2);
     79c:	5a 9a       	sbi	0x0b, 2	; 11
     79e:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD2);
     7a0:	5a 98       	cbi	0x0b, 2	; 11
     7a2:	08 95       	ret
		}
		break;

		case D3:
		{
			if(value)
     7a4:	66 23       	and	r22, r22
     7a6:	11 f0       	breq	.+4      	; 0x7ac <digitalWrite+0x40>
			{
				PORTD  |= (1 << PORTD3);
     7a8:	5b 9a       	sbi	0x0b, 3	; 11
     7aa:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD3);
     7ac:	5b 98       	cbi	0x0b, 3	; 11
     7ae:	08 95       	ret
		}
		break;

		case D4:
		{
			if(value)
     7b0:	66 23       	and	r22, r22
     7b2:	11 f0       	breq	.+4      	; 0x7b8 <digitalWrite+0x4c>
			{
				PORTD  |= (1 << PORTD4);
     7b4:	5c 9a       	sbi	0x0b, 4	; 11
     7b6:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD4);
     7b8:	5c 98       	cbi	0x0b, 4	; 11
     7ba:	08 95       	ret
		}
		break;

		case D5:
		{
			if(value)
     7bc:	66 23       	and	r22, r22
     7be:	11 f0       	breq	.+4      	; 0x7c4 <digitalWrite+0x58>
			{
				PORTD  |= (1 << PORTD5);
     7c0:	5d 9a       	sbi	0x0b, 5	; 11
     7c2:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD5);
     7c4:	5d 98       	cbi	0x0b, 5	; 11
     7c6:	08 95       	ret
		}
		break;

		case D6:
		{
			if(value)
     7c8:	66 23       	and	r22, r22
     7ca:	11 f0       	breq	.+4      	; 0x7d0 <digitalWrite+0x64>
			{
				PORTD  |= (1 << PORTD6);
     7cc:	5e 9a       	sbi	0x0b, 6	; 11
     7ce:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD6);
     7d0:	5e 98       	cbi	0x0b, 6	; 11
     7d2:	08 95       	ret
		}
		break;

		case D7:
		{
			if(value)
     7d4:	66 23       	and	r22, r22
     7d6:	11 f0       	breq	.+4      	; 0x7dc <digitalWrite+0x70>
			{
				PORTD  |= (1 << PORTD7);
     7d8:	5f 9a       	sbi	0x0b, 7	; 11
     7da:	08 95       	ret
			}
			else
			{
				PORTD  &= ~(1 << PORTD7);
     7dc:	5f 98       	cbi	0x0b, 7	; 11
     7de:	08 95       	ret
		}
		break;

		case D8:
		{
			if(value)
     7e0:	66 23       	and	r22, r22
     7e2:	11 f0       	breq	.+4      	; 0x7e8 <digitalWrite+0x7c>
			{
				PORTB  |= (1 << PORTB0);
     7e4:	28 9a       	sbi	0x05, 0	; 5
     7e6:	08 95       	ret
			}
			else
			{
				PORTB  &= ~(1 << PORTB0);
     7e8:	28 98       	cbi	0x05, 0	; 5
     7ea:	08 95       	ret
		}
		break;

		case D9:
		{
			if(value)
     7ec:	66 23       	and	r22, r22
     7ee:	11 f0       	breq	.+4      	; 0x7f4 <digitalWrite+0x88>
			{
				PORTB  |= (1 << PORTB1);
     7f0:	29 9a       	sbi	0x05, 1	; 5
     7f2:	08 95       	ret
			}
			else
			{
				PORTB  &= ~(1 << PORTB1);
     7f4:	29 98       	cbi	0x05, 1	; 5
     7f6:	08 95       	ret
		}
		break;

		case D10:
		{
			if(value)
     7f8:	66 23       	and	r22, r22
     7fa:	11 f0       	breq	.+4      	; 0x800 <__DATA_REGION_LENGTH__>
			{
				PORTB  |= (1 << PORTB2);
     7fc:	2a 9a       	sbi	0x05, 2	; 5
     7fe:	08 95       	ret
			}
			else
			{
				PORTB  &= ~(1 << PORTB2);
     800:	2a 98       	cbi	0x05, 2	; 5
     802:	08 95       	ret
		}
		break;

		case D13:
		{
			if(value)
     804:	66 23       	and	r22, r22
     806:	11 f0       	breq	.+4      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
			{
				PORTB  |= (1 << PORTB5);
     808:	2d 9a       	sbi	0x05, 5	; 5
     80a:	08 95       	ret
			}
			else
			{
				PORTB  &= ~(1 << PORTB5);
     80c:	2d 98       	cbi	0x05, 5	; 5
     80e:	08 95       	ret
		}
		break;

		case A0:
		{
			if(value)
     810:	66 23       	and	r22, r22
     812:	11 f0       	breq	.+4      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
			{
				PORTC  |= (1 << PORTC0);
     814:	40 9a       	sbi	0x08, 0	; 8
     816:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC0);
     818:	40 98       	cbi	0x08, 0	; 8
     81a:	08 95       	ret
		}
		break;

		case A1:
		{
			if(value)
     81c:	66 23       	and	r22, r22
     81e:	11 f0       	breq	.+4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
			{
				PORTC  |= (1 << PORTC1);
     820:	41 9a       	sbi	0x08, 1	; 8
     822:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC1);
     824:	41 98       	cbi	0x08, 1	; 8
     826:	08 95       	ret
		}
		break;

		case A2:
		{
			if(value)
     828:	66 23       	and	r22, r22
     82a:	11 f0       	breq	.+4      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
			{
				PORTC  |= (1 << PORTC2);
     82c:	42 9a       	sbi	0x08, 2	; 8
     82e:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC2);
     830:	42 98       	cbi	0x08, 2	; 8
     832:	08 95       	ret
		}
		break;

		case A3:
		{
			if(value)
     834:	66 23       	and	r22, r22
     836:	11 f0       	breq	.+4      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
			{
				PORTC  |= (1 << PORTC3);
     838:	43 9a       	sbi	0x08, 3	; 8
     83a:	08 95       	ret
			}
			else
			{
				PORTC  &= ~(1 << PORTC3);
     83c:	43 98       	cbi	0x08, 3	; 8
     83e:	08 95       	ret

00000840 <_Z7bcd2dech>:

			failure = i2c_device_write(DS3231_BUS_BASE_ADDR, RTC_SECONDS, data, 7);		
		}
		
		return(failure);
	}
     840:	98 2f       	mov	r25, r24
     842:	96 95       	lsr	r25
     844:	96 95       	lsr	r25
     846:	96 95       	lsr	r25
     848:	9e 71       	andi	r25, 0x1E	; 30
     84a:	29 2f       	mov	r18, r25
     84c:	22 0f       	add	r18, r18
     84e:	22 0f       	add	r18, r18
     850:	92 0f       	add	r25, r18
     852:	8f 70       	andi	r24, 0x0F	; 15
     854:	89 0f       	add	r24, r25
     856:	08 95       	ret

00000858 <_Z14epoch_from_ltmP2tm>:
     858:	cf 92       	push	r12
     85a:	df 92       	push	r13
     85c:	ef 92       	push	r14
     85e:	ff 92       	push	r15
     860:	cf 93       	push	r28
     862:	df 93       	push	r29
     864:	ec 01       	movw	r28, r24
     866:	ee 81       	ldd	r30, Y+6	; 0x06
     868:	ff 81       	ldd	r31, Y+7	; 0x07
     86a:	89 81       	ldd	r24, Y+1	; 0x01
     86c:	c8 80       	ld	r12, Y
     86e:	0c 2c       	mov	r0, r12
     870:	00 0c       	add	r0, r0
     872:	dd 08       	sbc	r13, r13
     874:	9c e3       	ldi	r25, 0x3C	; 60
     876:	89 02       	muls	r24, r25
     878:	c0 0c       	add	r12, r0
     87a:	d1 1c       	adc	r13, r1
     87c:	11 24       	eor	r1, r1
     87e:	0d 2c       	mov	r0, r13
     880:	00 0c       	add	r0, r0
     882:	ee 08       	sbc	r14, r14
     884:	ff 08       	sbc	r15, r15
     886:	aa 81       	ldd	r26, Y+2	; 0x02
     888:	0a 2e       	mov	r0, r26
     88a:	00 0c       	add	r0, r0
     88c:	bb 0b       	sbc	r27, r27
     88e:	20 e1       	ldi	r18, 0x10	; 16
     890:	3e e0       	ldi	r19, 0x0E	; 14
     892:	0e 94 19 18 	call	0x3032	; 0x3032 <__usmulhisi3>
     896:	c6 0e       	add	r12, r22
     898:	d7 1e       	adc	r13, r23
     89a:	e8 1e       	adc	r14, r24
     89c:	f9 1e       	adc	r15, r25
     89e:	a8 85       	ldd	r26, Y+8	; 0x08
     8a0:	b9 85       	ldd	r27, Y+9	; 0x09
     8a2:	20 e8       	ldi	r18, 0x80	; 128
     8a4:	31 e5       	ldi	r19, 0x51	; 81
     8a6:	41 e0       	ldi	r20, 0x01	; 1
     8a8:	50 e0       	ldi	r21, 0x00	; 0
     8aa:	0e 94 2b 18 	call	0x3056	; 0x3056 <__mulshisi3>
     8ae:	c6 0e       	add	r12, r22
     8b0:	d7 1e       	adc	r13, r23
     8b2:	e8 1e       	adc	r14, r24
     8b4:	f9 1e       	adc	r15, r25
     8b6:	df 01       	movw	r26, r30
     8b8:	a6 54       	subi	r26, 0x46	; 70
     8ba:	b1 09       	sbc	r27, r1
     8bc:	20 e8       	ldi	r18, 0x80	; 128
     8be:	33 e3       	ldi	r19, 0x33	; 51
     8c0:	41 ee       	ldi	r20, 0xE1	; 225
     8c2:	51 e0       	ldi	r21, 0x01	; 1
     8c4:	0e 94 2b 18 	call	0x3056	; 0x3056 <__mulshisi3>
     8c8:	c6 0e       	add	r12, r22
     8ca:	d7 1e       	adc	r13, r23
     8cc:	e8 1e       	adc	r14, r24
     8ce:	f9 1e       	adc	r15, r25
     8d0:	cf 01       	movw	r24, r30
     8d2:	85 54       	subi	r24, 0x45	; 69
     8d4:	91 09       	sbc	r25, r1
     8d6:	dc 01       	movw	r26, r24
     8d8:	0a f4       	brpl	.+2      	; 0x8dc <_Z14epoch_from_ltmP2tm+0x84>
     8da:	13 96       	adiw	r26, 0x03	; 3
     8dc:	b5 95       	asr	r27
     8de:	a7 95       	ror	r26
     8e0:	b5 95       	asr	r27
     8e2:	a7 95       	ror	r26
     8e4:	20 e8       	ldi	r18, 0x80	; 128
     8e6:	31 e5       	ldi	r19, 0x51	; 81
     8e8:	41 e0       	ldi	r20, 0x01	; 1
     8ea:	50 e0       	ldi	r21, 0x00	; 0
     8ec:	0e 94 2b 18 	call	0x3056	; 0x3056 <__mulshisi3>
     8f0:	c6 0e       	add	r12, r22
     8f2:	d7 1e       	adc	r13, r23
     8f4:	e8 1e       	adc	r14, r24
     8f6:	f9 1e       	adc	r15, r25
     8f8:	cf 01       	movw	r24, r30
     8fa:	01 97       	sbiw	r24, 0x01	; 1
     8fc:	64 e6       	ldi	r22, 0x64	; 100
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	0e 94 af 17 	call	0x2f5e	; 0x2f5e <__divmodhi4>
     904:	db 01       	movw	r26, r22
     906:	20 e8       	ldi	r18, 0x80	; 128
     908:	3e ea       	ldi	r19, 0xAE	; 174
     90a:	4e ef       	ldi	r20, 0xFE	; 254
     90c:	5f ef       	ldi	r21, 0xFF	; 255
     90e:	0e 94 2b 18 	call	0x3056	; 0x3056 <__mulshisi3>
     912:	c6 0e       	add	r12, r22
     914:	d7 1e       	adc	r13, r23
     916:	e8 1e       	adc	r14, r24
     918:	f9 1e       	adc	r15, r25
     91a:	cf 01       	movw	r24, r30
     91c:	85 5d       	subi	r24, 0xD5	; 213
     91e:	9e 4f       	sbci	r25, 0xFE	; 254
     920:	60 e9       	ldi	r22, 0x90	; 144
     922:	71 e0       	ldi	r23, 0x01	; 1
     924:	0e 94 af 17 	call	0x2f5e	; 0x2f5e <__divmodhi4>
     928:	db 01       	movw	r26, r22
     92a:	20 e8       	ldi	r18, 0x80	; 128
     92c:	31 e5       	ldi	r19, 0x51	; 81
     92e:	41 e0       	ldi	r20, 0x01	; 1
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	0e 94 2b 18 	call	0x3056	; 0x3056 <__mulshisi3>
     936:	6c 0d       	add	r22, r12
     938:	7d 1d       	adc	r23, r13
     93a:	8e 1d       	adc	r24, r14
     93c:	9f 1d       	adc	r25, r15
     93e:	df 91       	pop	r29
     940:	cf 91       	pop	r28
     942:	ff 90       	pop	r15
     944:	ef 90       	pop	r14
     946:	df 90       	pop	r13
     948:	cf 90       	pop	r12
     94a:	08 95       	ret

0000094c <_Z13RTC_get_epochv>:
     94c:	df 92       	push	r13
     94e:	ef 92       	push	r14
     950:	ff 92       	push	r15
     952:	0f 93       	push	r16
     954:	1f 93       	push	r17
     956:	cf 93       	push	r28
     958:	df 93       	push	r29
     95a:	cd b7       	in	r28, 0x3d	; 61
     95c:	de b7       	in	r29, 0x3e	; 62
     95e:	63 97       	sbiw	r28, 0x13	; 19
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	f8 94       	cli
     964:	de bf       	out	0x3e, r29	; 62
     966:	0f be       	out	0x3f, r0	; 63
     968:	cd bf       	out	0x3d, r28	; 61
     96a:	ae 01       	movw	r20, r28
     96c:	4f 5f       	subi	r20, 0xFF	; 255
     96e:	5f 4f       	sbci	r21, 0xFF	; 255
     970:	87 e0       	ldi	r24, 0x07	; 7
     972:	da 01       	movw	r26, r20
     974:	1d 92       	st	X+, r1
     976:	8a 95       	dec	r24
     978:	e9 f7       	brne	.-6      	; 0x974 <_Z13RTC_get_epochv+0x28>
     97a:	27 e0       	ldi	r18, 0x07	; 7
     97c:	60 e0       	ldi	r22, 0x00	; 0
     97e:	80 ed       	ldi	r24, 0xD0	; 208
     980:	0e 94 82 08 	call	0x1104	; 0x1104 <i2c_device_read>
     984:	81 11       	cpse	r24, r1
     986:	76 c0       	rjmp	.+236    	; 0xa74 <_Z13RTC_get_epochv+0x128>
     988:	fe 01       	movw	r30, r28
     98a:	38 96       	adiw	r30, 0x08	; 8
     98c:	8c e0       	ldi	r24, 0x0C	; 12
     98e:	df 01       	movw	r26, r30
     990:	1d 92       	st	X+, r1
     992:	8a 95       	dec	r24
     994:	e9 f7       	brne	.-6      	; 0x990 <_Z13RTC_get_epochv+0x44>
     996:	2b 81       	ldd	r18, Y+3	; 0x03
     998:	42 2f       	mov	r20, r18
     99a:	50 e0       	ldi	r21, 0x00	; 0
     99c:	ca 01       	movw	r24, r20
     99e:	95 95       	asr	r25
     9a0:	87 95       	ror	r24
     9a2:	95 95       	asr	r25
     9a4:	87 95       	ror	r24
     9a6:	95 95       	asr	r25
     9a8:	87 95       	ror	r24
     9aa:	95 95       	asr	r25
     9ac:	87 95       	ror	r24
     9ae:	81 70       	andi	r24, 0x01	; 1
     9b0:	2f 70       	andi	r18, 0x0F	; 15
     9b2:	ba 01       	movw	r22, r20
     9b4:	06 2e       	mov	r0, r22
     9b6:	67 2f       	mov	r22, r23
     9b8:	00 0c       	add	r0, r0
     9ba:	66 1f       	adc	r22, r22
     9bc:	77 0b       	sbc	r23, r23
     9be:	00 0c       	add	r0, r0
     9c0:	66 1f       	adc	r22, r22
     9c2:	77 1f       	adc	r23, r23
     9c4:	60 fd       	sbrc	r22, 0
     9c6:	0c c0       	rjmp	.+24     	; 0x9e0 <_Z13RTC_get_epochv+0x94>
     9c8:	55 95       	asr	r21
     9ca:	47 95       	ror	r20
     9cc:	55 95       	asr	r21
     9ce:	47 95       	ror	r20
     9d0:	55 95       	asr	r21
     9d2:	47 95       	ror	r20
     9d4:	55 95       	asr	r21
     9d6:	47 95       	ror	r20
     9d8:	55 95       	asr	r21
     9da:	47 95       	ror	r20
     9dc:	40 fd       	sbrc	r20, 0
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	88 0f       	add	r24, r24
     9e2:	d8 2e       	mov	r13, r24
     9e4:	dd 0c       	add	r13, r13
     9e6:	dd 0c       	add	r13, r13
     9e8:	8d 0d       	add	r24, r13
     9ea:	d8 2e       	mov	r13, r24
     9ec:	d2 0e       	add	r13, r18
     9ee:	8f 81       	ldd	r24, Y+7	; 0x07
     9f0:	0e 94 20 04 	call	0x840	; 0x840 <_Z7bcd2dech>
     9f4:	e8 2e       	mov	r14, r24
     9f6:	f1 2c       	mov	r15, r1
     9f8:	c7 01       	movw	r24, r14
     9fa:	8c 59       	subi	r24, 0x9C	; 156
     9fc:	9f 4f       	sbci	r25, 0xFF	; 255
     9fe:	9f 87       	std	Y+15, r25	; 0x0f
     a00:	8e 87       	std	Y+14, r24	; 0x0e
     a02:	b0 e3       	ldi	r27, 0x30	; 48
     a04:	eb 1a       	sub	r14, r27
     a06:	b8 ef       	ldi	r27, 0xF8	; 248
     a08:	fb 0a       	sbc	r15, r27
     a0a:	8e 81       	ldd	r24, Y+6	; 0x06
     a0c:	0e 94 20 04 	call	0x840	; 0x840 <_Z7bcd2dech>
     a10:	08 2f       	mov	r16, r24
     a12:	8f ef       	ldi	r24, 0xFF	; 255
     a14:	80 0f       	add	r24, r16
     a16:	8d 87       	std	Y+13, r24	; 0x0d
     a18:	8d 81       	ldd	r24, Y+5	; 0x05
     a1a:	0e 94 20 04 	call	0x840	; 0x840 <_Z7bcd2dech>
     a1e:	8b 87       	std	Y+11, r24	; 0x0b
     a20:	02 30       	cpi	r16, 0x02	; 2
     a22:	70 f0       	brcs	.+28     	; 0xa40 <_Z13RTC_get_epochv+0xf4>
     a24:	11 e0       	ldi	r17, 0x01	; 1
     a26:	61 2f       	mov	r22, r17
     a28:	c7 01       	movw	r24, r14
     a2a:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <month_length>
     a2e:	28 89       	ldd	r18, Y+16	; 0x10
     a30:	39 89       	ldd	r19, Y+17	; 0x11
     a32:	28 0f       	add	r18, r24
     a34:	31 1d       	adc	r19, r1
     a36:	39 8b       	std	Y+17, r19	; 0x11
     a38:	28 8b       	std	Y+16, r18	; 0x10
     a3a:	1f 5f       	subi	r17, 0xFF	; 255
     a3c:	01 13       	cpse	r16, r17
     a3e:	f3 cf       	rjmp	.-26     	; 0xa26 <_Z13RTC_get_epochv+0xda>
     a40:	8b 85       	ldd	r24, Y+11	; 0x0b
     a42:	08 2e       	mov	r0, r24
     a44:	00 0c       	add	r0, r0
     a46:	99 0b       	sbc	r25, r25
     a48:	01 97       	sbiw	r24, 0x01	; 1
     a4a:	28 89       	ldd	r18, Y+16	; 0x10
     a4c:	39 89       	ldd	r19, Y+17	; 0x11
     a4e:	82 0f       	add	r24, r18
     a50:	93 1f       	adc	r25, r19
     a52:	99 8b       	std	Y+17, r25	; 0x11
     a54:	88 8b       	std	Y+16, r24	; 0x10
     a56:	89 81       	ldd	r24, Y+1	; 0x01
     a58:	0e 94 20 04 	call	0x840	; 0x840 <_Z7bcd2dech>
     a5c:	18 2f       	mov	r17, r24
     a5e:	8a 81       	ldd	r24, Y+2	; 0x02
     a60:	0e 94 20 04 	call	0x840	; 0x840 <_Z7bcd2dech>
     a64:	da 86       	std	Y+10, r13	; 0x0a
     a66:	89 87       	std	Y+9, r24	; 0x09
     a68:	18 87       	std	Y+8, r17	; 0x08
     a6a:	ce 01       	movw	r24, r28
     a6c:	08 96       	adiw	r24, 0x08	; 8
     a6e:	0e 94 2c 04 	call	0x858	; 0x858 <_Z14epoch_from_ltmP2tm>
     a72:	03 c0       	rjmp	.+6      	; 0xa7a <_Z13RTC_get_epochv+0x12e>
     a74:	60 e0       	ldi	r22, 0x00	; 0
     a76:	70 e0       	ldi	r23, 0x00	; 0
     a78:	cb 01       	movw	r24, r22
     a7a:	63 96       	adiw	r28, 0x13	; 19
     a7c:	0f b6       	in	r0, 0x3f	; 63
     a7e:	f8 94       	cli
     a80:	de bf       	out	0x3e, r29	; 62
     a82:	0f be       	out	0x3f, r0	; 63
     a84:	cd bf       	out	0x3d, r28	; 61
     a86:	df 91       	pop	r29
     a88:	cf 91       	pop	r28
     a8a:	1f 91       	pop	r17
     a8c:	0f 91       	pop	r16
     a8e:	ff 90       	pop	r15
     a90:	ef 90       	pop	r14
     a92:	df 90       	pop	r13
     a94:	08 95       	ret

00000a96 <_Z10RTC_1s_sqwh>:


	BOOL RTC_1s_sqw(BOOL enable)
	{
     a96:	cf 93       	push	r28
     a98:	df 93       	push	r29
     a9a:	1f 92       	push	r1
     a9c:	cd b7       	in	r28, 0x3d	; 61
     a9e:	de b7       	in	r29, 0x3e	; 62
		BOOL fail;
		
		if(enable)
     aa0:	88 23       	and	r24, r24
     aa2:	51 f0       	breq	.+20     	; 0xab8 <_Z10RTC_1s_sqwh+0x22>
		{
			uint8_t byte = 0x00;
     aa4:	19 82       	std	Y+1, r1	; 0x01
			fail = i2c_device_write(DS3231_BUS_BASE_ADDR, RTC_CONTROL, &byte, 1);
     aa6:	21 e0       	ldi	r18, 0x01	; 1
     aa8:	ae 01       	movw	r20, r28
     aaa:	4f 5f       	subi	r20, 0xFF	; 255
     aac:	5f 4f       	sbci	r21, 0xFF	; 255
     aae:	6e e0       	ldi	r22, 0x0E	; 14
     ab0:	80 ed       	ldi	r24, 0xD0	; 208
     ab2:	0e 94 1f 08 	call	0x103e	; 0x103e <i2c_device_write>
     ab6:	0a c0       	rjmp	.+20     	; 0xacc <_Z10RTC_1s_sqwh+0x36>
		}
		else
		{
			uint8_t byte = 0x04;
     ab8:	84 e0       	ldi	r24, 0x04	; 4
     aba:	89 83       	std	Y+1, r24	; 0x01
			fail = i2c_device_write(DS3231_BUS_BASE_ADDR, RTC_CONTROL, &byte, 1);
     abc:	21 e0       	ldi	r18, 0x01	; 1
     abe:	ae 01       	movw	r20, r28
     ac0:	4f 5f       	subi	r20, 0xFF	; 255
     ac2:	5f 4f       	sbci	r21, 0xFF	; 255
     ac4:	6e e0       	ldi	r22, 0x0E	; 14
     ac6:	80 ed       	ldi	r24, 0xD0	; 208
     ac8:	0e 94 1f 08 	call	0x103e	; 0x103e <i2c_device_write>
		}
		
		return(fail);
	}
     acc:	0f 90       	pop	r0
     ace:	df 91       	pop	r29
     ad0:	cf 91       	pop	r28
     ad2:	08 95       	ret

00000ad4 <_ZN13EepromManagerC1Ev>:

		failure = FALSE;
	}

	return( failure);
}
     ad4:	08 95       	ret

00000ad6 <_ZN13EepromManagerD1Ev>:
     ad6:	08 95       	ret

00000ad8 <_ZN13EepromManager17sendPROGMEMStringEPKc>:
		sendPROGMEMString((const char*)&TEXT_EEPROM_SUCCESS_MESSAGE);
//		dumpEEPROMVars();
	}

	void EepromManager::sendPROGMEMString(const char* fl_addr)
	{
     ad8:	0f 93       	push	r16
     ada:	1f 93       	push	r17
     adc:	cf 93       	push	r28
     ade:	df 93       	push	r29
     ae0:	eb 01       	movw	r28, r22
		if(!lb_enabled())
     ae2:	0e 94 a6 0a 	call	0x154c	; 0x154c <lb_enabled>
     ae6:	88 23       	and	r24, r24
     ae8:	c1 f0       	breq	.+48     	; 0xb1a <_ZN13EepromManager17sendPROGMEMStringEPKc+0x42>
		{
			return;
		}

		if(fl_addr)
     aea:	20 97       	sbiw	r28, 0x00	; 0
     aec:	b1 f0       	breq	.+44     	; 0xb1a <_ZN13EepromManager17sendPROGMEMStringEPKc+0x42>
		{
			char c = pgm_read_byte(fl_addr++);
     aee:	8e 01       	movw	r16, r28
     af0:	0f 5f       	subi	r16, 0xFF	; 255
     af2:	1f 4f       	sbci	r17, 0xFF	; 255
     af4:	fe 01       	movw	r30, r28
     af6:	c4 91       	lpm	r28, Z

			while(c)
     af8:	cc 23       	and	r28, r28
     afa:	79 f0       	breq	.+30     	; 0xb1a <_ZN13EepromManager17sendPROGMEMStringEPKc+0x42>
     afc:	04 c0       	rjmp	.+8      	; 0xb06 <_ZN13EepromManager17sendPROGMEMStringEPKc+0x2e>
     afe:	0f 5f       	subi	r16, 0xFF	; 255
     b00:	1f 4f       	sbci	r17, 0xFF	; 255
     b02:	cc 23       	and	r28, r28
     b04:	51 f0       	breq	.+20     	; 0xb1a <_ZN13EepromManager17sendPROGMEMStringEPKc+0x42>
			{
				lb_echo_char(c);
     b06:	8c 2f       	mov	r24, r28
     b08:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <lb_echo_char>
				c = pgm_read_byte((fl_addr++));
     b0c:	f8 01       	movw	r30, r16
     b0e:	c4 91       	lpm	r28, Z

				while(linkbusTxInProgress())
     b10:	0e 94 9f 09 	call	0x133e	; 0x133e <linkbusTxInProgress>
     b14:	81 11       	cpse	r24, r1
     b16:	fc cf       	rjmp	.-8      	; 0xb10 <_ZN13EepromManager17sendPROGMEMStringEPKc+0x38>
     b18:	f2 cf       	rjmp	.-28     	; 0xafe <_ZN13EepromManager17sendPROGMEMStringEPKc+0x26>
				{
					;
				}
			}
		}
	}
     b1a:	df 91       	pop	r29
     b1c:	cf 91       	pop	r28
     b1e:	1f 91       	pop	r17
     b20:	0f 91       	pop	r16
     b22:	08 95       	ret

00000b24 <_ZN13EepromManager17sendSuccessStringEv>:
}

#if INIT_EEPROM_ONLY
	void EepromManager::sendSuccessString(void)
	{
		sendPROGMEMString((const char*)&TEXT_EEPROM_SUCCESS_MESSAGE);
     b24:	62 ed       	ldi	r22, 0xD2	; 210
     b26:	71 e0       	ldi	r23, 0x01	; 1
     b28:	0e 94 6c 05 	call	0xad8	; 0xad8 <_ZN13EepromManager17sendPROGMEMStringEPKc>
     b2c:	08 95       	ret

00000b2e <_ZN13EepromManager20initializeEEPROMVarsEv>:

/*
 * Set volatile variables to their values stored in EEPROM
 */
	BOOL EepromManager::initializeEEPROMVars(void)
	{
     b2e:	cf 92       	push	r12
     b30:	df 92       	push	r13
     b32:	ef 92       	push	r14
     b34:	ff 92       	push	r15
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
					err = TRUE;
				}
			}
#endif  /* !ATMEL_STUDIO_7 */

		g_id_codespeed = EEPROM_ID_CODE_SPEED_DEFAULT;
     b3e:	84 e1       	ldi	r24, 0x14	; 20
     b40:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <g_id_codespeed>
		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.id_codespeed), g_id_codespeed);
     b44:	60 91 07 01 	lds	r22, 0x0107	; 0x800107 <g_id_codespeed>
     b48:	8c e1       	ldi	r24, 0x1C	; 28
     b4a:	93 e0       	ldi	r25, 0x03	; 3
     b4c:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>

		g_fox = EEPROM_FOX_SETTING_DEFAULT;
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <g_fox>
		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.fox_setting), g_fox);
     b56:	60 91 64 04 	lds	r22, 0x0464	; 0x800464 <g_fox>
     b5a:	8d e1       	ldi	r24, 0x1D	; 29
     b5c:	93 e0       	ldi	r25, 0x03	; 3
     b5e:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>

		g_AM_audio_frequency = EEPROM_AM_AUDIO_FREQ_DEFAULT;
     b62:	10 92 4e 04 	sts	0x044E, r1	; 0x80044e <g_AM_audio_frequency>
		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.am_audio_frequency), (uint8_t)g_AM_audio_frequency);
     b66:	60 91 4e 04 	lds	r22, 0x044E	; 0x80044e <g_AM_audio_frequency>
     b6a:	8e e1       	ldi	r24, 0x1E	; 30
     b6c:	93 e0       	ldi	r25, 0x03	; 3
     b6e:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>

		g_atmega_temp_calibration = EEPROM_TEMP_CALIBRATION_DEFAULT;
     b72:	82 e9       	ldi	r24, 0x92	; 146
     b74:	9f ef       	ldi	r25, 0xFF	; 255
     b76:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <g_atmega_temp_calibration+0x1>
     b7a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <g_atmega_temp_calibration>
		eeprom_write_word((uint16_t*)&(EepromManager::ee_vars.atmega_temp_calibration), (uint16_t)g_atmega_temp_calibration);
     b7e:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <g_atmega_temp_calibration>
     b82:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <g_atmega_temp_calibration+0x1>
     b86:	8f e1       	ldi	r24, 0x1F	; 31
     b88:	93 e0       	ldi	r25, 0x03	; 3
     b8a:	0e 94 13 1b 	call	0x3626	; 0x3626 <eeprom_write_word>

		i2c_init(); /* Needs to happen before reading RTC */
     b8e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <i2c_init>
#if INCLUDE_RV3028_SUPPORT
		g_rv3028_offset = rv3028_get_offset_RAM();
		eeprom_write_word((uint16_t*)&(EepromManager::ee_vars.rv3028_offset), (uint16_t)g_rv3028_offset);
#endif // INCLUDE_RV3028_SUPPORT

		g_event_start_epoch = EEPROM_START_EPOCH_DEFAULT;
     b92:	10 92 56 04 	sts	0x0456, r1	; 0x800456 <g_event_start_epoch>
     b96:	10 92 57 04 	sts	0x0457, r1	; 0x800457 <g_event_start_epoch+0x1>
     b9a:	10 92 58 04 	sts	0x0458, r1	; 0x800458 <g_event_start_epoch+0x2>
     b9e:	10 92 59 04 	sts	0x0459, r1	; 0x800459 <g_event_start_epoch+0x3>
		eeprom_write_dword((uint32_t*)&(EepromManager::ee_vars.event_start_epoch), g_event_start_epoch);
     ba2:	40 91 56 04 	lds	r20, 0x0456	; 0x800456 <g_event_start_epoch>
     ba6:	50 91 57 04 	lds	r21, 0x0457	; 0x800457 <g_event_start_epoch+0x1>
     baa:	60 91 58 04 	lds	r22, 0x0458	; 0x800458 <g_event_start_epoch+0x2>
     bae:	70 91 59 04 	lds	r23, 0x0459	; 0x800459 <g_event_start_epoch+0x3>
     bb2:	83 e2       	ldi	r24, 0x23	; 35
     bb4:	93 e0       	ldi	r25, 0x03	; 3
     bb6:	0e 94 0b 1b 	call	0x3616	; 0x3616 <eeprom_write_dword>

		g_event_finish_epoch = EEPROM_FINISH_EPOCH_DEFAULT;
     bba:	10 92 52 04 	sts	0x0452, r1	; 0x800452 <g_event_finish_epoch>
     bbe:	10 92 53 04 	sts	0x0453, r1	; 0x800453 <g_event_finish_epoch+0x1>
     bc2:	10 92 54 04 	sts	0x0454, r1	; 0x800454 <g_event_finish_epoch+0x2>
     bc6:	10 92 55 04 	sts	0x0455, r1	; 0x800455 <g_event_finish_epoch+0x3>
		eeprom_write_dword((uint32_t*)&(EepromManager::ee_vars.event_finish_epoch), g_event_finish_epoch);
     bca:	40 91 52 04 	lds	r20, 0x0452	; 0x800452 <g_event_finish_epoch>
     bce:	50 91 53 04 	lds	r21, 0x0453	; 0x800453 <g_event_finish_epoch+0x1>
     bd2:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <g_event_finish_epoch+0x2>
     bd6:	70 91 55 04 	lds	r23, 0x0455	; 0x800455 <g_event_finish_epoch+0x3>
     bda:	87 e2       	ldi	r24, 0x27	; 39
     bdc:	93 e0       	ldi	r25, 0x03	; 3
     bde:	0e 94 0b 1b 	call	0x3616	; 0x3616 <eeprom_write_dword>

		g_utc_offset = EEPROM_UTC_OFFSET_DEFAULT;
     be2:	10 92 51 04 	sts	0x0451, r1	; 0x800451 <g_utc_offset>
		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.utc_offset), (uint8_t)g_utc_offset);
     be6:	60 91 51 04 	lds	r22, 0x0451	; 0x800451 <g_utc_offset>
     bea:	8b e2       	ldi	r24, 0x2B	; 43
     bec:	93 e0       	ldi	r25, 0x03	; 3
     bee:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>

		g_ptt_periodic_reset_enabled = EEPROM_PTT_PERIODIC_RESET_DEFAULT;
     bf2:	10 92 50 04 	sts	0x0450, r1	; 0x800450 <g_ptt_periodic_reset_enabled>
		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.ptt_periodic_reset), g_ptt_periodic_reset_enabled);
     bf6:	60 91 50 04 	lds	r22, 0x0450	; 0x800450 <g_ptt_periodic_reset_enabled>
     bfa:	8c e2       	ldi	r24, 0x2C	; 44
     bfc:	93 e0       	ldi	r25, 0x03	; 3
     bfe:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>

		g_messages_text[STATION_ID][0] = '\0';
     c02:	10 92 1a 04 	sts	0x041A, r1	; 0x80041a <g_messages_text+0x15>
		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.stationID_text[0]), 0);
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	86 e6       	ldi	r24, 0x66	; 102
     c0a:	92 e0       	ldi	r25, 0x02	; 2
     c0c:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     c10:	01 e1       	ldi	r16, 0x11	; 17
     c12:	11 e0       	ldi	r17, 0x01	; 1
     c14:	0f 2e       	mov	r0, r31
     c16:	f4 e3       	ldi	r31, 0x34	; 52
     c18:	ef 2e       	mov	r14, r31
     c1a:	f4 e0       	ldi	r31, 0x04	; 4
     c1c:	ff 2e       	mov	r15, r31
     c1e:	f0 2d       	mov	r31, r0
     c20:	c3 e1       	ldi	r28, 0x13	; 19
     c22:	d3 e0       	ldi	r29, 0x03	; 3
     c24:	0f 2e       	mov	r0, r31
     c26:	f5 e1       	ldi	r31, 0x15	; 21
     c28:	cf 2e       	mov	r12, r31
     c2a:	f1 e0       	ldi	r31, 0x01	; 1
     c2c:	df 2e       	mov	r13, r31
     c2e:	f0 2d       	mov	r31, r0

		uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
		for(i = 0; i < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); i++)
		{
			g_unlockCode[i] = *v;
     c30:	f8 01       	movw	r30, r16
     c32:	61 91       	ld	r22, Z+
     c34:	8f 01       	movw	r16, r30
     c36:	f7 01       	movw	r30, r14
     c38:	61 93       	st	Z+, r22
     c3a:	7f 01       	movw	r14, r30
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.unlockCode[i]), *v++);
     c3c:	ce 01       	movw	r24, r28
     c3e:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     c42:	21 96       	adiw	r28, 0x01	; 1

		g_messages_text[STATION_ID][0] = '\0';
		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.stationID_text[0]), 0);

		uint8_t *v = (uint8_t*)EEPROM_DTMF_UNLOCK_CODE_DEFAULT;
		for(i = 0; i < strlen(EEPROM_DTMF_UNLOCK_CODE_DEFAULT); i++)
     c44:	c0 16       	cp	r12, r16
     c46:	d1 06       	cpc	r13, r17
     c48:	99 f7       	brne	.-26     	; 0xc30 <_ZN13EepromManager20initializeEEPROMVarsEv+0x102>
		{
			g_unlockCode[i] = *v;
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.unlockCode[i]), *v++);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.unlockCode[i]), 0);
     c4a:	60 e0       	ldi	r22, 0x00	; 0
     c4c:	87 e1       	ldi	r24, 0x17	; 23
     c4e:	93 e0       	ldi	r25, 0x03	; 3
     c50:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
		g_unlockCode[i] = '\0';
     c54:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <g_unlockCode+0x4>
     c58:	0b e7       	ldi	r16, 0x7B	; 123
     c5a:	12 e0       	ldi	r17, 0x02	; 2

		/* Each correction pulse = 1 tick corresponds to 1 / (16384 x 64) = 0.9537 ppm.
		 * ppm frequency change = -0.035 * (T-T0)^2 (+/-10%)
		 * Table[0] = 25C, Table[1] = 24C or 26C, Table[2] = 23C or 27C, etc. */
		for(i = 0; i < SIZE_OF_TEMPERATURE_TABLE; i++)  /* Use 1-degree steps and take advantage of parabola symmetry for -35C to +85C coverage */
     c5c:	c0 e0       	ldi	r28, 0x00	; 0
     c5e:	d0 e0       	ldi	r29, 0x00	; 0
		{
			uint16_t val = (uint16_t)(((i * i) * 37L) / 1000L);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.temperature_table[i]), val);
     c60:	0f 2e       	mov	r0, r31
     c62:	f8 ee       	ldi	r31, 0xE8	; 232
     c64:	cf 2e       	mov	r12, r31
     c66:	f3 e0       	ldi	r31, 0x03	; 3
     c68:	df 2e       	mov	r13, r31
     c6a:	e1 2c       	mov	r14, r1
     c6c:	f1 2c       	mov	r15, r1
     c6e:	f0 2d       	mov	r31, r0
     c70:	cc 9f       	mul	r28, r28
     c72:	90 01       	movw	r18, r0
     c74:	cd 9f       	mul	r28, r29
     c76:	30 0d       	add	r19, r0
     c78:	30 0d       	add	r19, r0
     c7a:	11 24       	eor	r1, r1
     c7c:	a5 e2       	ldi	r26, 0x25	; 37
     c7e:	b0 e0       	ldi	r27, 0x00	; 0
     c80:	0e 94 0a 18 	call	0x3014	; 0x3014 <__umulhisi3>
     c84:	a7 01       	movw	r20, r14
     c86:	96 01       	movw	r18, r12
     c88:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__divmodsi4>
     c8c:	62 2f       	mov	r22, r18
     c8e:	c8 01       	movw	r24, r16
     c90:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
		g_unlockCode[i] = '\0';

		/* Each correction pulse = 1 tick corresponds to 1 / (16384 x 64) = 0.9537 ppm.
		 * ppm frequency change = -0.035 * (T-T0)^2 (+/-10%)
		 * Table[0] = 25C, Table[1] = 24C or 26C, Table[2] = 23C or 27C, etc. */
		for(i = 0; i < SIZE_OF_TEMPERATURE_TABLE; i++)  /* Use 1-degree steps and take advantage of parabola symmetry for -35C to +85C coverage */
     c94:	21 96       	adiw	r28, 0x01	; 1
     c96:	0e 5f       	subi	r16, 0xFE	; 254
     c98:	1f 4f       	sbci	r17, 0xFF	; 255
     c9a:	cc 33       	cpi	r28, 0x3C	; 60
     c9c:	d1 05       	cpc	r29, r1
     c9e:	41 f7       	brne	.-48     	; 0xc70 <_ZN13EepromManager20initializeEEPROMVarsEv+0x142>
     ca0:	c8 e0       	ldi	r28, 0x08	; 8
     ca2:	d0 e0       	ldi	r29, 0x00	; 0
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.temperature_table[i]), val);
		}

		for(i = 0; i < SIZE_OF_DATA_MODULATION; i++)
		{
			float val = 5.5 * squaref((1.4 + sinf((i + (SIZE_OF_DATA_MODULATION / 4)) * 0.196))); /* Set maximum attenuation to fall at index 0 */
     ca4:	be 01       	movw	r22, r28
     ca6:	80 e0       	ldi	r24, 0x00	; 0
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	0e 94 0c 16 	call	0x2c18	; 0x2c18 <__floatunsisf>
     cae:	29 e3       	ldi	r18, 0x39	; 57
     cb0:	34 eb       	ldi	r19, 0xB4	; 180
     cb2:	48 e4       	ldi	r20, 0x48	; 72
     cb4:	5e e3       	ldi	r21, 0x3E	; 62
     cb6:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <__mulsf3>
     cba:	0e 94 07 17 	call	0x2e0e	; 0x2e0e <sin>
     cbe:	23 e3       	ldi	r18, 0x33	; 51
     cc0:	33 e3       	ldi	r19, 0x33	; 51
     cc2:	43 eb       	ldi	r20, 0xB3	; 179
     cc4:	5f e3       	ldi	r21, 0x3F	; 63
     cc6:	0e 94 71 15 	call	0x2ae2	; 0x2ae2 <__addsf3>
     cca:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <square>
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.dataModulation[i]), (uint8_t)val);
     cce:	20 e0       	ldi	r18, 0x00	; 0
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	40 eb       	ldi	r20, 0xB0	; 176
     cd4:	50 e4       	ldi	r21, 0x40	; 64
     cd6:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <__mulsf3>
     cda:	0e 94 dd 15 	call	0x2bba	; 0x2bba <__fixunssfsi>
     cde:	ce 01       	movw	r24, r28
     ce0:	85 51       	subi	r24, 0x15	; 21
     ce2:	9d 4f       	sbci	r25, 0xFD	; 253
     ce4:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     ce8:	21 96       	adiw	r28, 0x01	; 1
		{
			uint16_t val = (uint16_t)(((i * i) * 37L) / 1000L);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.temperature_table[i]), val);
		}

		for(i = 0; i < SIZE_OF_DATA_MODULATION; i++)
     cea:	c8 32       	cpi	r28, 0x28	; 40
     cec:	d1 05       	cpc	r29, r1
     cee:	d1 f6       	brne	.-76     	; 0xca4 <_ZN13EepromManager20initializeEEPROMVarsEv+0x176>
     cf0:	cf e6       	ldi	r28, 0x6F	; 111
     cf2:	d4 e0       	ldi	r29, 0x04	; 4
     cf4:	00 e0       	ldi	r16, 0x00	; 0
     cf6:	10 e0       	ldi	r17, 0x00	; 0
     cf8:	0f 2e       	mov	r0, r31
     cfa:	fa e9       	ldi	r31, 0x9A	; 154
     cfc:	ef 2e       	mov	r14, r31
     cfe:	f4 e0       	ldi	r31, 0x04	; 4
     d00:	ff 2e       	mov	r15, r31
     d02:	f0 2d       	mov	r31, r0
		}

		/* Software Version String */
		for(i = 0; i < strlen_P(PRODUCT_NAME_LONG); i++)
		{
			uint8_t byteval = pgm_read_byte(PRODUCT_NAME_LONG + i);
     d04:	fe 01       	movw	r30, r28
     d06:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textVersion[i]), byteval);
     d08:	c8 01       	movw	r24, r16
     d0a:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     d0e:	21 96       	adiw	r28, 0x01	; 1
     d10:	0f 5f       	subi	r16, 0xFF	; 255
     d12:	1f 4f       	sbci	r17, 0xFF	; 255
			float val = 5.5 * squaref((1.4 + sinf((i + (SIZE_OF_DATA_MODULATION / 4)) * 0.196))); /* Set maximum attenuation to fall at index 0 */
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.dataModulation[i]), (uint8_t)val);
		}

		/* Software Version String */
		for(i = 0; i < strlen_P(PRODUCT_NAME_LONG); i++)
     d14:	ec 16       	cp	r14, r28
     d16:	fd 06       	cpc	r15, r29
     d18:	a9 f7       	brne	.-22     	; 0xd04 <_ZN13EepromManager20initializeEEPROMVarsEv+0x1d6>
		{
			uint8_t byteval = pgm_read_byte(PRODUCT_NAME_LONG + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textVersion[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textVersion[i]), 0);
     d1a:	60 e0       	ldi	r22, 0x00	; 0
     d1c:	8b e2       	ldi	r24, 0x2B	; 43
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     d24:	c9 e3       	ldi	r28, 0x39	; 57
     d26:	d3 e0       	ldi	r29, 0x03	; 3
     d28:	0c e2       	ldi	r16, 0x2C	; 44
     d2a:	10 e0       	ldi	r17, 0x00	; 0
     d2c:	0f 2e       	mov	r0, r31
     d2e:	fe e6       	ldi	r31, 0x6E	; 110
     d30:	ef 2e       	mov	r14, r31
     d32:	f4 e0       	ldi	r31, 0x04	; 4
     d34:	ff 2e       	mov	r15, r31
     d36:	f0 2d       	mov	r31, r0

		/* Help String */
		for(i = 0; i < strlen_P(HELP_TEXT); i++)
		{
			uint8_t byteval = pgm_read_byte(HELP_TEXT + i);
     d38:	fe 01       	movw	r30, r28
     d3a:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textHelp[i]), byteval);
     d3c:	c8 01       	movw	r24, r16
     d3e:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     d42:	21 96       	adiw	r28, 0x01	; 1
     d44:	0f 5f       	subi	r16, 0xFF	; 255
     d46:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textVersion[i]), 0);

		/* Help String */
		for(i = 0; i < strlen_P(HELP_TEXT); i++)
     d48:	ec 16       	cp	r14, r28
     d4a:	fd 06       	cpc	r15, r29
     d4c:	a9 f7       	brne	.-22     	; 0xd38 <_ZN13EepromManager20initializeEEPROMVarsEv+0x20a>
		{
			uint8_t byteval = pgm_read_byte(HELP_TEXT + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textHelp[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textHelp[i]), 0);
     d4e:	60 e0       	ldi	r22, 0x00	; 0
     d50:	81 e6       	ldi	r24, 0x61	; 97
     d52:	91 e0       	ldi	r25, 0x01	; 1
     d54:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     d58:	c3 ea       	ldi	r28, 0xA3	; 163
     d5a:	d2 e0       	ldi	r29, 0x02	; 2
     d5c:	07 ed       	ldi	r16, 0xD7	; 215
     d5e:	11 e0       	ldi	r17, 0x01	; 1
     d60:	0f 2e       	mov	r0, r31
     d62:	f3 ec       	ldi	r31, 0xC3	; 195
     d64:	ef 2e       	mov	r14, r31
     d66:	f2 e0       	ldi	r31, 0x02	; 2
     d68:	ff 2e       	mov	r15, r31
     d6a:	f0 2d       	mov	r31, r0

		/* Set ID String */
		for(i = 0; i < strlen_P(TEXT_SET_ID); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_ID + i);
     d6c:	fe 01       	movw	r30, r28
     d6e:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetID[i]), byteval);
     d70:	c8 01       	movw	r24, r16
     d72:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     d76:	21 96       	adiw	r28, 0x01	; 1
     d78:	0f 5f       	subi	r16, 0xFF	; 255
     d7a:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textHelp[i]), 0);

		/* Set ID String */
		for(i = 0; i < strlen_P(TEXT_SET_ID); i++)
     d7c:	ec 16       	cp	r14, r28
     d7e:	fd 06       	cpc	r15, r29
     d80:	a9 f7       	brne	.-22     	; 0xd6c <_ZN13EepromManager20initializeEEPROMVarsEv+0x23e>
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_ID + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetID[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetID[i]), 0);
     d82:	60 e0       	ldi	r22, 0x00	; 0
     d84:	87 ef       	ldi	r24, 0xF7	; 247
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     d8c:	c1 e1       	ldi	r28, 0x11	; 17
     d8e:	d3 e0       	ldi	r29, 0x03	; 3
     d90:	02 e6       	ldi	r16, 0x62	; 98
     d92:	11 e0       	ldi	r17, 0x01	; 1
     d94:	0f 2e       	mov	r0, r31
     d96:	f8 e3       	ldi	r31, 0x38	; 56
     d98:	ef 2e       	mov	r14, r31
     d9a:	f3 e0       	ldi	r31, 0x03	; 3
     d9c:	ff 2e       	mov	r15, r31
     d9e:	f0 2d       	mov	r31, r0

		/* Set Time String */
		for(i = 0; i < strlen_P(TEXT_SET_TIME); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_TIME + i);
     da0:	fe 01       	movw	r30, r28
     da2:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetTime[i]), byteval);
     da4:	c8 01       	movw	r24, r16
     da6:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     daa:	21 96       	adiw	r28, 0x01	; 1
     dac:	0f 5f       	subi	r16, 0xFF	; 255
     dae:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetID[i]), 0);

		/* Set Time String */
		for(i = 0; i < strlen_P(TEXT_SET_TIME); i++)
     db0:	ec 16       	cp	r14, r28
     db2:	fd 06       	cpc	r15, r29
     db4:	a9 f7       	brne	.-22     	; 0xda0 <_ZN13EepromManager20initializeEEPROMVarsEv+0x272>
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_TIME + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetTime[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetTime[i]), 0);
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	89 e8       	ldi	r24, 0x89	; 137
     dba:	91 e0       	ldi	r25, 0x01	; 1
     dbc:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     dc0:	cb ee       	ldi	r28, 0xEB	; 235
     dc2:	d2 e0       	ldi	r29, 0x02	; 2
     dc4:	0a e8       	ldi	r16, 0x8A	; 138
     dc6:	11 e0       	ldi	r17, 0x01	; 1
     dc8:	0f 2e       	mov	r0, r31
     dca:	f0 e1       	ldi	r31, 0x10	; 16
     dcc:	ef 2e       	mov	r14, r31
     dce:	f3 e0       	ldi	r31, 0x03	; 3
     dd0:	ff 2e       	mov	r15, r31
     dd2:	f0 2d       	mov	r31, r0

		/* Set Start String */
		for(i = 0; i < strlen_P(TEXT_SET_START); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_START + i);
     dd4:	fe 01       	movw	r30, r28
     dd6:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetStart[i]), byteval);
     dd8:	c8 01       	movw	r24, r16
     dda:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     dde:	21 96       	adiw	r28, 0x01	; 1
     de0:	0f 5f       	subi	r16, 0xFF	; 255
     de2:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetTime[i]), 0);

		/* Set Start String */
		for(i = 0; i < strlen_P(TEXT_SET_START); i++)
     de4:	ec 16       	cp	r14, r28
     de6:	fd 06       	cpc	r15, r29
     de8:	a9 f7       	brne	.-22     	; 0xdd4 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2a6>
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_START + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetStart[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetStart[i]), 0);
     dea:	60 e0       	ldi	r22, 0x00	; 0
     dec:	8f ea       	ldi	r24, 0xAF	; 175
     dee:	91 e0       	ldi	r25, 0x01	; 1
     df0:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     df4:	c4 ec       	ldi	r28, 0xC4	; 196
     df6:	d2 e0       	ldi	r29, 0x02	; 2
     df8:	00 eb       	ldi	r16, 0xB0	; 176
     dfa:	11 e0       	ldi	r17, 0x01	; 1
     dfc:	0f 2e       	mov	r0, r31
     dfe:	fa ee       	ldi	r31, 0xEA	; 234
     e00:	ef 2e       	mov	r14, r31
     e02:	f2 e0       	ldi	r31, 0x02	; 2
     e04:	ff 2e       	mov	r15, r31
     e06:	f0 2d       	mov	r31, r0

		/* Set Finish String */
		for(i = 0; i < strlen_P(TEXT_SET_FINISH); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_FINISH + i);
     e08:	fe 01       	movw	r30, r28
     e0a:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetFinish[i]), byteval);
     e0c:	c8 01       	movw	r24, r16
     e0e:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     e12:	21 96       	adiw	r28, 0x01	; 1
     e14:	0f 5f       	subi	r16, 0xFF	; 255
     e16:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetStart[i]), 0);

		/* Set Finish String */
		for(i = 0; i < strlen_P(TEXT_SET_FINISH); i++)
     e18:	ec 16       	cp	r14, r28
     e1a:	fd 06       	cpc	r15, r29
     e1c:	a9 f7       	brne	.-22     	; 0xe08 <_ZN13EepromManager20initializeEEPROMVarsEv+0x2da>
		{
			uint8_t byteval = pgm_read_byte(TEXT_SET_FINISH + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetFinish[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetFinish[i]), 0);
     e1e:	60 e0       	ldi	r22, 0x00	; 0
     e20:	86 ed       	ldi	r24, 0xD6	; 214
     e22:	91 e0       	ldi	r25, 0x01	; 1
     e24:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     e28:	c2 e7       	ldi	r28, 0x72	; 114
     e2a:	d2 e0       	ldi	r29, 0x02	; 2
     e2c:	03 e1       	ldi	r16, 0x13	; 19
     e2e:	12 e0       	ldi	r17, 0x02	; 2
     e30:	0f 2e       	mov	r0, r31
     e32:	f7 e8       	ldi	r31, 0x87	; 135
     e34:	ef 2e       	mov	r14, r31
     e36:	f2 e0       	ldi	r31, 0x02	; 2
     e38:	ff 2e       	mov	r15, r31
     e3a:	f0 2d       	mov	r31, r0

		/* Set Err Finish in Past String */
		for(i = 0; i < strlen_P(TEXT_ERR_FINISH_IN_PAST); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_FINISH_IN_PAST + i);
     e3c:	fe 01       	movw	r30, r28
     e3e:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishInPast[i]), byteval);
     e40:	c8 01       	movw	r24, r16
     e42:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     e46:	21 96       	adiw	r28, 0x01	; 1
     e48:	0f 5f       	subi	r16, 0xFF	; 255
     e4a:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textSetFinish[i]), 0);

		/* Set Err Finish in Past String */
		for(i = 0; i < strlen_P(TEXT_ERR_FINISH_IN_PAST); i++)
     e4c:	ec 16       	cp	r14, r28
     e4e:	fd 06       	cpc	r15, r29
     e50:	a9 f7       	brne	.-22     	; 0xe3c <_ZN13EepromManager20initializeEEPROMVarsEv+0x30e>
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_FINISH_IN_PAST + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishInPast[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishInPast[i]), 0);
     e52:	60 e0       	ldi	r22, 0x00	; 0
     e54:	88 e2       	ldi	r24, 0x28	; 40
     e56:	92 e0       	ldi	r25, 0x02	; 2
     e58:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     e5c:	cd e5       	ldi	r28, 0x5D	; 93
     e5e:	d2 e0       	ldi	r29, 0x02	; 2
     e60:	09 e2       	ldi	r16, 0x29	; 41
     e62:	12 e0       	ldi	r17, 0x02	; 2
     e64:	0f 2e       	mov	r0, r31
     e66:	f1 e7       	ldi	r31, 0x71	; 113
     e68:	ef 2e       	mov	r14, r31
     e6a:	f2 e0       	ldi	r31, 0x02	; 2
     e6c:	ff 2e       	mov	r15, r31
     e6e:	f0 2d       	mov	r31, r0

		/* Set Err Start in Past String */
		for(i = 0; i < strlen_P(TEXT_ERR_START_IN_PAST); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_START_IN_PAST + i);
     e70:	fe 01       	movw	r30, r28
     e72:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrStartInPast[i]), byteval);
     e74:	c8 01       	movw	r24, r16
     e76:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     e7a:	21 96       	adiw	r28, 0x01	; 1
     e7c:	0f 5f       	subi	r16, 0xFF	; 255
     e7e:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishInPast[i]), 0);

		/* Set Err Start in Past String */
		for(i = 0; i < strlen_P(TEXT_ERR_START_IN_PAST); i++)
     e80:	ec 16       	cp	r14, r28
     e82:	fd 06       	cpc	r15, r29
     e84:	a9 f7       	brne	.-22     	; 0xe70 <_ZN13EepromManager20initializeEEPROMVarsEv+0x342>
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_START_IN_PAST + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrStartInPast[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrStartInPast[i]), 0);
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	8d e3       	ldi	r24, 0x3D	; 61
     e8a:	92 e0       	ldi	r25, 0x02	; 2
     e8c:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     e90:	c8 e8       	ldi	r28, 0x88	; 136
     e92:	d2 e0       	ldi	r29, 0x02	; 2
     e94:	08 ef       	ldi	r16, 0xF8	; 248
     e96:	11 e0       	ldi	r17, 0x01	; 1
     e98:	0f 2e       	mov	r0, r31
     e9a:	f2 ea       	ldi	r31, 0xA2	; 162
     e9c:	ef 2e       	mov	r14, r31
     e9e:	f2 e0       	ldi	r31, 0x02	; 2
     ea0:	ff 2e       	mov	r15, r31
     ea2:	f0 2d       	mov	r31, r0

		/* Set Err Finish Before Start String */
		for(i = 0; i < strlen_P(TEXT_ERR_FINISH_BEFORE_START); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_FINISH_BEFORE_START + i);
     ea4:	fe 01       	movw	r30, r28
     ea6:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishB4Start[i]), byteval);
     ea8:	c8 01       	movw	r24, r16
     eaa:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     eae:	21 96       	adiw	r28, 0x01	; 1
     eb0:	0f 5f       	subi	r16, 0xFF	; 255
     eb2:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrStartInPast[i]), 0);

		/* Set Err Finish Before Start String */
		for(i = 0; i < strlen_P(TEXT_ERR_FINISH_BEFORE_START); i++)
     eb4:	ec 16       	cp	r14, r28
     eb6:	fd 06       	cpc	r15, r29
     eb8:	a9 f7       	brne	.-22     	; 0xea4 <_ZN13EepromManager20initializeEEPROMVarsEv+0x376>
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_FINISH_BEFORE_START + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishB4Start[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishB4Start[i]), 0);
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	82 e1       	ldi	r24, 0x12	; 18
     ebe:	92 e0       	ldi	r25, 0x02	; 2
     ec0:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     ec4:	c9 e4       	ldi	r28, 0x49	; 73
     ec6:	d2 e0       	ldi	r29, 0x02	; 2
     ec8:	0e e3       	ldi	r16, 0x3E	; 62
     eca:	12 e0       	ldi	r17, 0x02	; 2
     ecc:	0f 2e       	mov	r0, r31
     ece:	fc e5       	ldi	r31, 0x5C	; 92
     ed0:	ef 2e       	mov	r14, r31
     ed2:	f2 e0       	ldi	r31, 0x02	; 2
     ed4:	ff 2e       	mov	r15, r31
     ed6:	f0 2d       	mov	r31, r0

		/* Set Err Invalid Time String */
		for(i = 0; i < strlen_P(TEXT_ERR_INVALID_TIME); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_INVALID_TIME + i);
     ed8:	fe 01       	movw	r30, r28
     eda:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrInvalidTime[i]), byteval);
     edc:	c8 01       	movw	r24, r16
     ede:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     ee2:	21 96       	adiw	r28, 0x01	; 1
     ee4:	0f 5f       	subi	r16, 0xFF	; 255
     ee6:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrFinishB4Start[i]), 0);

		/* Set Err Invalid Time String */
		for(i = 0; i < strlen_P(TEXT_ERR_INVALID_TIME); i++)
     ee8:	ec 16       	cp	r14, r28
     eea:	fd 06       	cpc	r15, r29
     eec:	a9 f7       	brne	.-22     	; 0xed8 <_ZN13EepromManager20initializeEEPROMVarsEv+0x3aa>
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_INVALID_TIME + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrInvalidTime[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrInvalidTime[i]), 0);
     eee:	60 e0       	ldi	r22, 0x00	; 0
     ef0:	81 e5       	ldi	r24, 0x51	; 81
     ef2:	92 e0       	ldi	r25, 0x02	; 2
     ef4:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     ef8:	c5 e3       	ldi	r28, 0x35	; 53
     efa:	d2 e0       	ldi	r29, 0x02	; 2
     efc:	02 e5       	ldi	r16, 0x52	; 82
     efe:	12 e0       	ldi	r17, 0x02	; 2
     f00:	0f 2e       	mov	r0, r31
     f02:	f8 e4       	ldi	r31, 0x48	; 72
     f04:	ef 2e       	mov	r14, r31
     f06:	f2 e0       	ldi	r31, 0x02	; 2
     f08:	ff 2e       	mov	r15, r31
     f0a:	f0 2d       	mov	r31, r0

		/* Set Err Time In Past String */
		for(i = 0; i < strlen_P(TEXT_ERR_TIME_IN_PAST); i++)
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_TIME_IN_PAST + i);
     f0c:	fe 01       	movw	r30, r28
     f0e:	64 91       	lpm	r22, Z
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrTimeInPast[i]), byteval);
     f10:	c8 01       	movw	r24, r16
     f12:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
     f16:	21 96       	adiw	r28, 0x01	; 1
     f18:	0f 5f       	subi	r16, 0xFF	; 255
     f1a:	1f 4f       	sbci	r17, 0xFF	; 255
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrInvalidTime[i]), 0);

		/* Set Err Time In Past String */
		for(i = 0; i < strlen_P(TEXT_ERR_TIME_IN_PAST); i++)
     f1c:	ec 16       	cp	r14, r28
     f1e:	fd 06       	cpc	r15, r29
     f20:	a9 f7       	brne	.-22     	; 0xf0c <_ZN13EepromManager20initializeEEPROMVarsEv+0x3de>
		{
			uint8_t byteval = pgm_read_byte(TEXT_ERR_TIME_IN_PAST + i);
			eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrTimeInPast[i]), byteval);
		}

		eeprom_write_byte((uint8_t*)&(EepromManager::ee_vars.textErrTimeInPast[i]), 0);
     f22:	60 e0       	ldi	r22, 0x00	; 0
     f24:	85 e6       	ldi	r24, 0x65	; 101
     f26:	92 e0       	ldi	r25, 0x02	; 2
     f28:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>

		/* Done */

		eeprom_write_word((uint16_t*)&(EepromManager::ee_vars.eeprom_initialization_flag), EEPROM_INITIALIZED_FLAG);
     f2c:	6b eb       	ldi	r22, 0xBB	; 187
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	8d e2       	ldi	r24, 0x2D	; 45
     f32:	93 e0       	ldi	r25, 0x03	; 3
     f34:	0e 94 13 1b 	call	0x3626	; 0x3626 <eeprom_write_word>

		return(err);
	}
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	ff 90       	pop	r15
     f44:	ef 90       	pop	r14
     f46:	df 90       	pop	r13
     f48:	cf 90       	pop	r12
     f4a:	08 95       	ret

00000f4c <i2c_init>:
	}
#endif /* SUPPORT_I2C_CLEARBUS_FUNCTION */

void i2c_init(void)
{
	power_twi_enable();
     f4c:	e4 e6       	ldi	r30, 0x64	; 100
     f4e:	f0 e0       	ldi	r31, 0x00	; 0
     f50:	80 81       	ld	r24, Z
     f52:	8f 77       	andi	r24, 0x7F	; 127
     f54:	80 83       	st	Z, r24

	/* set SCL to ~100 kHz for 8 MHz CPU clock */
	TWSR = 0;   /* Prescale /1 */
     f56:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = 0x25;
     f5a:	85 e2       	ldi	r24, 0x25	; 37
     f5c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>

	/* enable I2C */
	TWCR = _BV(TWEN);
     f60:	84 e0       	ldi	r24, 0x04	; 4
     f62:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	g_i2c_not_timed_out = TRUE;
     f66:	81 e0       	ldi	r24, 0x01	; 1
     f68:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     f6c:	08 95       	ret

00000f6e <i2c_start>:
#else
	void i2c_start(void)
#endif
{
#ifdef I2C_TIMEOUT_SUPPORT
		TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);
     f6e:	84 ea       	ldi	r24, 0xA4	; 164
     f70:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		while(!(TWCR & _BV(TWINT)) && g_i2c_not_timed_out)
     f74:	ec eb       	ldi	r30, 0xBC	; 188
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	80 81       	ld	r24, Z
     f7a:	88 23       	and	r24, r24
     f7c:	64 f0       	brlt	.+24     	; 0xf96 <i2c_start+0x28>
     f7e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f82:	81 11       	cpse	r24, r1
     f84:	f9 cf       	rjmp	.-14     	; 0xf78 <i2c_start+0xa>
     f86:	07 c0       	rjmp	.+14     	; 0xf96 <i2c_start+0x28>
			;
		}

		if(!g_i2c_not_timed_out)    /* if timed out, reset the bus */
		{
			TWCR = (1 << TWINT) | (1 << TWSTO);
     f88:	80 e9       	ldi	r24, 0x90	; 144
     f8a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
			g_i2c_not_timed_out = TRUE;
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			return( TRUE);
     f94:	08 95       	ret
		while(!(TWCR & _BV(TWINT)) && g_i2c_not_timed_out)
		{
			;
		}

		if(!g_i2c_not_timed_out)    /* if timed out, reset the bus */
     f96:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f9a:	88 23       	and	r24, r24
     f9c:	a9 f3       	breq	.-22     	; 0xf88 <i2c_start+0x1a>
			TWCR = (1 << TWINT) | (1 << TWSTO);
			g_i2c_not_timed_out = TRUE;
			return( TRUE);
		}

		return( FALSE);
     f9e:	80 e0       	ldi	r24, 0x00	; 0
		while(!(TWCR & _BV(TWINT)))
		{
			;
		}
#endif
}
     fa0:	08 95       	ret

00000fa2 <i2c_stop>:

void i2c_stop(void)
{
	TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
     fa2:	84 e9       	ldi	r24, 0x94	; 148
     fa4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     fa8:	08 95       	ret

00000faa <i2c_write_success>:
}

BOOL i2c_write_success(uint8_t data, uint8_t success)
{
#ifdef I2C_TIMEOUT_SUPPORT
		TWDR = data;
     faa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
		TWCR = _BV(TWINT) | _BV(TWEN);
     fae:	84 e8       	ldi	r24, 0x84	; 132
     fb0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		while(!(TWCR & _BV(TWINT)) && g_i2c_not_timed_out)
     fb4:	ec eb       	ldi	r30, 0xBC	; 188
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	80 81       	ld	r24, Z
     fba:	88 23       	and	r24, r24
     fbc:	64 f0       	brlt	.+24     	; 0xfd6 <i2c_write_success+0x2c>
     fbe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     fc2:	81 11       	cpse	r24, r1
     fc4:	f9 cf       	rjmp	.-14     	; 0xfb8 <i2c_write_success+0xe>
     fc6:	07 c0       	rjmp	.+14     	; 0xfd6 <i2c_write_success+0x2c>
		uint8_t stat = TW_STATUS;

		/* ignore timeout condition to ensure i2c_stop() gets sent */
		if(stat != success)
		{
			TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
     fc8:	84 e9       	ldi	r24, 0x94	; 148
     fca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
			g_i2c_not_timed_out = TRUE;
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			return(TRUE);
     fd4:	08 95       	ret
		while(!(TWCR & _BV(TWINT)) && g_i2c_not_timed_out)
		{
			;
		}

		uint8_t stat = TW_STATUS;
     fd6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>

		/* ignore timeout condition to ensure i2c_stop() gets sent */
		if(stat != success)
     fda:	88 7f       	andi	r24, 0xF8	; 248
     fdc:	86 13       	cpse	r24, r22
     fde:	f4 cf       	rjmp	.-24     	; 0xfc8 <i2c_write_success+0x1e>
			TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
			g_i2c_not_timed_out = TRUE;
			return(TRUE);
		}

		return( FALSE);
     fe0:	80 e0       	ldi	r24, 0x00	; 0
			return(TRUE);
		}

		return(FALSE);
#endif
}
     fe2:	08 95       	ret

00000fe4 <i2c_read_ack>:

uint8_t i2c_read_ack(void)
{
#ifdef I2C_TIMEOUT_SUPPORT
		TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
     fe4:	84 ec       	ldi	r24, 0xC4	; 196
     fe6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		while(!(TWCR & _BV(TWINT)) && g_i2c_not_timed_out)
     fea:	ec eb       	ldi	r30, 0xBC	; 188
     fec:	f0 e0       	ldi	r31, 0x00	; 0
     fee:	80 81       	ld	r24, Z
     ff0:	88 23       	and	r24, r24
     ff2:	24 f0       	brlt	.+8      	; 0xffc <i2c_read_ack+0x18>
     ff4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ff8:	81 11       	cpse	r24, r1
     ffa:	f9 cf       	rjmp	.-14     	; 0xfee <i2c_read_ack+0xa>
		{
			;
		}

		return(TWDR);
     ffc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
			;
		}

		return( TWDR);
#endif
}
    1000:	08 95       	ret

00001002 <i2c_read_nack>:

uint8_t i2c_read_nack(void)
{
#ifdef I2C_TIMEOUT_SUPPORT
		TWCR = _BV(TWINT) | _BV(TWEN);
    1002:	84 e8       	ldi	r24, 0x84	; 132
    1004:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		while(!(TWCR & _BV(TWINT)) && g_i2c_not_timed_out)
    1008:	ec eb       	ldi	r30, 0xBC	; 188
    100a:	f0 e0       	ldi	r31, 0x00	; 0
    100c:	80 81       	ld	r24, Z
    100e:	88 23       	and	r24, r24
    1010:	24 f0       	brlt	.+8      	; 0x101a <i2c_read_nack+0x18>
    1012:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1016:	81 11       	cpse	r24, r1
    1018:	f9 cf       	rjmp	.-14     	; 0x100c <i2c_read_nack+0xa>
		{
			;
		}

		return( TWDR);
    101a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
			;
		}

		return( TWDR);
#endif
}
    101e:	08 95       	ret

00001020 <i2c_status>:

BOOL i2c_status(uint8_t status)
{
	if(TW_STATUS != status)
    1020:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1024:	28 7f       	andi	r18, 0xF8	; 248
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	28 17       	cp	r18, r24
    102c:	39 07       	cpc	r19, r25
    102e:	29 f0       	breq	.+10     	; 0x103a <i2c_status+0x1a>
	{
		TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
    1030:	84 e9       	ldi	r24, 0x94	; 148
    1032:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		return(TRUE);
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	08 95       	ret
	}

	return(FALSE);
    103a:	80 e0       	ldi	r24, 0x00	; 0
}
    103c:	08 95       	ret

0000103e <i2c_device_write>:
#ifdef SELECTIVELY_DISABLE_OPTIMIZATION
	BOOL __attribute__((optimize("O0"))) i2c_device_write(uint8_t slaveAddr, uint8_t addr, uint8_t data[], uint8_t bytes2write)
#else
	BOOL i2c_device_write(uint8_t slaveAddr, uint8_t addr, uint8_t data[], uint8_t bytes2write)
#endif
{
    103e:	cf 93       	push	r28
    1040:	df 93       	push	r29
    1042:	00 d0       	rcall	.+0      	; 0x1044 <i2c_device_write+0x6>
    1044:	00 d0       	rcall	.+0      	; 0x1046 <i2c_device_write+0x8>
    1046:	00 d0       	rcall	.+0      	; 0x1048 <i2c_device_write+0xa>
    1048:	cd b7       	in	r28, 0x3d	; 61
    104a:	de b7       	in	r29, 0x3e	; 62
    104c:	8a 83       	std	Y+2, r24	; 0x02
    104e:	6b 83       	std	Y+3, r22	; 0x03
    1050:	5d 83       	std	Y+5, r21	; 0x05
    1052:	4c 83       	std	Y+4, r20	; 0x04
    1054:	2e 83       	std	Y+6, r18	; 0x06
		#ifndef DEBUG_WITHOUT_I2C
		uint8_t index = 0;
    1056:	19 82       	std	Y+1, r1	; 0x01

		i2c_start();
    1058:	0e 94 b7 07 	call	0xf6e	; 0xf6e <i2c_start>
		if(i2c_status(TW_START))
    105c:	88 e0       	ldi	r24, 0x08	; 8
    105e:	0e 94 10 08 	call	0x1020	; 0x1020 <i2c_status>
    1062:	98 2f       	mov	r25, r24
    1064:	81 e0       	ldi	r24, 0x01	; 1
    1066:	99 23       	and	r25, r25
    1068:	09 f4       	brne	.+2      	; 0x106c <i2c_device_write+0x2e>
    106a:	80 e0       	ldi	r24, 0x00	; 0
    106c:	88 23       	and	r24, r24
    106e:	11 f0       	breq	.+4      	; 0x1074 <i2c_device_write+0x36>
		{
			return(TRUE);
    1070:	81 e0       	ldi	r24, 0x01	; 1
    1072:	3f c0       	rjmp	.+126    	; 0x10f2 <i2c_device_write+0xb4>
		}

		if(i2c_write_success(slaveAddr, TW_MT_SLA_ACK))
    1074:	68 e1       	ldi	r22, 0x18	; 24
    1076:	8a 81       	ldd	r24, Y+2	; 0x02
    1078:	0e 94 d5 07 	call	0xfaa	; 0xfaa <i2c_write_success>
    107c:	98 2f       	mov	r25, r24
    107e:	81 e0       	ldi	r24, 0x01	; 1
    1080:	99 23       	and	r25, r25
    1082:	09 f4       	brne	.+2      	; 0x1086 <i2c_device_write+0x48>
    1084:	80 e0       	ldi	r24, 0x00	; 0
    1086:	88 23       	and	r24, r24
    1088:	11 f0       	breq	.+4      	; 0x108e <i2c_device_write+0x50>
		{
			return(TRUE);
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	32 c0       	rjmp	.+100    	; 0x10f2 <i2c_device_write+0xb4>
		}

		if(i2c_write_success(addr, TW_MT_DATA_ACK))
    108e:	68 e2       	ldi	r22, 0x28	; 40
    1090:	8b 81       	ldd	r24, Y+3	; 0x03
    1092:	0e 94 d5 07 	call	0xfaa	; 0xfaa <i2c_write_success>
    1096:	98 2f       	mov	r25, r24
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	99 23       	and	r25, r25
    109c:	09 f4       	brne	.+2      	; 0x10a0 <i2c_device_write+0x62>
    109e:	80 e0       	ldi	r24, 0x00	; 0
    10a0:	88 23       	and	r24, r24
    10a2:	11 f0       	breq	.+4      	; 0x10a8 <i2c_device_write+0x6a>
		{
			return(TRUE);
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	25 c0       	rjmp	.+74     	; 0x10f2 <i2c_device_write+0xb4>
		}

		while(bytes2write--)
    10a8:	8e 81       	ldd	r24, Y+6	; 0x06
    10aa:	9f ef       	ldi	r25, 0xFF	; 255
    10ac:	98 0f       	add	r25, r24
    10ae:	9e 83       	std	Y+6, r25	; 0x06
    10b0:	91 e0       	ldi	r25, 0x01	; 1
    10b2:	88 23       	and	r24, r24
    10b4:	09 f4       	brne	.+2      	; 0x10b8 <i2c_device_write+0x7a>
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	99 23       	and	r25, r25
    10ba:	c1 f0       	breq	.+48     	; 0x10ec <i2c_device_write+0xae>
		{
			if(i2c_write_success(data[index++], TW_MT_DATA_ACK))
    10bc:	89 81       	ldd	r24, Y+1	; 0x01
    10be:	91 e0       	ldi	r25, 0x01	; 1
    10c0:	98 0f       	add	r25, r24
    10c2:	99 83       	std	Y+1, r25	; 0x01
    10c4:	88 2f       	mov	r24, r24
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	2c 81       	ldd	r18, Y+4	; 0x04
    10ca:	3d 81       	ldd	r19, Y+5	; 0x05
    10cc:	82 0f       	add	r24, r18
    10ce:	93 1f       	adc	r25, r19
    10d0:	fc 01       	movw	r30, r24
    10d2:	80 81       	ld	r24, Z
    10d4:	68 e2       	ldi	r22, 0x28	; 40
    10d6:	0e 94 d5 07 	call	0xfaa	; 0xfaa <i2c_write_success>
    10da:	98 2f       	mov	r25, r24
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	99 23       	and	r25, r25
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <i2c_device_write+0xa6>
    10e2:	80 e0       	ldi	r24, 0x00	; 0
    10e4:	88 23       	and	r24, r24
    10e6:	01 f3       	breq	.-64     	; 0x10a8 <i2c_device_write+0x6a>
			{
				return(TRUE);
    10e8:	81 e0       	ldi	r24, 0x01	; 1
    10ea:	03 c0       	rjmp	.+6      	; 0x10f2 <i2c_device_write+0xb4>
			}
		}

		i2c_stop();
    10ec:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <i2c_stop>

		#endif  /* #ifndef DEBUG_WITHOUT_I2C */

	return(FALSE);
    10f0:	80 e0       	ldi	r24, 0x00	; 0
}
    10f2:	26 96       	adiw	r28, 0x06	; 6
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	f8 94       	cli
    10f8:	de bf       	out	0x3e, r29	; 62
    10fa:	0f be       	out	0x3f, r0	; 63
    10fc:	cd bf       	out	0x3d, r28	; 61
    10fe:	df 91       	pop	r29
    1100:	cf 91       	pop	r28
    1102:	08 95       	ret

00001104 <i2c_device_read>:
#ifdef SELECTIVELY_DISABLE_OPTIMIZATION
	BOOL __attribute__((optimize("O0"))) i2c_device_read(uint8_t slaveAddr, uint8_t addr, uint8_t data[], uint8_t bytes2read)
#else
	BOOL i2c_device_read(uint8_t slaveAddr, uint8_t addr, uint8_t data[], uint8_t bytes2read)
#endif
{
    1104:	0f 93       	push	r16
    1106:	1f 93       	push	r17
    1108:	cf 93       	push	r28
    110a:	df 93       	push	r29
    110c:	00 d0       	rcall	.+0      	; 0x110e <i2c_device_read+0xa>
    110e:	00 d0       	rcall	.+0      	; 0x1110 <i2c_device_read+0xc>
    1110:	00 d0       	rcall	.+0      	; 0x1112 <i2c_device_read+0xe>
    1112:	cd b7       	in	r28, 0x3d	; 61
    1114:	de b7       	in	r29, 0x3e	; 62
    1116:	8a 83       	std	Y+2, r24	; 0x02
    1118:	6b 83       	std	Y+3, r22	; 0x03
    111a:	5d 83       	std	Y+5, r21	; 0x05
    111c:	4c 83       	std	Y+4, r20	; 0x04
    111e:	2e 83       	std	Y+6, r18	; 0x06
		#ifndef DEBUG_WITHOUT_I2C
		uint8_t index = 0;
    1120:	19 82       	std	Y+1, r1	; 0x01

		i2c_start();
    1122:	0e 94 b7 07 	call	0xf6e	; 0xf6e <i2c_start>
		if(i2c_status(TW_START))
    1126:	88 e0       	ldi	r24, 0x08	; 8
    1128:	0e 94 10 08 	call	0x1020	; 0x1020 <i2c_status>
    112c:	98 2f       	mov	r25, r24
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	99 23       	and	r25, r25
    1132:	09 f4       	brne	.+2      	; 0x1136 <i2c_device_read+0x32>
    1134:	80 e0       	ldi	r24, 0x00	; 0
    1136:	88 23       	and	r24, r24
    1138:	11 f0       	breq	.+4      	; 0x113e <i2c_device_read+0x3a>
		{
			return(TRUE);
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	79 c0       	rjmp	.+242    	; 0x1230 <i2c_device_read+0x12c>
		}

		if(i2c_write_success(slaveAddr, TW_MT_SLA_ACK))
    113e:	68 e1       	ldi	r22, 0x18	; 24
    1140:	8a 81       	ldd	r24, Y+2	; 0x02
    1142:	0e 94 d5 07 	call	0xfaa	; 0xfaa <i2c_write_success>
    1146:	98 2f       	mov	r25, r24
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	99 23       	and	r25, r25
    114c:	09 f4       	brne	.+2      	; 0x1150 <i2c_device_read+0x4c>
    114e:	80 e0       	ldi	r24, 0x00	; 0
    1150:	88 23       	and	r24, r24
    1152:	11 f0       	breq	.+4      	; 0x1158 <i2c_device_read+0x54>
		{
			return(TRUE);
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	6c c0       	rjmp	.+216    	; 0x1230 <i2c_device_read+0x12c>
		}

		if(i2c_write_success(addr, TW_MT_DATA_ACK))
    1158:	68 e2       	ldi	r22, 0x28	; 40
    115a:	8b 81       	ldd	r24, Y+3	; 0x03
    115c:	0e 94 d5 07 	call	0xfaa	; 0xfaa <i2c_write_success>
    1160:	98 2f       	mov	r25, r24
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	99 23       	and	r25, r25
    1166:	09 f4       	brne	.+2      	; 0x116a <i2c_device_read+0x66>
    1168:	80 e0       	ldi	r24, 0x00	; 0
    116a:	88 23       	and	r24, r24
    116c:	11 f0       	breq	.+4      	; 0x1172 <i2c_device_read+0x6e>
		{
			return(TRUE);
    116e:	81 e0       	ldi	r24, 0x01	; 1
    1170:	5f c0       	rjmp	.+190    	; 0x1230 <i2c_device_read+0x12c>
		}

		i2c_start();
    1172:	0e 94 b7 07 	call	0xf6e	; 0xf6e <i2c_start>
		if(i2c_status(TW_REP_START))
    1176:	80 e1       	ldi	r24, 0x10	; 16
    1178:	0e 94 10 08 	call	0x1020	; 0x1020 <i2c_status>
    117c:	98 2f       	mov	r25, r24
    117e:	81 e0       	ldi	r24, 0x01	; 1
    1180:	99 23       	and	r25, r25
    1182:	09 f4       	brne	.+2      	; 0x1186 <i2c_device_read+0x82>
    1184:	80 e0       	ldi	r24, 0x00	; 0
    1186:	88 23       	and	r24, r24
    1188:	11 f0       	breq	.+4      	; 0x118e <i2c_device_read+0x8a>
		{
			return(TRUE);
    118a:	81 e0       	ldi	r24, 0x01	; 1
    118c:	51 c0       	rjmp	.+162    	; 0x1230 <i2c_device_read+0x12c>
		}

		if(i2c_write_success((slaveAddr | TW_READ), TW_MR_SLA_ACK))
    118e:	8a 81       	ldd	r24, Y+2	; 0x02
    1190:	81 60       	ori	r24, 0x01	; 1
    1192:	60 e4       	ldi	r22, 0x40	; 64
    1194:	0e 94 d5 07 	call	0xfaa	; 0xfaa <i2c_write_success>
    1198:	98 2f       	mov	r25, r24
    119a:	81 e0       	ldi	r24, 0x01	; 1
    119c:	99 23       	and	r25, r25
    119e:	09 f4       	brne	.+2      	; 0x11a2 <i2c_device_read+0x9e>
    11a0:	80 e0       	ldi	r24, 0x00	; 0
    11a2:	88 23       	and	r24, r24
    11a4:	11 f0       	breq	.+4      	; 0x11aa <i2c_device_read+0xa6>
		{
			return(TRUE);
    11a6:	81 e0       	ldi	r24, 0x01	; 1
    11a8:	43 c0       	rjmp	.+134    	; 0x1230 <i2c_device_read+0x12c>
		}

		while(bytes2read--)
    11aa:	8e 81       	ldd	r24, Y+6	; 0x06
    11ac:	9f ef       	ldi	r25, 0xFF	; 255
    11ae:	98 0f       	add	r25, r24
    11b0:	9e 83       	std	Y+6, r25	; 0x06
    11b2:	91 e0       	ldi	r25, 0x01	; 1
    11b4:	88 23       	and	r24, r24
    11b6:	09 f4       	brne	.+2      	; 0x11ba <i2c_device_read+0xb6>
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	99 23       	and	r25, r25
    11bc:	b1 f1       	breq	.+108    	; 0x122a <i2c_device_read+0x126>
		{
			if(bytes2read)
    11be:	8e 81       	ldd	r24, Y+6	; 0x06
    11c0:	88 23       	and	r24, r24
    11c2:	d9 f0       	breq	.+54     	; 0x11fa <i2c_device_read+0xf6>
			{
				data[index++] = i2c_read_ack();
    11c4:	89 81       	ldd	r24, Y+1	; 0x01
    11c6:	91 e0       	ldi	r25, 0x01	; 1
    11c8:	98 0f       	add	r25, r24
    11ca:	99 83       	std	Y+1, r25	; 0x01
    11cc:	88 2f       	mov	r24, r24
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	2c 81       	ldd	r18, Y+4	; 0x04
    11d2:	3d 81       	ldd	r19, Y+5	; 0x05
    11d4:	89 01       	movw	r16, r18
    11d6:	08 0f       	add	r16, r24
    11d8:	19 1f       	adc	r17, r25
    11da:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <i2c_read_ack>
    11de:	f8 01       	movw	r30, r16
    11e0:	80 83       	st	Z, r24
				if(i2c_status(TW_MR_DATA_ACK))
    11e2:	80 e5       	ldi	r24, 0x50	; 80
    11e4:	0e 94 10 08 	call	0x1020	; 0x1020 <i2c_status>
    11e8:	98 2f       	mov	r25, r24
    11ea:	81 e0       	ldi	r24, 0x01	; 1
    11ec:	99 23       	and	r25, r25
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <i2c_device_read+0xee>
    11f0:	80 e0       	ldi	r24, 0x00	; 0
    11f2:	88 23       	and	r24, r24
    11f4:	d1 f2       	breq	.-76     	; 0x11aa <i2c_device_read+0xa6>
				{
					return(TRUE);
    11f6:	81 e0       	ldi	r24, 0x01	; 1
    11f8:	1b c0       	rjmp	.+54     	; 0x1230 <i2c_device_read+0x12c>
				}
			}
			else
			{
				data[index] = i2c_read_nack();
    11fa:	89 81       	ldd	r24, Y+1	; 0x01
    11fc:	88 2f       	mov	r24, r24
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	2c 81       	ldd	r18, Y+4	; 0x04
    1202:	3d 81       	ldd	r19, Y+5	; 0x05
    1204:	89 01       	movw	r16, r18
    1206:	08 0f       	add	r16, r24
    1208:	19 1f       	adc	r17, r25
    120a:	0e 94 01 08 	call	0x1002	; 0x1002 <i2c_read_nack>
    120e:	f8 01       	movw	r30, r16
    1210:	80 83       	st	Z, r24
				if(i2c_status(TW_MR_DATA_NACK))
    1212:	88 e5       	ldi	r24, 0x58	; 88
    1214:	0e 94 10 08 	call	0x1020	; 0x1020 <i2c_status>
    1218:	98 2f       	mov	r25, r24
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	99 23       	and	r25, r25
    121e:	09 f4       	brne	.+2      	; 0x1222 <i2c_device_read+0x11e>
    1220:	80 e0       	ldi	r24, 0x00	; 0
    1222:	88 23       	and	r24, r24
    1224:	11 f2       	breq	.-124    	; 0x11aa <i2c_device_read+0xa6>
				{
					return(TRUE);
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	03 c0       	rjmp	.+6      	; 0x1230 <i2c_device_read+0x12c>
				}
			}
		}

		i2c_stop();
    122a:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <i2c_stop>

		#endif  /* #ifndef DEBUG_WITHOUT_I2C */

	return(FALSE);
    122e:	80 e0       	ldi	r24, 0x00	; 0
}
    1230:	26 96       	adiw	r28, 0x06	; 6
    1232:	0f b6       	in	r0, 0x3f	; 63
    1234:	f8 94       	cli
    1236:	de bf       	out	0x3e, r29	; 62
    1238:	0f be       	out	0x3f, r0	; 63
    123a:	cd bf       	out	0x3d, r28	; 61
    123c:	df 91       	pop	r29
    123e:	cf 91       	pop	r28
    1240:	1f 91       	pop	r17
    1242:	0f 91       	pop	r16
    1244:	08 95       	ret

00001246 <nextFullTxBuffer>:
	sprintf(g_tempMsgBuff, "> %s=%d%s", label, value, lineTerm);
	while((err = linkbus_send_text(g_tempMsgBuff)))
	{
		;
	}
	while(!err && linkbusTxInProgress())
    1246:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <_ZZ16nextFullTxBufferE11bufferIndex>
    124a:	93 e0       	ldi	r25, 0x03	; 3
    124c:	59 e2       	ldi	r21, 0x29	; 41
    124e:	28 2f       	mov	r18, r24
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	52 9f       	mul	r21, r18
    1254:	f0 01       	movw	r30, r0
    1256:	53 9f       	mul	r21, r19
    1258:	f0 0d       	add	r31, r0
    125a:	11 24       	eor	r1, r1
    125c:	e7 50       	subi	r30, 0x07	; 7
    125e:	fd 4f       	sbci	r31, 0xFD	; 253
    1260:	40 81       	ld	r20, Z
    1262:	41 11       	cpse	r20, r1
    1264:	0c c0       	rjmp	.+24     	; 0x127e <nextFullTxBuffer+0x38>
    1266:	91 50       	subi	r25, 0x01	; 1
    1268:	29 f0       	breq	.+10     	; 0x1274 <nextFullTxBuffer+0x2e>
    126a:	8f 5f       	subi	r24, 0xFF	; 255
    126c:	83 30       	cpi	r24, 0x03	; 3
    126e:	78 f3       	brcs	.-34     	; 0x124e <nextFullTxBuffer+0x8>
    1270:	80 e0       	ldi	r24, 0x00	; 0
    1272:	ed cf       	rjmp	.-38     	; 0x124e <nextFullTxBuffer+0x8>
    1274:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <_ZZ16nextFullTxBufferE11bufferIndex>
    1278:	80 e0       	ldi	r24, 0x00	; 0
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	08 95       	ret
    127e:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <_ZZ16nextFullTxBufferE11bufferIndex>
    1282:	49 e2       	ldi	r20, 0x29	; 41
    1284:	42 9f       	mul	r20, r18
    1286:	c0 01       	movw	r24, r0
    1288:	43 9f       	mul	r20, r19
    128a:	90 0d       	add	r25, r0
    128c:	11 24       	eor	r1, r1
    128e:	87 50       	subi	r24, 0x07	; 7
    1290:	9d 4f       	sbci	r25, 0xFD	; 253
    1292:	08 95       	ret

00001294 <nextEmptyTxBuffer>:
    1294:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <_ZZ17nextEmptyTxBufferE11bufferIndex>
    1298:	93 e0       	ldi	r25, 0x03	; 3
    129a:	59 e2       	ldi	r21, 0x29	; 41
    129c:	28 2f       	mov	r18, r24
    129e:	30 e0       	ldi	r19, 0x00	; 0
    12a0:	52 9f       	mul	r21, r18
    12a2:	f0 01       	movw	r30, r0
    12a4:	53 9f       	mul	r21, r19
    12a6:	f0 0d       	add	r31, r0
    12a8:	11 24       	eor	r1, r1
    12aa:	e7 50       	subi	r30, 0x07	; 7
    12ac:	fd 4f       	sbci	r31, 0xFD	; 253
    12ae:	40 81       	ld	r20, Z
    12b0:	44 23       	and	r20, r20
    12b2:	61 f0       	breq	.+24     	; 0x12cc <nextEmptyTxBuffer+0x38>
    12b4:	91 50       	subi	r25, 0x01	; 1
    12b6:	29 f0       	breq	.+10     	; 0x12c2 <nextEmptyTxBuffer+0x2e>
    12b8:	8f 5f       	subi	r24, 0xFF	; 255
    12ba:	83 30       	cpi	r24, 0x03	; 3
    12bc:	78 f3       	brcs	.-34     	; 0x129c <nextEmptyTxBuffer+0x8>
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	ed cf       	rjmp	.-38     	; 0x129c <nextEmptyTxBuffer+0x8>
    12c2:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <_ZZ17nextEmptyTxBufferE11bufferIndex>
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	08 95       	ret
    12cc:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <_ZZ17nextEmptyTxBufferE11bufferIndex>
    12d0:	49 e2       	ldi	r20, 0x29	; 41
    12d2:	42 9f       	mul	r20, r18
    12d4:	c0 01       	movw	r24, r0
    12d6:	43 9f       	mul	r20, r19
    12d8:	90 0d       	add	r25, r0
    12da:	11 24       	eor	r1, r1
    12dc:	87 50       	subi	r24, 0x07	; 7
    12de:	9d 4f       	sbci	r25, 0xFD	; 253
    12e0:	08 95       	ret

000012e2 <nextEmptyRxBuffer>:
    12e2:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <__data_end>
    12e6:	28 2f       	mov	r18, r24
    12e8:	30 e0       	ldi	r19, 0x00	; 0
    12ea:	9f e3       	ldi	r25, 0x3F	; 63
    12ec:	89 9f       	mul	r24, r25
    12ee:	f0 01       	movw	r30, r0
    12f0:	11 24       	eor	r1, r1
    12f2:	e5 58       	subi	r30, 0x85	; 133
    12f4:	fd 4f       	sbci	r31, 0xFD	; 253
    12f6:	41 81       	ldd	r20, Z+1	; 0x01
    12f8:	52 81       	ldd	r21, Z+2	; 0x02
    12fa:	45 2b       	or	r20, r21
    12fc:	a9 f0       	breq	.+42     	; 0x1328 <nextEmptyRxBuffer+0x46>
    12fe:	8f 5f       	subi	r24, 0xFF	; 255
    1300:	82 30       	cpi	r24, 0x02	; 2
    1302:	08 f0       	brcs	.+2      	; 0x1306 <nextEmptyRxBuffer+0x24>
    1304:	80 e0       	ldi	r24, 0x00	; 0
    1306:	28 2f       	mov	r18, r24
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	9f e3       	ldi	r25, 0x3F	; 63
    130c:	89 9f       	mul	r24, r25
    130e:	f0 01       	movw	r30, r0
    1310:	11 24       	eor	r1, r1
    1312:	e5 58       	subi	r30, 0x85	; 133
    1314:	fd 4f       	sbci	r31, 0xFD	; 253
    1316:	41 81       	ldd	r20, Z+1	; 0x01
    1318:	52 81       	ldd	r21, Z+2	; 0x02
    131a:	45 2b       	or	r20, r21
    131c:	29 f0       	breq	.+10     	; 0x1328 <nextEmptyRxBuffer+0x46>
    131e:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <__data_end>
    1322:	80 e0       	ldi	r24, 0x00	; 0
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	08 95       	ret
    1328:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <__data_end>
    132c:	4f e3       	ldi	r20, 0x3F	; 63
    132e:	42 9f       	mul	r20, r18
    1330:	c0 01       	movw	r24, r0
    1332:	43 9f       	mul	r20, r19
    1334:	90 0d       	add	r25, r0
    1336:	11 24       	eor	r1, r1
    1338:	85 58       	subi	r24, 0x85	; 133
    133a:	9d 4f       	sbci	r25, 0xFD	; 253
    133c:	08 95       	ret

0000133e <linkbusTxInProgress>:
    133e:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <_ZL17linkbus_tx_active>
    1342:	08 95       	ret

00001344 <_Z16linkbus_start_txv>:
    1344:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <_ZL17linkbus_tx_active>
    1348:	81 e0       	ldi	r24, 0x01	; 1
    134a:	91 11       	cpse	r25, r1
    134c:	80 e0       	ldi	r24, 0x00	; 0
    134e:	91 11       	cpse	r25, r1
    1350:	08 c0       	rjmp	.+16     	; 0x1362 <_Z16linkbus_start_txv+0x1e>
    1352:	91 e0       	ldi	r25, 0x01	; 1
    1354:	90 93 74 03 	sts	0x0374, r25	; 0x800374 <_ZL17linkbus_tx_active>
    1358:	e1 ec       	ldi	r30, 0xC1	; 193
    135a:	f0 e0       	ldi	r31, 0x00	; 0
    135c:	90 81       	ld	r25, Z
    135e:	90 62       	ori	r25, 0x20	; 32
    1360:	90 83       	st	Z, r25
    1362:	08 95       	ret

00001364 <linkbus_end_tx>:
    1364:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <_ZL17linkbus_tx_active>
    1368:	88 23       	and	r24, r24
    136a:	39 f0       	breq	.+14     	; 0x137a <linkbus_end_tx+0x16>
    136c:	e1 ec       	ldi	r30, 0xC1	; 193
    136e:	f0 e0       	ldi	r31, 0x00	; 0
    1370:	80 81       	ld	r24, Z
    1372:	8f 7d       	andi	r24, 0xDF	; 223
    1374:	80 83       	st	Z, r24
    1376:	10 92 74 03 	sts	0x0374, r1	; 0x800374 <_ZL17linkbus_tx_active>
    137a:	08 95       	ret

0000137c <linkbus_init>:
    137c:	0f 93       	push	r16
    137e:	1f 93       	push	r17
    1380:	8b 01       	movw	r16, r22
    1382:	9c 01       	movw	r18, r24
    1384:	8e e7       	ldi	r24, 0x7E	; 126
    1386:	eb e7       	ldi	r30, 0x7B	; 123
    1388:	f2 e0       	ldi	r31, 0x02	; 2
    138a:	df 01       	movw	r26, r30
    138c:	1d 92       	st	X+, r1
    138e:	8a 95       	dec	r24
    1390:	e9 f7       	brne	.-6      	; 0x138c <linkbus_init+0x10>
    1392:	e9 ef       	ldi	r30, 0xF9	; 249
    1394:	f2 e0       	ldi	r31, 0x02	; 2
    1396:	10 82       	st	Z, r1
    1398:	11 a6       	std	Z+41, r1	; 0x29
    139a:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <_ZL9tx_buffer+0x52>
    139e:	d9 01       	movw	r26, r18
    13a0:	c8 01       	movw	r24, r16
    13a2:	80 58       	subi	r24, 0x80	; 128
    13a4:	9b 47       	sbci	r25, 0x7B	; 123
    13a6:	a1 4e       	sbci	r26, 0xE1	; 225
    13a8:	bf 4f       	sbci	r27, 0xFF	; 255
    13aa:	88 0f       	add	r24, r24
    13ac:	99 1f       	adc	r25, r25
    13ae:	aa 1f       	adc	r26, r26
    13b0:	bb 1f       	adc	r27, r27
    13b2:	88 0f       	add	r24, r24
    13b4:	99 1f       	adc	r25, r25
    13b6:	aa 1f       	adc	r26, r26
    13b8:	bb 1f       	adc	r27, r27
    13ba:	bc 01       	movw	r22, r24
    13bc:	cd 01       	movw	r24, r26
    13be:	66 0f       	add	r22, r22
    13c0:	77 1f       	adc	r23, r23
    13c2:	88 1f       	adc	r24, r24
    13c4:	99 1f       	adc	r25, r25
    13c6:	00 0f       	add	r16, r16
    13c8:	11 1f       	adc	r17, r17
    13ca:	22 1f       	adc	r18, r18
    13cc:	33 1f       	adc	r19, r19
    13ce:	00 0f       	add	r16, r16
    13d0:	11 1f       	adc	r17, r17
    13d2:	22 1f       	adc	r18, r18
    13d4:	33 1f       	adc	r19, r19
    13d6:	a9 01       	movw	r20, r18
    13d8:	98 01       	movw	r18, r16
    13da:	22 0f       	add	r18, r18
    13dc:	33 1f       	adc	r19, r19
    13de:	44 1f       	adc	r20, r20
    13e0:	55 1f       	adc	r21, r21
    13e2:	22 0f       	add	r18, r18
    13e4:	33 1f       	adc	r19, r19
    13e6:	44 1f       	adc	r20, r20
    13e8:	55 1f       	adc	r21, r21
    13ea:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <__udivmodsi4>
    13ee:	21 50       	subi	r18, 0x01	; 1
    13f0:	31 09       	sbc	r19, r1
    13f2:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
    13f6:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
    13fa:	88 e9       	ldi	r24, 0x98	; 152
    13fc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    1400:	8e e0       	ldi	r24, 0x0E	; 14
    1402:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
    1406:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_ZL14g_bus_disabled>
    140a:	1f 91       	pop	r17
    140c:	0f 91       	pop	r16
    140e:	08 95       	ret

00001410 <linkbus_disable>:
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <_ZL14g_bus_disabled>
    1416:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    141a:	0e 94 b2 09 	call	0x1364	; 0x1364 <linkbus_end_tx>
    141e:	8e e7       	ldi	r24, 0x7E	; 126
    1420:	eb e7       	ldi	r30, 0x7B	; 123
    1422:	f2 e0       	ldi	r31, 0x02	; 2
    1424:	df 01       	movw	r26, r30
    1426:	1d 92       	st	X+, r1
    1428:	8a 95       	dec	r24
    142a:	e9 f7       	brne	.-6      	; 0x1426 <linkbus_disable+0x16>
    142c:	e9 ef       	ldi	r30, 0xF9	; 249
    142e:	f2 e0       	ldi	r31, 0x02	; 2
    1430:	10 82       	st	Z, r1
    1432:	11 a6       	std	Z+41, r1	; 0x29
    1434:	10 92 4b 03 	sts	0x034B, r1	; 0x80034b <_ZL9tx_buffer+0x52>
    1438:	08 95       	ret

0000143a <_Z17linkbus_send_textPc>:
    143a:	0f 93       	push	r16
    143c:	1f 93       	push	r17
    143e:	cf 93       	push	r28
    1440:	df 93       	push	r29
    1442:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <_ZL14g_bus_disabled>
    1446:	21 11       	cpse	r18, r1
    1448:	14 c0       	rjmp	.+40     	; 0x1472 <_Z17linkbus_send_textPc+0x38>
    144a:	00 97       	sbiw	r24, 0x00	; 0
    144c:	a1 f0       	breq	.+40     	; 0x1476 <_Z17linkbus_send_textPc+0x3c>
    144e:	8c 01       	movw	r16, r24
    1450:	0e 94 4a 09 	call	0x1294	; 0x1294 <nextEmptyTxBuffer>
    1454:	00 97       	sbiw	r24, 0x00	; 0
    1456:	b9 f4       	brne	.+46     	; 0x1486 <_Z17linkbus_send_textPc+0x4c>
    1458:	c8 ec       	ldi	r28, 0xC8	; 200
    145a:	d0 e0       	ldi	r29, 0x00	; 0
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <_Z17linkbus_send_textPc+0x28>
    145e:	20 97       	sbiw	r28, 0x00	; 0
    1460:	61 f0       	breq	.+24     	; 0x147a <_Z17linkbus_send_textPc+0x40>
    1462:	90 91 74 03 	lds	r25, 0x0374	; 0x800374 <_ZL17linkbus_tx_active>
    1466:	99 23       	and	r25, r25
    1468:	51 f0       	breq	.+20     	; 0x147e <_Z17linkbus_send_textPc+0x44>
    146a:	20 97       	sbiw	r28, 0x00	; 0
    146c:	d1 f0       	breq	.+52     	; 0x14a2 <_Z17linkbus_send_textPc+0x68>
    146e:	21 97       	sbiw	r28, 0x01	; 1
    1470:	f8 cf       	rjmp	.-16     	; 0x1462 <_Z17linkbus_send_textPc+0x28>
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	1b c0       	rjmp	.+54     	; 0x14ac <_Z17linkbus_send_textPc+0x72>
    1476:	81 e0       	ldi	r24, 0x01	; 1
    1478:	19 c0       	rjmp	.+50     	; 0x14ac <_Z17linkbus_send_textPc+0x72>
    147a:	81 e0       	ldi	r24, 0x01	; 1
    147c:	17 c0       	rjmp	.+46     	; 0x14ac <_Z17linkbus_send_textPc+0x72>
    147e:	0e 94 4a 09 	call	0x1294	; 0x1294 <nextEmptyTxBuffer>
    1482:	00 97       	sbiw	r24, 0x00	; 0
    1484:	61 f3       	breq	.-40     	; 0x145e <_Z17linkbus_send_textPc+0x24>
    1486:	1f 93       	push	r17
    1488:	0f 93       	push	r16
    148a:	9f 93       	push	r25
    148c:	8f 93       	push	r24
    148e:	0e 94 4a 18 	call	0x3094	; 0x3094 <sprintf>
    1492:	0e 94 a2 09 	call	0x1344	; 0x1344 <_Z16linkbus_start_txv>
    1496:	0f 90       	pop	r0
    1498:	0f 90       	pop	r0
    149a:	0f 90       	pop	r0
    149c:	0f 90       	pop	r0
    149e:	80 e0       	ldi	r24, 0x00	; 0
    14a0:	05 c0       	rjmp	.+10     	; 0x14ac <_Z17linkbus_send_textPc+0x72>
    14a2:	0e 94 4a 09 	call	0x1294	; 0x1294 <nextEmptyTxBuffer>
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	71 f7       	brne	.-36     	; 0x1486 <_Z17linkbus_send_textPc+0x4c>
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	df 91       	pop	r29
    14ae:	cf 91       	pop	r28
    14b0:	1f 91       	pop	r17
    14b2:	0f 91       	pop	r16
    14b4:	08 95       	ret

000014b6 <lb_send_NewLine>:
    14b6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <_ZL14g_bus_disabled>
    14ba:	81 11       	cpse	r24, r1
    14bc:	04 c0       	rjmp	.+8      	; 0x14c6 <lb_send_NewLine+0x10>
    14be:	8e e6       	ldi	r24, 0x6E	; 110
    14c0:	91 e0       	ldi	r25, 0x01	; 1
    14c2:	0e 94 1d 0a 	call	0x143a	; 0x143a <_Z17linkbus_send_textPc>
    14c6:	08 95       	ret

000014c8 <lb_echo_char>:
    14c8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_ZL14g_bus_disabled>
    14cc:	91 11       	cpse	r25, r1
    14ce:	07 c0       	rjmp	.+14     	; 0x14de <lb_echo_char+0x16>
    14d0:	e5 e7       	ldi	r30, 0x75	; 117
    14d2:	f3 e0       	ldi	r31, 0x03	; 3
    14d4:	80 83       	st	Z, r24
    14d6:	11 82       	std	Z+1, r1	; 0x01
    14d8:	cf 01       	movw	r24, r30
    14da:	0e 94 1d 0a 	call	0x143a	; 0x143a <_Z17linkbus_send_textPc>
    14de:	08 95       	ret

000014e0 <lb_send_string>:
    14e0:	cf 93       	push	r28
    14e2:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <_ZL14g_bus_disabled>
    14e6:	21 11       	cpse	r18, r1
    14e8:	28 c0       	rjmp	.+80     	; 0x153a <lb_send_string+0x5a>
    14ea:	00 97       	sbiw	r24, 0x00	; 0
    14ec:	41 f1       	breq	.+80     	; 0x153e <lb_send_string+0x5e>
    14ee:	fc 01       	movw	r30, r24
    14f0:	20 81       	ld	r18, Z
    14f2:	22 23       	and	r18, r18
    14f4:	31 f1       	breq	.+76     	; 0x1542 <lb_send_string+0x62>
    14f6:	01 90       	ld	r0, Z+
    14f8:	00 20       	and	r0, r0
    14fa:	e9 f7       	brne	.-6      	; 0x14f6 <lb_send_string+0x16>
    14fc:	31 97       	sbiw	r30, 0x01	; 1
    14fe:	e8 1b       	sub	r30, r24
    1500:	f9 0b       	sbc	r31, r25
    1502:	ba 97       	sbiw	r30, 0x2a	; 42
    1504:	00 f5       	brcc	.+64     	; 0x1546 <lb_send_string+0x66>
    1506:	c6 2f       	mov	r28, r22
    1508:	bc 01       	movw	r22, r24
    150a:	49 e2       	ldi	r20, 0x29	; 41
    150c:	50 e0       	ldi	r21, 0x00	; 0
    150e:	85 e7       	ldi	r24, 0x75	; 117
    1510:	93 e0       	ldi	r25, 0x03	; 3
    1512:	0e 94 3b 18 	call	0x3076	; 0x3076 <strncpy>
    1516:	cc 23       	and	r28, r28
    1518:	59 f0       	breq	.+22     	; 0x1530 <lb_send_string+0x50>
    151a:	85 e7       	ldi	r24, 0x75	; 117
    151c:	93 e0       	ldi	r25, 0x03	; 3
    151e:	0e 94 1d 0a 	call	0x143a	; 0x143a <_Z17linkbus_send_textPc>
    1522:	81 11       	cpse	r24, r1
    1524:	fa cf       	rjmp	.-12     	; 0x151a <lb_send_string+0x3a>
    1526:	80 91 74 03 	lds	r24, 0x0374	; 0x800374 <_ZL17linkbus_tx_active>
    152a:	81 11       	cpse	r24, r1
    152c:	fc cf       	rjmp	.-8      	; 0x1526 <lb_send_string+0x46>
    152e:	0c c0       	rjmp	.+24     	; 0x1548 <lb_send_string+0x68>
    1530:	85 e7       	ldi	r24, 0x75	; 117
    1532:	93 e0       	ldi	r25, 0x03	; 3
    1534:	0e 94 1d 0a 	call	0x143a	; 0x143a <_Z17linkbus_send_textPc>
    1538:	07 c0       	rjmp	.+14     	; 0x1548 <lb_send_string+0x68>
    153a:	81 e0       	ldi	r24, 0x01	; 1
    153c:	05 c0       	rjmp	.+10     	; 0x1548 <lb_send_string+0x68>
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	03 c0       	rjmp	.+6      	; 0x1548 <lb_send_string+0x68>
    1542:	81 e0       	ldi	r24, 0x01	; 1
    1544:	01 c0       	rjmp	.+2      	; 0x1548 <lb_send_string+0x68>
    1546:	81 e0       	ldi	r24, 0x01	; 1
    1548:	cf 91       	pop	r28
    154a:	08 95       	ret

0000154c <lb_enabled>:
}


BOOL lb_enabled(void)
{
	return( !g_bus_disabled);
    154c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_ZL14g_bus_disabled>
    1550:	81 e0       	ldi	r24, 0x01	; 1
    1552:	91 11       	cpse	r25, r1
    1554:	80 e0       	ldi	r24, 0x00	; 0
}
    1556:	08 95       	ret

00001558 <__vector_6>:
	{
		key = D_KEY;
	}

	return( key);
}
    1558:	1f 92       	push	r1
    155a:	0f 92       	push	r0
    155c:	0f b6       	in	r0, 0x3f	; 63
    155e:	0f 92       	push	r0
    1560:	11 24       	eor	r1, r1
    1562:	8f 93       	push	r24
    1564:	ef 93       	push	r30
    1566:	ff 93       	push	r31
    1568:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
    156c:	80 91 2f 04 	lds	r24, 0x042F	; 0x80042f <_ZL24g_enableHardwareWDResets>
    1570:	81 11       	cpse	r24, r1
    1572:	05 c0       	rjmp	.+10     	; 0x157e <__vector_6+0x26>
    1574:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <_ZZ10__vector_6E5limit>
    1578:	81 11       	cpse	r24, r1
    157a:	09 c0       	rjmp	.+18     	; 0x158e <__vector_6+0x36>
    157c:	0e c0       	rjmp	.+28     	; 0x159a <__vector_6+0x42>
    157e:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <_ZZ10__vector_6E5limit>
    1582:	88 23       	and	r24, r24
    1584:	51 f0       	breq	.+20     	; 0x159a <__vector_6+0x42>
    1586:	81 50       	subi	r24, 0x01	; 1
    1588:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <_ZZ10__vector_6E5limit>
    158c:	06 c0       	rjmp	.+12     	; 0x159a <__vector_6+0x42>
    158e:	e0 e6       	ldi	r30, 0x60	; 96
    1590:	f0 e0       	ldi	r31, 0x00	; 0
    1592:	80 81       	ld	r24, Z
    1594:	80 64       	ori	r24, 0x40	; 64
    1596:	80 83       	st	Z, r24
    1598:	f2 cf       	rjmp	.-28     	; 0x157e <__vector_6+0x26>
    159a:	ff 91       	pop	r31
    159c:	ef 91       	pop	r30
    159e:	8f 91       	pop	r24
    15a0:	0f 90       	pop	r0
    15a2:	0f be       	out	0x3f, r0	; 63
    15a4:	0f 90       	pop	r0
    15a6:	1f 90       	pop	r1
    15a8:	18 95       	reti

000015aa <_Z8wdt_init7WDReset>:
    15aa:	a8 95       	wdr
    15ac:	04 b6       	in	r0, 0x34	; 52
    15ae:	03 fe       	sbrs	r0, 3
    15b0:	03 c0       	rjmp	.+6      	; 0x15b8 <_Z8wdt_init7WDReset+0xe>
    15b2:	94 b7       	in	r25, 0x34	; 52
    15b4:	98 70       	andi	r25, 0x08	; 8
    15b6:	94 bf       	out	0x34, r25	; 52
    15b8:	83 30       	cpi	r24, 0x03	; 3
    15ba:	61 f4       	brne	.+24     	; 0x15d4 <_Z8wdt_init7WDReset+0x2a>
    15bc:	84 b7       	in	r24, 0x34	; 52
    15be:	87 7f       	andi	r24, 0xF7	; 247
    15c0:	84 bf       	out	0x34, r24	; 52
    15c2:	e0 e6       	ldi	r30, 0x60	; 96
    15c4:	f0 e0       	ldi	r31, 0x00	; 0
    15c6:	80 81       	ld	r24, Z
    15c8:	88 61       	ori	r24, 0x18	; 24
    15ca:	80 83       	st	Z, r24
    15cc:	10 82       	st	Z, r1
    15ce:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <_ZL24g_enableHardwareWDResets>
    15d2:	08 95       	ret
    15d4:	81 30       	cpi	r24, 0x01	; 1
    15d6:	41 f4       	brne	.+16     	; 0x15e8 <_Z8wdt_init7WDReset+0x3e>
    15d8:	e0 e6       	ldi	r30, 0x60	; 96
    15da:	f0 e0       	ldi	r31, 0x00	; 0
    15dc:	90 81       	ld	r25, Z
    15de:	98 61       	ori	r25, 0x18	; 24
    15e0:	90 83       	st	Z, r25
    15e2:	98 e6       	ldi	r25, 0x68	; 104
    15e4:	90 83       	st	Z, r25
    15e6:	11 c0       	rjmp	.+34     	; 0x160a <_Z8wdt_init7WDReset+0x60>
    15e8:	81 11       	cpse	r24, r1
    15ea:	08 c0       	rjmp	.+16     	; 0x15fc <_Z8wdt_init7WDReset+0x52>
    15ec:	e0 e6       	ldi	r30, 0x60	; 96
    15ee:	f0 e0       	ldi	r31, 0x00	; 0
    15f0:	90 81       	ld	r25, Z
    15f2:	98 61       	ori	r25, 0x18	; 24
    15f4:	90 83       	st	Z, r25
    15f6:	96 e4       	ldi	r25, 0x46	; 70
    15f8:	90 83       	st	Z, r25
    15fa:	07 c0       	rjmp	.+14     	; 0x160a <_Z8wdt_init7WDReset+0x60>
    15fc:	e0 e6       	ldi	r30, 0x60	; 96
    15fe:	f0 e0       	ldi	r31, 0x00	; 0
    1600:	90 81       	ld	r25, Z
    1602:	98 61       	ori	r25, 0x18	; 24
    1604:	90 83       	st	Z, r25
    1606:	98 e4       	ldi	r25, 0x48	; 72
    1608:	90 83       	st	Z, r25
    160a:	91 e0       	ldi	r25, 0x01	; 1
    160c:	81 11       	cpse	r24, r1
    160e:	01 c0       	rjmp	.+2      	; 0x1612 <_Z8wdt_init7WDReset+0x68>
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	90 93 2f 04 	sts	0x042F, r25	; 0x80042f <_ZL24g_enableHardwareWDResets>
    1616:	08 95       	ret

00001618 <main>:
    1618:	63 e0       	ldi	r22, 0x03	; 3
    161a:	81 e1       	ldi	r24, 0x11	; 17
    161c:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1620:	61 e0       	ldi	r22, 0x01	; 1
    1622:	80 e1       	ldi	r24, 0x10	; 16
    1624:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1628:	60 e0       	ldi	r22, 0x00	; 0
    162a:	80 e1       	ldi	r24, 0x10	; 16
    162c:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1630:	61 e0       	ldi	r22, 0x01	; 1
    1632:	86 e0       	ldi	r24, 0x06	; 6
    1634:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1638:	60 e0       	ldi	r22, 0x00	; 0
    163a:	86 e0       	ldi	r24, 0x06	; 6
    163c:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1640:	61 e0       	ldi	r22, 0x01	; 1
    1642:	85 e0       	ldi	r24, 0x05	; 5
    1644:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1648:	60 e0       	ldi	r22, 0x00	; 0
    164a:	85 e0       	ldi	r24, 0x05	; 5
    164c:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1650:	61 e0       	ldi	r22, 0x01	; 1
    1652:	84 e0       	ldi	r24, 0x04	; 4
    1654:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1658:	60 e0       	ldi	r22, 0x00	; 0
    165a:	84 e0       	ldi	r24, 0x04	; 4
    165c:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1660:	60 e0       	ldi	r22, 0x00	; 0
    1662:	84 e1       	ldi	r24, 0x14	; 20
    1664:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1668:	60 e0       	ldi	r22, 0x00	; 0
    166a:	85 e1       	ldi	r24, 0x15	; 21
    166c:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1670:	61 e0       	ldi	r22, 0x01	; 1
    1672:	87 e0       	ldi	r24, 0x07	; 7
    1674:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1678:	61 e0       	ldi	r22, 0x01	; 1
    167a:	87 e0       	ldi	r24, 0x07	; 7
    167c:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1680:	63 e0       	ldi	r22, 0x03	; 3
    1682:	83 e1       	ldi	r24, 0x13	; 19
    1684:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1688:	63 e0       	ldi	r22, 0x03	; 3
    168a:	82 e1       	ldi	r24, 0x12	; 18
    168c:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    1690:	0e 94 08 0a 	call	0x1410	; 0x1410 <linkbus_disable>
    1694:	61 e0       	ldi	r22, 0x01	; 1
    1696:	83 e0       	ldi	r24, 0x03	; 3
    1698:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    169c:	60 e0       	ldi	r22, 0x00	; 0
    169e:	83 e0       	ldi	r24, 0x03	; 3
    16a0:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    16a4:	61 e0       	ldi	r22, 0x01	; 1
    16a6:	8e e0       	ldi	r24, 0x0E	; 14
    16a8:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	8e e0       	ldi	r24, 0x0E	; 14
    16b0:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    16b4:	61 e0       	ldi	r22, 0x01	; 1
    16b6:	8f e0       	ldi	r24, 0x0F	; 15
    16b8:	0e 94 9b 02 	call	0x536	; 0x536 <pinMode>
    16bc:	60 e0       	ldi	r22, 0x00	; 0
    16be:	8f e0       	ldi	r24, 0x0F	; 15
    16c0:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    16c4:	84 b1       	in	r24, 0x04	; 4
    16c6:	8f 63       	ori	r24, 0x3F	; 63
    16c8:	84 b9       	out	0x04, r24	; 4
    16ca:	85 b1       	in	r24, 0x05	; 5
    16cc:	80 7c       	andi	r24, 0xC0	; 192
    16ce:	85 b9       	out	0x05, r24	; 5
    16d0:	8d e6       	ldi	r24, 0x6D	; 109
    16d2:	94 e0       	ldi	r25, 0x04	; 4
    16d4:	0e 94 97 05 	call	0xb2e	; 0xb2e <_ZN13EepromManager20initializeEEPROMVarsEv>
    16d8:	c8 2f       	mov	r28, r24
    16da:	f8 94       	cli
    16dc:	a0 eb       	ldi	r26, 0xB0	; 176
    16de:	b0 e0       	ldi	r27, 0x00	; 0
    16e0:	1c 92       	st	X, r1
    16e2:	e1 eb       	ldi	r30, 0xB1	; 177
    16e4:	f0 e0       	ldi	r31, 0x00	; 0
    16e6:	10 82       	st	Z, r1
    16e8:	8c 91       	ld	r24, X
    16ea:	82 60       	ori	r24, 0x02	; 2
    16ec:	8c 93       	st	X, r24
    16ee:	80 81       	ld	r24, Z
    16f0:	87 60       	ori	r24, 0x07	; 7
    16f2:	80 83       	st	Z, r24
    16f4:	8c e0       	ldi	r24, 0x0C	; 12
    16f6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    16fa:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
    16fe:	e6 eb       	ldi	r30, 0xB6	; 182
    1700:	f0 e0       	ldi	r31, 0x00	; 0
    1702:	80 81       	ld	r24, Z
    1704:	8f 7d       	andi	r24, 0xDF	; 223
    1706:	80 83       	st	Z, r24
    1708:	e0 e7       	ldi	r30, 0x70	; 112
    170a:	f0 e0       	ldi	r31, 0x00	; 0
    170c:	10 82       	st	Z, r1
    170e:	80 81       	ld	r24, Z
    1710:	84 60       	ori	r24, 0x04	; 4
    1712:	80 83       	st	Z, r24
    1714:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    1718:	e1 e8       	ldi	r30, 0x81	; 129
    171a:	f0 e0       	ldi	r31, 0x00	; 0
    171c:	10 82       	st	Z, r1
    171e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    1722:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1726:	80 81       	ld	r24, Z
    1728:	88 60       	ori	r24, 0x08	; 8
    172a:	80 83       	st	Z, r24
    172c:	80 81       	ld	r24, Z
    172e:	81 60       	ori	r24, 0x01	; 1
    1730:	80 83       	st	Z, r24
    1732:	14 bc       	out	0x24, r1	; 36
    1734:	84 b5       	in	r24, 0x24	; 36
    1736:	82 60       	ori	r24, 0x02	; 2
    1738:	84 bd       	out	0x24, r24	; 36
    173a:	15 bc       	out	0x25, r1	; 37
    173c:	85 b5       	in	r24, 0x25	; 37
    173e:	84 60       	ori	r24, 0x04	; 4
    1740:	85 bd       	out	0x25, r24	; 37
    1742:	8f e2       	ldi	r24, 0x2F	; 47
    1744:	87 bd       	out	0x27, r24	; 39
    1746:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
    174a:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <__TEXT_REGION_LENGTH__+0x7f806d>
    174e:	ec e6       	ldi	r30, 0x6C	; 108
    1750:	f0 e0       	ldi	r31, 0x00	; 0
    1752:	10 82       	st	Z, r1
    1754:	88 e0       	ldi	r24, 0x08	; 8
    1756:	80 83       	st	Z, r24
    1758:	e8 e6       	ldi	r30, 0x68	; 104
    175a:	f0 e0       	ldi	r31, 0x00	; 0
    175c:	10 82       	st	Z, r1
    175e:	82 e0       	ldi	r24, 0x02	; 2
    1760:	80 83       	st	Z, r24
    1762:	80 91 4e 04 	lds	r24, 0x044E	; 0x80044e <g_AM_audio_frequency>
    1766:	78 94       	sei
    1768:	60 e0       	ldi	r22, 0x00	; 0
    176a:	71 ee       	ldi	r23, 0xE1	; 225
    176c:	80 e0       	ldi	r24, 0x00	; 0
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	0e 94 be 09 	call	0x137c	; 0x137c <linkbus_init>
    1774:	80 e0       	ldi	r24, 0x00	; 0
    1776:	0e 94 d5 0a 	call	0x15aa	; 0x15aa <_Z8wdt_init7WDReset>
    177a:	a8 95       	wdr
    177c:	81 e1       	ldi	r24, 0x11	; 17
    177e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <digitalRead>
    1782:	91 e0       	ldi	r25, 0x01	; 1
    1784:	81 11       	cpse	r24, r1
    1786:	90 e0       	ldi	r25, 0x00	; 0
    1788:	90 93 31 04 	sts	0x0431, r25	; 0x800431 <g_reset_button_held>
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	0e 94 4b 05 	call	0xa96	; 0xa96 <_Z10RTC_1s_sqwh>
    1792:	cc 23       	and	r28, r28
    1794:	31 f0       	breq	.+12     	; 0x17a2 <main+0x18a>
    1796:	61 e0       	ldi	r22, 0x01	; 1
    1798:	80 e7       	ldi	r24, 0x70	; 112
    179a:	91 e0       	ldi	r25, 0x01	; 1
    179c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <lb_send_string>
    17a0:	04 c0       	rjmp	.+8      	; 0x17aa <main+0x192>
    17a2:	8d e6       	ldi	r24, 0x6D	; 109
    17a4:	94 e0       	ldi	r25, 0x04	; 4
    17a6:	0e 94 92 05 	call	0xb24	; 0xb24 <_ZN13EepromManager17sendSuccessStringEv>
    17aa:	61 e0       	ldi	r22, 0x01	; 1
    17ac:	80 e1       	ldi	r24, 0x10	; 16
    17ae:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    17b2:	ff cf       	rjmp	.-2      	; 0x17b2 <main+0x19a>

000017b4 <__vector_21>:
    17b4:	1f 92       	push	r1
    17b6:	0f 92       	push	r0
    17b8:	0f b6       	in	r0, 0x3f	; 63
    17ba:	0f 92       	push	r0
    17bc:	11 24       	eor	r1, r1
    17be:	0f 90       	pop	r0
    17c0:	0f be       	out	0x3f, r0	; 63
    17c2:	0f 90       	pop	r0
    17c4:	1f 90       	pop	r1
    17c6:	18 95       	reti

000017c8 <__vector_18>:
    17c8:	1f 92       	push	r1
    17ca:	0f 92       	push	r0
    17cc:	0f b6       	in	r0, 0x3f	; 63
    17ce:	0f 92       	push	r0
    17d0:	11 24       	eor	r1, r1
    17d2:	1f 93       	push	r17
    17d4:	2f 93       	push	r18
    17d6:	3f 93       	push	r19
    17d8:	4f 93       	push	r20
    17da:	5f 93       	push	r21
    17dc:	6f 93       	push	r22
    17de:	7f 93       	push	r23
    17e0:	8f 93       	push	r24
    17e2:	9f 93       	push	r25
    17e4:	af 93       	push	r26
    17e6:	bf 93       	push	r27
    17e8:	cf 93       	push	r28
    17ea:	df 93       	push	r29
    17ec:	ef 93       	push	r30
    17ee:	ff 93       	push	r31
    17f0:	10 91 c6 00 	lds	r17, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    17f4:	c0 91 f8 03 	lds	r28, 0x03F8	; 0x8003f8 <_ZZ11__vector_18E4buff>
    17f8:	d0 91 f9 03 	lds	r29, 0x03F9	; 0x8003f9 <_ZZ11__vector_18E4buff+0x1>
    17fc:	20 97       	sbiw	r28, 0x00	; 0
    17fe:	51 f4       	brne	.+20     	; 0x1814 <__vector_18+0x4c>
    1800:	0e 94 71 09 	call	0x12e2	; 0x12e2 <nextEmptyRxBuffer>
    1804:	ec 01       	movw	r28, r24
    1806:	90 93 f9 03 	sts	0x03F9, r25	; 0x8003f9 <_ZZ11__vector_18E4buff+0x1>
    180a:	80 93 f8 03 	sts	0x03F8, r24	; 0x8003f8 <_ZZ11__vector_18E4buff>
    180e:	89 2b       	or	r24, r25
    1810:	09 f4       	brne	.+2      	; 0x1814 <__vector_18+0x4c>
    1812:	62 c1       	rjmp	.+708    	; 0x1ad8 <__vector_18+0x310>
    1814:	81 2f       	mov	r24, r17
    1816:	90 e0       	ldi	r25, 0x00	; 0
    1818:	0e 94 33 18 	call	0x3066	; 0x3066 <toupper>
    181c:	9c 01       	movw	r18, r24
    181e:	80 91 f7 03 	lds	r24, 0x03F7	; 0x8003f7 <_ZZ11__vector_18E11ignoreCount>
    1822:	88 23       	and	r24, r24
    1824:	21 f0       	breq	.+8      	; 0x182e <__vector_18+0x66>
    1826:	81 50       	subi	r24, 0x01	; 1
    1828:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <_ZZ11__vector_18E11ignoreCount>
    182c:	55 c1       	rjmp	.+682    	; 0x1ad8 <__vector_18+0x310>
    182e:	2b 31       	cpi	r18, 0x1B	; 27
    1830:	21 f4       	brne	.+8      	; 0x183a <__vector_18+0x72>
    1832:	82 e0       	ldi	r24, 0x02	; 2
    1834:	80 93 f7 03 	sts	0x03F7, r24	; 0x8003f7 <_ZZ11__vector_18E11ignoreCount>
    1838:	4f c1       	rjmp	.+670    	; 0x1ad8 <__vector_18+0x310>
    183a:	2d 30       	cpi	r18, 0x0D	; 13
    183c:	09 f0       	breq	.+2      	; 0x1840 <__vector_18+0x78>
    183e:	3f c0       	rjmp	.+126    	; 0x18be <__vector_18+0xf6>
    1840:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <_ZZ11__vector_18E13receiving_msg>
    1844:	88 23       	and	r24, r24
    1846:	31 f1       	breq	.+76     	; 0x1894 <__vector_18+0xcc>
    1848:	e0 91 f6 03 	lds	r30, 0x03F6	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    184c:	ee 23       	and	r30, r30
    184e:	f9 f0       	breq	.+62     	; 0x188e <__vector_18+0xc6>
    1850:	82 e0       	ldi	r24, 0x02	; 2
    1852:	88 83       	st	Y, r24
    1854:	80 91 b4 03 	lds	r24, 0x03B4	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1858:	90 91 b5 03 	lds	r25, 0x03B5	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    185c:	9a 83       	std	Y+2, r25	; 0x02
    185e:	89 83       	std	Y+1, r24	; 0x01
    1860:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    1864:	88 23       	and	r24, r24
    1866:	79 f0       	breq	.+30     	; 0x1886 <__vector_18+0xbe>
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	01 97       	sbiw	r24, 0x01	; 1
    186c:	40 91 b2 03 	lds	r20, 0x03B2	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    1870:	54 e1       	ldi	r21, 0x14	; 20
    1872:	58 9f       	mul	r21, r24
    1874:	90 01       	movw	r18, r0
    1876:	59 9f       	mul	r21, r25
    1878:	30 0d       	add	r19, r0
    187a:	11 24       	eor	r1, r1
    187c:	c2 0f       	add	r28, r18
    187e:	d3 1f       	adc	r29, r19
    1880:	c4 0f       	add	r28, r20
    1882:	d1 1d       	adc	r29, r1
    1884:	1b 82       	std	Y+3, r1	; 0x03
    1886:	f0 e0       	ldi	r31, 0x00	; 0
    1888:	e9 54       	subi	r30, 0x49	; 73
    188a:	fc 4f       	sbci	r31, 0xFC	; 252
    188c:	10 82       	st	Z, r1
    188e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <lb_send_NewLine>
    1892:	04 c0       	rjmp	.+8      	; 0x189c <__vector_18+0xd4>
    1894:	8f ef       	ldi	r24, 0xFF	; 255
    1896:	9f e7       	ldi	r25, 0x7F	; 127
    1898:	9a 83       	std	Y+2, r25	; 0x02
    189a:	89 83       	std	Y+1, r24	; 0x01
    189c:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    18a0:	10 92 b2 03 	sts	0x03B2, r1	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    18a4:	10 92 b5 03 	sts	0x03B5, r1	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    18a8:	10 92 b4 03 	sts	0x03B4, r1	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    18ac:	10 92 b3 03 	sts	0x03B3, r1	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    18b0:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <_ZZ11__vector_18E4buff+0x1>
    18b4:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <_ZZ11__vector_18E4buff>
    18b8:	10 92 b6 03 	sts	0x03B6, r1	; 0x8003b6 <_ZZ11__vector_18E13receiving_msg>
    18bc:	0d c1       	rjmp	.+538    	; 0x1ad8 <__vector_18+0x310>
    18be:	22 23       	and	r18, r18
    18c0:	09 f4       	brne	.+2      	; 0x18c4 <__vector_18+0xfc>
    18c2:	0a c1       	rjmp	.+532    	; 0x1ad8 <__vector_18+0x310>
    18c4:	e0 91 f6 03 	lds	r30, 0x03F6	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    18c8:	4e 2f       	mov	r20, r30
    18ca:	50 e0       	ldi	r21, 0x00	; 0
    18cc:	da 01       	movw	r26, r20
    18ce:	a9 54       	subi	r26, 0x49	; 73
    18d0:	bc 4f       	sbci	r27, 0xFC	; 252
    18d2:	2c 93       	st	X, r18
    18d4:	ee 23       	and	r30, r30
    18d6:	09 f4       	brne	.+2      	; 0x18da <__vector_18+0x112>
    18d8:	d6 c0       	rjmp	.+428    	; 0x1a86 <__vector_18+0x2be>
    18da:	2f 37       	cpi	r18, 0x7F	; 127
    18dc:	09 f0       	breq	.+2      	; 0x18e0 <__vector_18+0x118>
    18de:	5f c0       	rjmp	.+190    	; 0x199e <__vector_18+0x1d6>
    18e0:	e1 50       	subi	r30, 0x01	; 1
    18e2:	e0 93 f6 03 	sts	0x03F6, r30	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    18e6:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    18ea:	81 11       	cpse	r24, r1
    18ec:	13 c0       	rjmp	.+38     	; 0x1914 <__vector_18+0x14c>
    18ee:	f0 e0       	ldi	r31, 0x00	; 0
    18f0:	e9 54       	subi	r30, 0x49	; 73
    18f2:	fc 4f       	sbci	r31, 0xFC	; 252
    18f4:	40 81       	ld	r20, Z
    18f6:	80 91 b4 03 	lds	r24, 0x03B4	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    18fa:	90 91 b5 03 	lds	r25, 0x03B5	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    18fe:	84 1b       	sub	r24, r20
    1900:	91 09       	sbc	r25, r1
    1902:	6a e0       	ldi	r22, 0x0A	; 10
    1904:	70 e0       	ldi	r23, 0x00	; 0
    1906:	0e 94 af 17 	call	0x2f5e	; 0x2f5e <__divmodhi4>
    190a:	70 93 b5 03 	sts	0x03B5, r23	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    190e:	60 93 b4 03 	sts	0x03B4, r22	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1912:	39 c0       	rjmp	.+114    	; 0x1986 <__vector_18+0x1be>
    1914:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    1918:	99 23       	and	r25, r25
    191a:	91 f0       	breq	.+36     	; 0x1940 <__vector_18+0x178>
    191c:	4f ef       	ldi	r20, 0xFF	; 255
    191e:	49 0f       	add	r20, r25
    1920:	40 93 b2 03 	sts	0x03B2, r20	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	01 97       	sbiw	r24, 0x01	; 1
    1928:	54 e1       	ldi	r21, 0x14	; 20
    192a:	58 9f       	mul	r21, r24
    192c:	b0 01       	movw	r22, r0
    192e:	59 9f       	mul	r21, r25
    1930:	70 0d       	add	r23, r0
    1932:	11 24       	eor	r1, r1
    1934:	c6 0f       	add	r28, r22
    1936:	d7 1f       	adc	r29, r23
    1938:	c4 0f       	add	r28, r20
    193a:	d1 1d       	adc	r29, r1
    193c:	1b 82       	std	Y+3, r1	; 0x03
    193e:	23 c0       	rjmp	.+70     	; 0x1986 <__vector_18+0x1be>
    1940:	f0 e0       	ldi	r31, 0x00	; 0
    1942:	e9 54       	subi	r30, 0x49	; 73
    1944:	fc 4f       	sbci	r31, 0xFC	; 252
    1946:	90 81       	ld	r25, Z
    1948:	90 32       	cpi	r25, 0x20	; 32
    194a:	a1 f4       	brne	.+40     	; 0x1974 <__vector_18+0x1ac>
    194c:	81 50       	subi	r24, 0x01	; 1
    194e:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    1952:	de 01       	movw	r26, r28
    1954:	94 e1       	ldi	r25, 0x14	; 20
    1956:	89 9f       	mul	r24, r25
    1958:	a0 0d       	add	r26, r0
    195a:	b1 1d       	adc	r27, r1
    195c:	11 24       	eor	r1, r1
    195e:	13 96       	adiw	r26, 0x03	; 3
    1960:	fd 01       	movw	r30, r26
    1962:	01 90       	ld	r0, Z+
    1964:	00 20       	and	r0, r0
    1966:	e9 f7       	brne	.-6      	; 0x1962 <__vector_18+0x19a>
    1968:	31 97       	sbiw	r30, 0x01	; 1
    196a:	ea 1b       	sub	r30, r26
    196c:	fb 0b       	sbc	r31, r27
    196e:	e0 93 b2 03 	sts	0x03B2, r30	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    1972:	09 c0       	rjmp	.+18     	; 0x1986 <__vector_18+0x1be>
    1974:	94 e1       	ldi	r25, 0x14	; 20
    1976:	89 9f       	mul	r24, r25
    1978:	c0 0d       	add	r28, r0
    197a:	d1 1d       	adc	r29, r1
    197c:	11 24       	eor	r1, r1
    197e:	1b 82       	std	Y+3, r1	; 0x03
    1980:	81 50       	subi	r24, 0x01	; 1
    1982:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    1986:	80 91 f6 03 	lds	r24, 0x03F6	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    198a:	e8 2f       	mov	r30, r24
    198c:	f0 e0       	ldi	r31, 0x00	; 0
    198e:	e9 54       	subi	r30, 0x49	; 73
    1990:	fc 4f       	sbci	r31, 0xFC	; 252
    1992:	10 82       	st	Z, r1
    1994:	81 11       	cpse	r24, r1
    1996:	93 c0       	rjmp	.+294    	; 0x1abe <__vector_18+0x2f6>
    1998:	10 92 b6 03 	sts	0x03B6, r1	; 0x8003b6 <_ZZ11__vector_18E13receiving_msg>
    199c:	90 c0       	rjmp	.+288    	; 0x1abe <__vector_18+0x2f6>
    199e:	20 32       	cpi	r18, 0x20	; 32
    19a0:	79 f5       	brne	.+94     	; 0x1a00 <__vector_18+0x238>
    19a2:	fa 01       	movw	r30, r20
    19a4:	ea 54       	subi	r30, 0x4A	; 74
    19a6:	fc 4f       	sbci	r31, 0xFC	; 252
    19a8:	80 81       	ld	r24, Z
    19aa:	80 32       	cpi	r24, 0x20	; 32
    19ac:	09 f4       	brne	.+2      	; 0x19b0 <__vector_18+0x1e8>
    19ae:	94 c0       	rjmp	.+296    	; 0x1ad8 <__vector_18+0x310>
    19b0:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    19b4:	68 2f       	mov	r22, r24
    19b6:	70 e0       	ldi	r23, 0x00	; 0
    19b8:	fb 01       	movw	r30, r22
    19ba:	31 96       	adiw	r30, 0x01	; 1
    19bc:	33 97       	sbiw	r30, 0x03	; 3
    19be:	0c f0       	brlt	.+2      	; 0x19c2 <__vector_18+0x1fa>
    19c0:	8b c0       	rjmp	.+278    	; 0x1ad8 <__vector_18+0x310>
    19c2:	88 23       	and	r24, r24
    19c4:	79 f0       	breq	.+30     	; 0x19e4 <__vector_18+0x21c>
    19c6:	61 50       	subi	r22, 0x01	; 1
    19c8:	71 09       	sbc	r23, r1
    19ca:	90 91 b2 03 	lds	r25, 0x03B2	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    19ce:	a4 e1       	ldi	r26, 0x14	; 20
    19d0:	a6 9f       	mul	r26, r22
    19d2:	f0 01       	movw	r30, r0
    19d4:	a7 9f       	mul	r26, r23
    19d6:	f0 0d       	add	r31, r0
    19d8:	11 24       	eor	r1, r1
    19da:	ce 0f       	add	r28, r30
    19dc:	df 1f       	adc	r29, r31
    19de:	c9 0f       	add	r28, r25
    19e0:	d1 1d       	adc	r29, r1
    19e2:	1b 82       	std	Y+3, r1	; 0x03
    19e4:	8f 5f       	subi	r24, 0xFF	; 255
    19e6:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    19ea:	10 92 b2 03 	sts	0x03B2, r1	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    19ee:	4f 5f       	subi	r20, 0xFF	; 255
    19f0:	5f 4f       	sbci	r21, 0xFF	; 255
    19f2:	4e 33       	cpi	r20, 0x3E	; 62
    19f4:	51 05       	cpc	r21, r1
    19f6:	0c f0       	brlt	.+2      	; 0x19fa <__vector_18+0x232>
    19f8:	4e e3       	ldi	r20, 0x3E	; 62
    19fa:	40 93 f6 03 	sts	0x03F6, r20	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    19fe:	5f c0       	rjmp	.+190    	; 0x1abe <__vector_18+0x2f6>
    1a00:	80 91 b2 03 	lds	r24, 0x03B2	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    1a04:	84 31       	cpi	r24, 0x14	; 20
    1a06:	08 f0       	brcs	.+2      	; 0x1a0a <__vector_18+0x242>
    1a08:	67 c0       	rjmp	.+206    	; 0x1ad8 <__vector_18+0x310>
    1a0a:	40 91 b3 03 	lds	r20, 0x03B3	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    1a0e:	41 11       	cpse	r20, r1
    1a10:	19 c0       	rjmp	.+50     	; 0x1a44 <__vector_18+0x27c>
    1a12:	40 91 b4 03 	lds	r20, 0x03B4	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1a16:	50 91 b5 03 	lds	r21, 0x03B5	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    1a1a:	ba 01       	movw	r22, r20
    1a1c:	66 0f       	add	r22, r22
    1a1e:	77 1f       	adc	r23, r23
    1a20:	44 0f       	add	r20, r20
    1a22:	55 1f       	adc	r21, r21
    1a24:	44 0f       	add	r20, r20
    1a26:	55 1f       	adc	r21, r21
    1a28:	44 0f       	add	r20, r20
    1a2a:	55 1f       	adc	r21, r21
    1a2c:	46 0f       	add	r20, r22
    1a2e:	57 1f       	adc	r21, r23
    1a30:	42 0f       	add	r20, r18
    1a32:	51 1d       	adc	r21, r1
    1a34:	50 93 b5 03 	sts	0x03B5, r21	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    1a38:	40 93 b4 03 	sts	0x03B4, r20	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1a3c:	8f 5f       	subi	r24, 0xFF	; 255
    1a3e:	80 93 b2 03 	sts	0x03B2, r24	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    1a42:	16 c0       	rjmp	.+44     	; 0x1a70 <__vector_18+0x2a8>
    1a44:	50 e0       	ldi	r21, 0x00	; 0
    1a46:	41 50       	subi	r20, 0x01	; 1
    1a48:	51 09       	sbc	r21, r1
    1a4a:	91 e0       	ldi	r25, 0x01	; 1
    1a4c:	98 0f       	add	r25, r24
    1a4e:	90 93 b2 03 	sts	0x03B2, r25	; 0x8003b2 <_ZZ11__vector_18E9field_len>
    1a52:	e4 e1       	ldi	r30, 0x14	; 20
    1a54:	e4 9f       	mul	r30, r20
    1a56:	b0 01       	movw	r22, r0
    1a58:	e5 9f       	mul	r30, r21
    1a5a:	70 0d       	add	r23, r0
    1a5c:	11 24       	eor	r1, r1
    1a5e:	c6 0f       	add	r28, r22
    1a60:	d7 1f       	adc	r29, r23
    1a62:	fe 01       	movw	r30, r28
    1a64:	e8 0f       	add	r30, r24
    1a66:	f1 1d       	adc	r31, r1
    1a68:	23 83       	std	Z+3, r18	; 0x03
    1a6a:	c9 0f       	add	r28, r25
    1a6c:	d1 1d       	adc	r29, r1
    1a6e:	1b 82       	std	Y+3, r1	; 0x03
    1a70:	80 91 f6 03 	lds	r24, 0x03F6	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	01 96       	adiw	r24, 0x01	; 1
    1a78:	8e 33       	cpi	r24, 0x3E	; 62
    1a7a:	91 05       	cpc	r25, r1
    1a7c:	0c f0       	brlt	.+2      	; 0x1a80 <__vector_18+0x2b8>
    1a7e:	8e e3       	ldi	r24, 0x3E	; 62
    1a80:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    1a84:	1c c0       	rjmp	.+56     	; 0x1abe <__vector_18+0x2f6>
    1a86:	2f 37       	cpi	r18, 0x7F	; 127
    1a88:	41 f4       	brne	.+16     	; 0x1a9a <__vector_18+0x2d2>
    1a8a:	80 91 b4 03 	lds	r24, 0x03B4	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1a8e:	90 91 b5 03 	lds	r25, 0x03B5	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    1a92:	18 16       	cp	r1, r24
    1a94:	19 06       	cpc	r1, r25
    1a96:	bc f0       	brlt	.+46     	; 0x1ac6 <__vector_18+0x2fe>
    1a98:	1b c0       	rjmp	.+54     	; 0x1ad0 <__vector_18+0x308>
    1a9a:	20 32       	cpi	r18, 0x20	; 32
    1a9c:	e9 f0       	breq	.+58     	; 0x1ad8 <__vector_18+0x310>
    1a9e:	10 92 b3 03 	sts	0x03B3, r1	; 0x8003b3 <_ZZ11__vector_18E11field_index>
    1aa2:	c9 01       	movw	r24, r18
    1aa4:	99 27       	eor	r25, r25
    1aa6:	90 93 b5 03 	sts	0x03B5, r25	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    1aaa:	80 93 b4 03 	sts	0x03B4, r24	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1aae:	1b 82       	std	Y+3, r1	; 0x03
    1ab0:	1f 8a       	std	Y+23, r1	; 0x17
    1ab2:	1b a6       	std	Y+43, r1	; 0x2b
    1ab4:	81 e0       	ldi	r24, 0x01	; 1
    1ab6:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <_ZZ11__vector_18E13receiving_msg>
    1aba:	80 93 f6 03 	sts	0x03F6, r24	; 0x8003f6 <_ZZ11__vector_18E9charIndex>
    1abe:	82 2f       	mov	r24, r18
    1ac0:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <lb_echo_char>
    1ac4:	09 c0       	rjmp	.+18     	; 0x1ad8 <__vector_18+0x310>
    1ac6:	10 92 b5 03 	sts	0x03B5, r1	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    1aca:	10 92 b4 03 	sts	0x03B4, r1	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1ace:	f7 cf       	rjmp	.-18     	; 0x1abe <__vector_18+0x2f6>
    1ad0:	10 92 b5 03 	sts	0x03B5, r1	; 0x8003b5 <_ZZ11__vector_18E6msg_ID+0x1>
    1ad4:	10 92 b4 03 	sts	0x03B4, r1	; 0x8003b4 <_ZZ11__vector_18E6msg_ID>
    1ad8:	ff 91       	pop	r31
    1ada:	ef 91       	pop	r30
    1adc:	df 91       	pop	r29
    1ade:	cf 91       	pop	r28
    1ae0:	bf 91       	pop	r27
    1ae2:	af 91       	pop	r26
    1ae4:	9f 91       	pop	r25
    1ae6:	8f 91       	pop	r24
    1ae8:	7f 91       	pop	r23
    1aea:	6f 91       	pop	r22
    1aec:	5f 91       	pop	r21
    1aee:	4f 91       	pop	r20
    1af0:	3f 91       	pop	r19
    1af2:	2f 91       	pop	r18
    1af4:	1f 91       	pop	r17
    1af6:	0f 90       	pop	r0
    1af8:	0f be       	out	0x3f, r0	; 63
    1afa:	0f 90       	pop	r0
    1afc:	1f 90       	pop	r1
    1afe:	18 95       	reti

00001b00 <__vector_19>:
    1b00:	1f 92       	push	r1
    1b02:	0f 92       	push	r0
    1b04:	0f b6       	in	r0, 0x3f	; 63
    1b06:	0f 92       	push	r0
    1b08:	11 24       	eor	r1, r1
    1b0a:	2f 93       	push	r18
    1b0c:	3f 93       	push	r19
    1b0e:	4f 93       	push	r20
    1b10:	5f 93       	push	r21
    1b12:	6f 93       	push	r22
    1b14:	7f 93       	push	r23
    1b16:	8f 93       	push	r24
    1b18:	9f 93       	push	r25
    1b1a:	af 93       	push	r26
    1b1c:	bf 93       	push	r27
    1b1e:	ef 93       	push	r30
    1b20:	ff 93       	push	r31
    1b22:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <_ZZ11__vector_19E4buff>
    1b26:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <_ZZ11__vector_19E4buff+0x1>
    1b2a:	89 2b       	or	r24, r25
    1b2c:	31 f4       	brne	.+12     	; 0x1b3a <__vector_19+0x3a>
    1b2e:	0e 94 23 09 	call	0x1246	; 0x1246 <nextFullTxBuffer>
    1b32:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <_ZZ11__vector_19E4buff+0x1>
    1b36:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <_ZZ11__vector_19E4buff>
    1b3a:	e0 91 b0 03 	lds	r30, 0x03B0	; 0x8003b0 <_ZZ11__vector_19E4buff>
    1b3e:	f0 91 b1 03 	lds	r31, 0x03B1	; 0x8003b1 <_ZZ11__vector_19E4buff+0x1>
    1b42:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <_ZZ11__vector_19E9charIndex>
    1b46:	df 01       	movw	r26, r30
    1b48:	a8 0f       	add	r26, r24
    1b4a:	b1 1d       	adc	r27, r1
    1b4c:	9c 91       	ld	r25, X
    1b4e:	99 23       	and	r25, r25
    1b50:	31 f0       	breq	.+12     	; 0x1b5e <__vector_19+0x5e>
    1b52:	8f 5f       	subi	r24, 0xFF	; 255
    1b54:	80 93 af 03 	sts	0x03AF, r24	; 0x8003af <_ZZ11__vector_19E9charIndex>
    1b58:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    1b5c:	0d c0       	rjmp	.+26     	; 0x1b78 <__vector_19+0x78>
    1b5e:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <_ZZ11__vector_19E9charIndex>
    1b62:	10 82       	st	Z, r1
    1b64:	0e 94 23 09 	call	0x1246	; 0x1246 <nextFullTxBuffer>
    1b68:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <_ZZ11__vector_19E4buff+0x1>
    1b6c:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <_ZZ11__vector_19E4buff>
    1b70:	89 2b       	or	r24, r25
    1b72:	11 f4       	brne	.+4      	; 0x1b78 <__vector_19+0x78>
    1b74:	0e 94 b2 09 	call	0x1364	; 0x1364 <linkbus_end_tx>
    1b78:	ff 91       	pop	r31
    1b7a:	ef 91       	pop	r30
    1b7c:	bf 91       	pop	r27
    1b7e:	af 91       	pop	r26
    1b80:	9f 91       	pop	r25
    1b82:	8f 91       	pop	r24
    1b84:	7f 91       	pop	r23
    1b86:	6f 91       	pop	r22
    1b88:	5f 91       	pop	r21
    1b8a:	4f 91       	pop	r20
    1b8c:	3f 91       	pop	r19
    1b8e:	2f 91       	pop	r18
    1b90:	0f 90       	pop	r0
    1b92:	0f be       	out	0x3f, r0	; 63
    1b94:	0f 90       	pop	r0
    1b96:	1f 90       	pop	r1
    1b98:	18 95       	reti

00001b9a <__vector_8>:
    1b9a:	1f 92       	push	r1
    1b9c:	0f 92       	push	r0
    1b9e:	0f b6       	in	r0, 0x3f	; 63
    1ba0:	0f 92       	push	r0
    1ba2:	11 24       	eor	r1, r1
    1ba4:	1f 93       	push	r17
    1ba6:	2f 93       	push	r18
    1ba8:	3f 93       	push	r19
    1baa:	4f 93       	push	r20
    1bac:	5f 93       	push	r21
    1bae:	6f 93       	push	r22
    1bb0:	7f 93       	push	r23
    1bb2:	8f 93       	push	r24
    1bb4:	9f 93       	push	r25
    1bb6:	af 93       	push	r26
    1bb8:	bf 93       	push	r27
    1bba:	ef 93       	push	r30
    1bbc:	ff 93       	push	r31
    1bbe:	cf 93       	push	r28
    1bc0:	df 93       	push	r29
    1bc2:	00 d0       	rcall	.+0      	; 0x1bc4 <__vector_8+0x2a>
    1bc4:	cd b7       	in	r28, 0x3d	; 61
    1bc6:	de b7       	in	r29, 0x3e	; 62
    1bc8:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <g_tick_count>
    1bcc:	90 91 02 04 	lds	r25, 0x0402	; 0x800402 <g_tick_count+0x1>
    1bd0:	a0 91 03 04 	lds	r26, 0x0403	; 0x800403 <g_tick_count+0x2>
    1bd4:	b0 91 04 04 	lds	r27, 0x0404	; 0x800404 <g_tick_count+0x3>
    1bd8:	01 96       	adiw	r24, 0x01	; 1
    1bda:	a1 1d       	adc	r26, r1
    1bdc:	b1 1d       	adc	r27, r1
    1bde:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <g_tick_count>
    1be2:	90 93 02 04 	sts	0x0402, r25	; 0x800402 <g_tick_count+0x1>
    1be6:	a0 93 03 04 	sts	0x0403, r26	; 0x800403 <g_tick_count+0x2>
    1bea:	b0 93 04 04 	sts	0x0404, r27	; 0x800404 <g_tick_count+0x3>
    1bee:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <g_dtmf_error_countdown>
    1bf2:	90 91 60 04 	lds	r25, 0x0460	; 0x800460 <g_dtmf_error_countdown+0x1>
    1bf6:	89 2b       	or	r24, r25
    1bf8:	49 f0       	breq	.+18     	; 0x1c0c <__vector_8+0x72>
    1bfa:	80 91 5f 04 	lds	r24, 0x045F	; 0x80045f <g_dtmf_error_countdown>
    1bfe:	90 91 60 04 	lds	r25, 0x0460	; 0x800460 <g_dtmf_error_countdown+0x1>
    1c02:	01 97       	sbiw	r24, 0x01	; 1
    1c04:	90 93 60 04 	sts	0x0460, r25	; 0x800460 <g_dtmf_error_countdown+0x1>
    1c08:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <g_dtmf_error_countdown>
    1c0c:	80 91 fd 03 	lds	r24, 0x03FD	; 0x8003fd <g_LED_Enunciation_holdoff>
    1c10:	90 91 fe 03 	lds	r25, 0x03FE	; 0x8003fe <g_LED_Enunciation_holdoff+0x1>
    1c14:	89 2b       	or	r24, r25
    1c16:	49 f0       	breq	.+18     	; 0x1c2a <__vector_8+0x90>
    1c18:	80 91 fd 03 	lds	r24, 0x03FD	; 0x8003fd <g_LED_Enunciation_holdoff>
    1c1c:	90 91 fe 03 	lds	r25, 0x03FE	; 0x8003fe <g_LED_Enunciation_holdoff+0x1>
    1c20:	01 97       	sbiw	r24, 0x01	; 1
    1c22:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <g_LED_Enunciation_holdoff+0x1>
    1c26:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <g_LED_Enunciation_holdoff>
    1c2a:	80 91 3d 04 	lds	r24, 0x043D	; 0x80043d <g_dtmf_detected>
    1c2e:	88 23       	and	r24, r24
    1c30:	81 f0       	breq	.+32     	; 0x1c52 <__vector_8+0xb8>
    1c32:	80 91 ff 03 	lds	r24, 0x03FF	; 0x8003ff <g_tone_duration_ticks>
    1c36:	90 91 00 04 	lds	r25, 0x0400	; 0x800400 <g_tone_duration_ticks+0x1>
    1c3a:	01 96       	adiw	r24, 0x01	; 1
    1c3c:	90 93 00 04 	sts	0x0400, r25	; 0x800400 <g_tone_duration_ticks+0x1>
    1c40:	80 93 ff 03 	sts	0x03FF, r24	; 0x8003ff <g_tone_duration_ticks>
    1c44:	84 e9       	ldi	r24, 0x94	; 148
    1c46:	95 e0       	ldi	r25, 0x05	; 5
    1c48:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <g_LED_Enunciation_holdoff+0x1>
    1c4c:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <g_LED_Enunciation_holdoff>
    1c50:	04 c0       	rjmp	.+8      	; 0x1c5a <__vector_8+0xc0>
    1c52:	10 92 00 04 	sts	0x0400, r1	; 0x800400 <g_tone_duration_ticks+0x1>
    1c56:	10 92 ff 03 	sts	0x03FF, r1	; 0x8003ff <g_tone_duration_ticks>
    1c5a:	80 91 fb 03 	lds	r24, 0x03FB	; 0x8003fb <g_DTMF_sentence_in_progress_ticks>
    1c5e:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <g_DTMF_sentence_in_progress_ticks+0x1>
    1c62:	89 2b       	or	r24, r25
    1c64:	49 f0       	breq	.+18     	; 0x1c78 <__vector_8+0xde>
    1c66:	80 91 fb 03 	lds	r24, 0x03FB	; 0x8003fb <g_DTMF_sentence_in_progress_ticks>
    1c6a:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <g_DTMF_sentence_in_progress_ticks+0x1>
    1c6e:	01 97       	sbiw	r24, 0x01	; 1
    1c70:	90 93 fc 03 	sts	0x03FC, r25	; 0x8003fc <g_DTMF_sentence_in_progress_ticks+0x1>
    1c74:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <g_DTMF_sentence_in_progress_ticks>
    1c78:	81 e0       	ldi	r24, 0x01	; 1
    1c7a:	89 83       	std	Y+1, r24	; 0x01
    1c7c:	1a 82       	std	Y+2, r1	; 0x02
    1c7e:	81 e1       	ldi	r24, 0x11	; 17
    1c80:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <digitalRead>
    1c84:	18 2f       	mov	r17, r24
    1c86:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <g_reset_button_held>
    1c8a:	88 23       	and	r24, r24
    1c8c:	09 f4       	brne	.+2      	; 0x1c90 <__vector_8+0xf6>
    1c8e:	6a c1       	rjmp	.+724    	; 0x1f64 <__vector_8+0x3ca>
    1c90:	11 23       	and	r17, r17
    1c92:	09 f4       	brne	.+2      	; 0x1c96 <__vector_8+0xfc>
    1c94:	59 c1       	rjmp	.+690    	; 0x1f48 <__vector_8+0x3ae>
    1c96:	66 c1       	rjmp	.+716    	; 0x1f64 <__vector_8+0x3ca>
    1c98:	61 e0       	ldi	r22, 0x01	; 1
    1c9a:	80 e1       	ldi	r24, 0x10	; 16
    1c9c:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1ca0:	1b c0       	rjmp	.+54     	; 0x1cd8 <__vector_8+0x13e>
    1ca2:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <g_seconds_since_powerup>
    1ca6:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_seconds_since_powerup+0x1>
    1caa:	a0 91 67 04 	lds	r26, 0x0467	; 0x800467 <g_seconds_since_powerup+0x2>
    1cae:	b0 91 68 04 	lds	r27, 0x0468	; 0x800468 <g_seconds_since_powerup+0x3>
    1cb2:	05 97       	sbiw	r24, 0x05	; 5
    1cb4:	a1 05       	cpc	r26, r1
    1cb6:	b1 05       	cpc	r27, r1
    1cb8:	79 f4       	brne	.+30     	; 0x1cd8 <__vector_8+0x13e>
    1cba:	86 e0       	ldi	r24, 0x06	; 6
    1cbc:	90 e0       	ldi	r25, 0x00	; 0
    1cbe:	a0 e0       	ldi	r26, 0x00	; 0
    1cc0:	b0 e0       	ldi	r27, 0x00	; 0
    1cc2:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <g_seconds_since_powerup>
    1cc6:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <g_seconds_since_powerup+0x1>
    1cca:	a0 93 67 04 	sts	0x0467, r26	; 0x800467 <g_seconds_since_powerup+0x2>
    1cce:	b0 93 68 04 	sts	0x0468, r27	; 0x800468 <g_seconds_since_powerup+0x3>
    1cd2:	81 e0       	ldi	r24, 0x01	; 1
    1cd4:	80 93 30 04 	sts	0x0430, r24	; 0x800430 <g_perform_EEPROM_reset>
    1cd8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_ZZ10__vector_8E15holdButtonState>
    1cdc:	18 13       	cpse	r17, r24
    1cde:	28 c0       	rjmp	.+80     	; 0x1d30 <__vector_8+0x196>
    1ce0:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <g_sync_pin_timer>
    1ce4:	90 91 40 04 	lds	r25, 0x0440	; 0x800440 <g_sync_pin_timer+0x1>
    1ce8:	8b 3b       	cpi	r24, 0xBB	; 187
    1cea:	90 41       	sbci	r25, 0x10	; 16
    1cec:	4c f4       	brge	.+18     	; 0x1d00 <__vector_8+0x166>
    1cee:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <g_sync_pin_timer>
    1cf2:	90 91 40 04 	lds	r25, 0x0440	; 0x800440 <g_sync_pin_timer+0x1>
    1cf6:	01 96       	adiw	r24, 0x01	; 1
    1cf8:	90 93 40 04 	sts	0x0440, r25	; 0x800440 <g_sync_pin_timer+0x1>
    1cfc:	80 93 3f 04 	sts	0x043F, r24	; 0x80043f <g_sync_pin_timer>
    1d00:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <g_sync_pin_timer>
    1d04:	90 91 40 04 	lds	r25, 0x0440	; 0x800440 <g_sync_pin_timer+0x1>
    1d08:	80 39       	cpi	r24, 0x90	; 144
    1d0a:	91 05       	cpc	r25, r1
    1d0c:	bc f0       	brlt	.+46     	; 0x1d3c <__vector_8+0x1a2>
    1d0e:	11 30       	cpi	r17, 0x01	; 1
    1d10:	09 f4       	brne	.+2      	; 0x1d14 <__vector_8+0x17a>
    1d12:	2b c1       	rjmp	.+598    	; 0x1f6a <__vector_8+0x3d0>
    1d14:	82 e0       	ldi	r24, 0x02	; 2
    1d16:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <g_sync_pin_stable>
    1d1a:	11 11       	cpse	r17, r1
    1d1c:	0f c0       	rjmp	.+30     	; 0x1d3c <__vector_8+0x1a2>
    1d1e:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <g_reset_button_held>
    1d22:	81 11       	cpse	r24, r1
    1d24:	0b c0       	rjmp	.+22     	; 0x1d3c <__vector_8+0x1a2>
    1d26:	61 e0       	ldi	r22, 0x01	; 1
    1d28:	80 e1       	ldi	r24, 0x10	; 16
    1d2a:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1d2e:	06 c0       	rjmp	.+12     	; 0x1d3c <__vector_8+0x1a2>
    1d30:	10 93 02 01 	sts	0x0102, r17	; 0x800102 <_ZZ10__vector_8E15holdButtonState>
    1d34:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <g_sync_pin_timer+0x1>
    1d38:	10 92 3f 04 	sts	0x043F, r1	; 0x80043f <g_sync_pin_timer>
    1d3c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <g_transmissions_disabled>
    1d40:	81 11       	cpse	r24, r1
    1d42:	1d c1       	rjmp	.+570    	; 0x1f7e <__vector_8+0x3e4>
    1d44:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <g_on_the_air>
    1d48:	88 23       	and	r24, r24
    1d4a:	09 f4       	brne	.+2      	; 0x1d4e <__vector_8+0x1b4>
    1d4c:	18 c1       	rjmp	.+560    	; 0x1f7e <__vector_8+0x3e4>
    1d4e:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <_ZZ10__vector_8E11ptt_dropped>
    1d52:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <_ZZ10__vector_8E11ptt_dropped+0x1>
    1d56:	89 2b       	or	r24, r25
    1d58:	09 f4       	brne	.+2      	; 0x1d5c <__vector_8+0x1c2>
    1d5a:	0b c1       	rjmp	.+534    	; 0x1f72 <__vector_8+0x3d8>
    1d5c:	10 c1       	rjmp	.+544    	; 0x1f7e <__vector_8+0x3e4>
    1d5e:	61 e0       	ldi	r22, 0x01	; 1
    1d60:	84 e0       	ldi	r24, 0x04	; 4
    1d62:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1d66:	84 e9       	ldi	r24, 0x94	; 148
    1d68:	95 e0       	ldi	r25, 0x05	; 5
    1d6a:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <_ZZ10__vector_8E9ptt_delay+0x1>
    1d6e:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <_ZZ10__vector_8E9ptt_delay>
    1d72:	0b c1       	rjmp	.+534    	; 0x1f8a <__vector_8+0x3f0>
    1d74:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <_ZZ10__vector_8E9ptt_delay>
    1d78:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <_ZZ10__vector_8E9ptt_delay+0x1>
    1d7c:	00 97       	sbiw	r24, 0x00	; 0
    1d7e:	31 f0       	breq	.+12     	; 0x1d8c <__vector_8+0x1f2>
    1d80:	01 97       	sbiw	r24, 0x01	; 1
    1d82:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <_ZZ10__vector_8E9ptt_delay+0x1>
    1d86:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <_ZZ10__vector_8E9ptt_delay>
    1d8a:	ff c0       	rjmp	.+510    	; 0x1f8a <__vector_8+0x3f0>
    1d8c:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <_ZZ10__vector_8E7codeInc>
    1d90:	90 91 aa 03 	lds	r25, 0x03AA	; 0x8003aa <_ZZ10__vector_8E7codeInc+0x1>
    1d94:	00 97       	sbiw	r24, 0x00	; 0
    1d96:	f1 f1       	breq	.+124    	; 0x1e14 <__vector_8+0x27a>
    1d98:	01 97       	sbiw	r24, 0x01	; 1
    1d9a:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <_ZZ10__vector_8E7codeInc+0x1>
    1d9e:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <_ZZ10__vector_8E7codeInc>
    1da2:	89 2b       	or	r24, r25
    1da4:	09 f0       	breq	.+2      	; 0x1da8 <__vector_8+0x20e>
    1da6:	f1 c0       	rjmp	.+482    	; 0x1f8a <__vector_8+0x3f0>
    1da8:	ae 01       	movw	r20, r28
    1daa:	4e 5f       	subi	r20, 0xFE	; 254
    1dac:	5f 4f       	sbci	r21, 0xFF	; 255
    1dae:	be 01       	movw	r22, r28
    1db0:	6f 5f       	subi	r22, 0xFF	; 255
    1db2:	7f 4f       	sbci	r23, 0xFF	; 255
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	0e 94 64 14 	call	0x28c8	; 0x28c8 <makeMorse>
    1dbc:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <_ZZ10__vector_8E3key>
    1dc0:	89 81       	ldd	r24, Y+1	; 0x01
    1dc2:	81 11       	cpse	r24, r1
    1dc4:	14 c0       	rjmp	.+40     	; 0x1dee <__vector_8+0x254>
    1dc6:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc8:	88 23       	and	r24, r24
    1dca:	89 f0       	breq	.+34     	; 0x1dee <__vector_8+0x254>
    1dcc:	10 92 a8 03 	sts	0x03A8, r1	; 0x8003a8 <_ZZ10__vector_8E3key>
    1dd0:	81 e0       	ldi	r24, 0x01	; 1
    1dd2:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <g_callsign_sent>
    1dd6:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <g_use_ptt_periodic_reset>
    1dda:	88 23       	and	r24, r24
    1ddc:	41 f0       	breq	.+16     	; 0x1dee <__vector_8+0x254>
    1dde:	10 92 63 04 	sts	0x0463, r1	; 0x800463 <g_on_the_air>
    1de2:	84 e9       	ldi	r24, 0x94	; 148
    1de4:	95 e0       	ldi	r25, 0x05	; 5
    1de6:	90 93 ae 03 	sts	0x03AE, r25	; 0x8003ae <_ZZ10__vector_8E11ptt_dropped+0x1>
    1dea:	80 93 ad 03 	sts	0x03AD, r24	; 0x8003ad <_ZZ10__vector_8E11ptt_dropped>
    1dee:	60 91 a8 03 	lds	r22, 0x03A8	; 0x8003a8 <_ZZ10__vector_8E3key>
    1df2:	80 e1       	ldi	r24, 0x10	; 16
    1df4:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1df8:	60 91 a8 03 	lds	r22, 0x03A8	; 0x8003a8 <_ZZ10__vector_8E3key>
    1dfc:	86 e0       	ldi	r24, 0x06	; 6
    1dfe:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1e02:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <_ZZ10__vector_8E3key>
    1e06:	80 93 4f 04 	sts	0x044F, r24	; 0x80044f <g_sendAMmodulation>
    1e0a:	9f e2       	ldi	r25, 0x2F	; 47
    1e0c:	97 bd       	out	0x27, r25	; 39
    1e0e:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <g_audio_tone_state>
    1e12:	bb c0       	rjmp	.+374    	; 0x1f8a <__vector_8+0x3f0>
    1e14:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <g_sync_pin_stable>
    1e18:	82 30       	cpi	r24, 0x02	; 2
    1e1a:	29 f0       	breq	.+10     	; 0x1e26 <__vector_8+0x28c>
    1e1c:	60 91 a8 03 	lds	r22, 0x03A8	; 0x8003a8 <_ZZ10__vector_8E3key>
    1e20:	80 e1       	ldi	r24, 0x10	; 16
    1e22:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1e26:	60 91 a8 03 	lds	r22, 0x03A8	; 0x8003a8 <_ZZ10__vector_8E3key>
    1e2a:	86 e0       	ldi	r24, 0x06	; 6
    1e2c:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1e30:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <_ZZ10__vector_8E3key>
    1e34:	80 93 4f 04 	sts	0x044F, r24	; 0x80044f <g_sendAMmodulation>
    1e38:	9f e2       	ldi	r25, 0x2F	; 47
    1e3a:	97 bd       	out	0x27, r25	; 39
    1e3c:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <g_audio_tone_state>
    1e40:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <g_code_throttle>
    1e44:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <g_code_throttle+0x1>
    1e48:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <_ZZ10__vector_8E7codeInc+0x1>
    1e4c:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <_ZZ10__vector_8E7codeInc>
    1e50:	9c c0       	rjmp	.+312    	; 0x1f8a <__vector_8+0x3f0>
    1e52:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <_ZZ10__vector_8E9ptt_delay>
    1e56:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <_ZZ10__vector_8E9ptt_delay+0x1>
    1e5a:	00 97       	sbiw	r24, 0x00	; 0
    1e5c:	39 f4       	brne	.+14     	; 0x1e6c <__vector_8+0x2d2>
    1e5e:	84 e6       	ldi	r24, 0x64	; 100
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <_ZZ10__vector_8E9ptt_delay+0x1>
    1e66:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <_ZZ10__vector_8E9ptt_delay>
    1e6a:	1c c0       	rjmp	.+56     	; 0x1ea4 <__vector_8+0x30a>
    1e6c:	01 97       	sbiw	r24, 0x01	; 1
    1e6e:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <_ZZ10__vector_8E9ptt_delay+0x1>
    1e72:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <_ZZ10__vector_8E9ptt_delay>
    1e76:	89 2b       	or	r24, r25
    1e78:	a9 f4       	brne	.+42     	; 0x1ea4 <__vector_8+0x30a>
    1e7a:	60 e0       	ldi	r22, 0x00	; 0
    1e7c:	84 e0       	ldi	r24, 0x04	; 4
    1e7e:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1e82:	10 c0       	rjmp	.+32     	; 0x1ea4 <__vector_8+0x30a>
    1e84:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <_ZZ10__vector_8E11ptt_dropped>
    1e88:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <_ZZ10__vector_8E11ptt_dropped+0x1>
    1e8c:	00 97       	sbiw	r24, 0x00	; 0
    1e8e:	51 f0       	breq	.+20     	; 0x1ea4 <__vector_8+0x30a>
    1e90:	01 97       	sbiw	r24, 0x01	; 1
    1e92:	90 93 ae 03 	sts	0x03AE, r25	; 0x8003ae <_ZZ10__vector_8E11ptt_dropped+0x1>
    1e96:	80 93 ad 03 	sts	0x03AD, r24	; 0x8003ad <_ZZ10__vector_8E11ptt_dropped>
    1e9a:	89 2b       	or	r24, r25
    1e9c:	19 f4       	brne	.+6      	; 0x1ea4 <__vector_8+0x30a>
    1e9e:	81 e0       	ldi	r24, 0x01	; 1
    1ea0:	80 93 63 04 	sts	0x0463, r24	; 0x800463 <g_on_the_air>
    1ea4:	80 91 5e 04 	lds	r24, 0x045E	; 0x80045e <g_LED_enunciating>
    1ea8:	88 23       	and	r24, r24
    1eaa:	a9 f1       	breq	.+106    	; 0x1f16 <__vector_8+0x37c>
    1eac:	80 91 fd 03 	lds	r24, 0x03FD	; 0x8003fd <g_LED_Enunciation_holdoff>
    1eb0:	90 91 fe 03 	lds	r25, 0x03FE	; 0x8003fe <g_LED_Enunciation_holdoff+0x1>
    1eb4:	89 2b       	or	r24, r25
    1eb6:	e9 f5       	brne	.+122    	; 0x1f32 <__vector_8+0x398>
    1eb8:	80 91 a9 03 	lds	r24, 0x03A9	; 0x8003a9 <_ZZ10__vector_8E7codeInc>
    1ebc:	90 91 aa 03 	lds	r25, 0x03AA	; 0x8003aa <_ZZ10__vector_8E7codeInc+0x1>
    1ec0:	00 97       	sbiw	r24, 0x00	; 0
    1ec2:	01 f1       	breq	.+64     	; 0x1f04 <__vector_8+0x36a>
    1ec4:	01 97       	sbiw	r24, 0x01	; 1
    1ec6:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <_ZZ10__vector_8E7codeInc+0x1>
    1eca:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <_ZZ10__vector_8E7codeInc>
    1ece:	89 2b       	or	r24, r25
    1ed0:	81 f5       	brne	.+96     	; 0x1f32 <__vector_8+0x398>
    1ed2:	ae 01       	movw	r20, r28
    1ed4:	4e 5f       	subi	r20, 0xFE	; 254
    1ed6:	5f 4f       	sbci	r21, 0xFF	; 255
    1ed8:	be 01       	movw	r22, r28
    1eda:	6f 5f       	subi	r22, 0xFF	; 255
    1edc:	7f 4f       	sbci	r23, 0xFF	; 255
    1ede:	80 e0       	ldi	r24, 0x00	; 0
    1ee0:	90 e0       	ldi	r25, 0x00	; 0
    1ee2:	0e 94 64 14 	call	0x28c8	; 0x28c8 <makeMorse>
    1ee6:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <_ZZ10__vector_8E3key>
    1eea:	68 2f       	mov	r22, r24
    1eec:	80 e1       	ldi	r24, 0x10	; 16
    1eee:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1ef2:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <g_code_throttle>
    1ef6:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <g_code_throttle+0x1>
    1efa:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <_ZZ10__vector_8E7codeInc+0x1>
    1efe:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <_ZZ10__vector_8E7codeInc>
    1f02:	17 c0       	rjmp	.+46     	; 0x1f32 <__vector_8+0x398>
    1f04:	80 91 61 04 	lds	r24, 0x0461	; 0x800461 <g_code_throttle>
    1f08:	90 91 62 04 	lds	r25, 0x0462	; 0x800462 <g_code_throttle+0x1>
    1f0c:	90 93 aa 03 	sts	0x03AA, r25	; 0x8003aa <_ZZ10__vector_8E7codeInc+0x1>
    1f10:	80 93 a9 03 	sts	0x03A9, r24	; 0x8003a9 <_ZZ10__vector_8E7codeInc>
    1f14:	0e c0       	rjmp	.+28     	; 0x1f32 <__vector_8+0x398>
    1f16:	80 91 a8 03 	lds	r24, 0x03A8	; 0x8003a8 <_ZZ10__vector_8E3key>
    1f1a:	88 23       	and	r24, r24
    1f1c:	51 f0       	breq	.+20     	; 0x1f32 <__vector_8+0x398>
    1f1e:	10 92 a8 03 	sts	0x03A8, r1	; 0x8003a8 <_ZZ10__vector_8E3key>
    1f22:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <g_sync_pin_stable>
    1f26:	82 30       	cpi	r24, 0x02	; 2
    1f28:	21 f0       	breq	.+8      	; 0x1f32 <__vector_8+0x398>
    1f2a:	60 e0       	ldi	r22, 0x00	; 0
    1f2c:	80 e1       	ldi	r24, 0x10	; 16
    1f2e:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1f32:	60 e0       	ldi	r22, 0x00	; 0
    1f34:	86 e0       	ldi	r24, 0x06	; 6
    1f36:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1f3a:	10 92 4f 04 	sts	0x044F, r1	; 0x80044f <g_sendAMmodulation>
    1f3e:	8f e2       	ldi	r24, 0x2F	; 47
    1f40:	87 bd       	out	0x27, r24	; 39
    1f42:	10 92 41 04 	sts	0x0441, r1	; 0x800441 <g_audio_tone_state>
    1f46:	21 c0       	rjmp	.+66     	; 0x1f8a <__vector_8+0x3f0>
    1f48:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <g_seconds_since_powerup>
    1f4c:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <g_seconds_since_powerup+0x1>
    1f50:	a0 91 67 04 	lds	r26, 0x0467	; 0x800467 <g_seconds_since_powerup+0x2>
    1f54:	b0 91 68 04 	lds	r27, 0x0468	; 0x800468 <g_seconds_since_powerup+0x3>
    1f58:	05 97       	sbiw	r24, 0x05	; 5
    1f5a:	a1 05       	cpc	r26, r1
    1f5c:	b1 05       	cpc	r27, r1
    1f5e:	0c f0       	brlt	.+2      	; 0x1f62 <__vector_8+0x3c8>
    1f60:	a0 ce       	rjmp	.-704    	; 0x1ca2 <__vector_8+0x108>
    1f62:	9a ce       	rjmp	.-716    	; 0x1c98 <__vector_8+0xfe>
    1f64:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <g_reset_button_held>
    1f68:	b7 ce       	rjmp	.-658    	; 0x1cd8 <__vector_8+0x13e>
    1f6a:	81 e0       	ldi	r24, 0x01	; 1
    1f6c:	80 93 3e 04 	sts	0x043E, r24	; 0x80043e <g_sync_pin_stable>
    1f70:	e5 ce       	rjmp	.-566    	; 0x1d3c <__vector_8+0x1a2>
    1f72:	84 e0       	ldi	r24, 0x04	; 4
    1f74:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <digitalRead>
    1f78:	81 11       	cpse	r24, r1
    1f7a:	fc ce       	rjmp	.-520    	; 0x1d74 <__vector_8+0x1da>
    1f7c:	f0 ce       	rjmp	.-544    	; 0x1d5e <__vector_8+0x1c4>
    1f7e:	84 e0       	ldi	r24, 0x04	; 4
    1f80:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <digitalRead>
    1f84:	81 11       	cpse	r24, r1
    1f86:	65 cf       	rjmp	.-310    	; 0x1e52 <__vector_8+0x2b8>
    1f88:	7d cf       	rjmp	.-262    	; 0x1e84 <__vector_8+0x2ea>
    1f8a:	0f 90       	pop	r0
    1f8c:	0f 90       	pop	r0
    1f8e:	df 91       	pop	r29
    1f90:	cf 91       	pop	r28
    1f92:	ff 91       	pop	r31
    1f94:	ef 91       	pop	r30
    1f96:	bf 91       	pop	r27
    1f98:	af 91       	pop	r26
    1f9a:	9f 91       	pop	r25
    1f9c:	8f 91       	pop	r24
    1f9e:	7f 91       	pop	r23
    1fa0:	6f 91       	pop	r22
    1fa2:	5f 91       	pop	r21
    1fa4:	4f 91       	pop	r20
    1fa6:	3f 91       	pop	r19
    1fa8:	2f 91       	pop	r18
    1faa:	1f 91       	pop	r17
    1fac:	0f 90       	pop	r0
    1fae:	0f be       	out	0x3f, r0	; 63
    1fb0:	0f 90       	pop	r0
    1fb2:	1f 90       	pop	r1
    1fb4:	18 95       	reti

00001fb6 <__vector_14>:
    1fb6:	1f 92       	push	r1
    1fb8:	0f 92       	push	r0
    1fba:	0f b6       	in	r0, 0x3f	; 63
    1fbc:	0f 92       	push	r0
    1fbe:	11 24       	eor	r1, r1
    1fc0:	2f 93       	push	r18
    1fc2:	3f 93       	push	r19
    1fc4:	4f 93       	push	r20
    1fc6:	5f 93       	push	r21
    1fc8:	6f 93       	push	r22
    1fca:	7f 93       	push	r23
    1fcc:	8f 93       	push	r24
    1fce:	9f 93       	push	r25
    1fd0:	af 93       	push	r26
    1fd2:	bf 93       	push	r27
    1fd4:	ef 93       	push	r30
    1fd6:	ff 93       	push	r31
    1fd8:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <g_AM_enabled>
    1fdc:	81 11       	cpse	r24, r1
    1fde:	13 c0       	rjmp	.+38     	; 0x2006 <__vector_14+0x50>
    1fe0:	61 e0       	ldi	r22, 0x01	; 1
    1fe2:	80 91 a7 03 	lds	r24, 0x03A7	; 0x8003a7 <_ZZ11__vector_14E6toggle>
    1fe6:	81 11       	cpse	r24, r1
    1fe8:	60 e0       	ldi	r22, 0x00	; 0
    1fea:	60 93 a7 03 	sts	0x03A7, r22	; 0x8003a7 <_ZZ11__vector_14E6toggle>
    1fee:	80 91 41 04 	lds	r24, 0x0441	; 0x800441 <g_audio_tone_state>
    1ff2:	88 23       	and	r24, r24
    1ff4:	21 f0       	breq	.+8      	; 0x1ffe <__vector_14+0x48>
    1ff6:	85 e0       	ldi	r24, 0x05	; 5
    1ff8:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    1ffc:	04 c0       	rjmp	.+8      	; 0x2006 <__vector_14+0x50>
    1ffe:	60 e0       	ldi	r22, 0x00	; 0
    2000:	85 e0       	ldi	r24, 0x05	; 5
    2002:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    2006:	ff 91       	pop	r31
    2008:	ef 91       	pop	r30
    200a:	bf 91       	pop	r27
    200c:	af 91       	pop	r26
    200e:	9f 91       	pop	r25
    2010:	8f 91       	pop	r24
    2012:	7f 91       	pop	r23
    2014:	6f 91       	pop	r22
    2016:	5f 91       	pop	r21
    2018:	4f 91       	pop	r20
    201a:	3f 91       	pop	r19
    201c:	2f 91       	pop	r18
    201e:	0f 90       	pop	r0
    2020:	0f be       	out	0x3f, r0	; 63
    2022:	0f 90       	pop	r0
    2024:	1f 90       	pop	r1
    2026:	18 95       	reti

00002028 <__vector_11>:
    2028:	1f 92       	push	r1
    202a:	0f 92       	push	r0
    202c:	0f b6       	in	r0, 0x3f	; 63
    202e:	0f 92       	push	r0
    2030:	11 24       	eor	r1, r1
    2032:	0f 90       	pop	r0
    2034:	0f be       	out	0x3f, r0	; 63
    2036:	0f 90       	pop	r0
    2038:	1f 90       	pop	r1
    203a:	18 95       	reti

0000203c <_Z23clockConfigurationCheckv>:
    203c:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <g_event_finish_epoch>
    2040:	90 91 53 04 	lds	r25, 0x0453	; 0x800453 <g_event_finish_epoch+0x1>
    2044:	a0 91 54 04 	lds	r26, 0x0454	; 0x800454 <g_event_finish_epoch+0x2>
    2048:	b0 91 55 04 	lds	r27, 0x0455	; 0x800455 <g_event_finish_epoch+0x3>
    204c:	81 15       	cp	r24, r1
    204e:	96 46       	sbci	r25, 0x66	; 102
    2050:	ae 4e       	sbci	r26, 0xEE	; 238
    2052:	bf 45       	sbci	r27, 0x5F	; 95
    2054:	08 f4       	brcc	.+2      	; 0x2058 <_Z23clockConfigurationCheckv+0x1c>
    2056:	67 c0       	rjmp	.+206    	; 0x2126 <_Z23clockConfigurationCheckv+0xea>
    2058:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <g_event_start_epoch>
    205c:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <g_event_start_epoch+0x1>
    2060:	a0 91 58 04 	lds	r26, 0x0458	; 0x800458 <g_event_start_epoch+0x2>
    2064:	b0 91 59 04 	lds	r27, 0x0459	; 0x800459 <g_event_start_epoch+0x3>
    2068:	81 15       	cp	r24, r1
    206a:	96 46       	sbci	r25, 0x66	; 102
    206c:	ae 4e       	sbci	r26, 0xEE	; 238
    206e:	bf 45       	sbci	r27, 0x5F	; 95
    2070:	08 f4       	brcc	.+2      	; 0x2074 <_Z23clockConfigurationCheckv+0x38>
    2072:	5b c0       	rjmp	.+182    	; 0x212a <_Z23clockConfigurationCheckv+0xee>
    2074:	80 91 5a 04 	lds	r24, 0x045A	; 0x80045a <g_current_epoch>
    2078:	90 91 5b 04 	lds	r25, 0x045B	; 0x80045b <g_current_epoch+0x1>
    207c:	a0 91 5c 04 	lds	r26, 0x045C	; 0x80045c <g_current_epoch+0x2>
    2080:	b0 91 5d 04 	lds	r27, 0x045D	; 0x80045d <g_current_epoch+0x3>
    2084:	81 15       	cp	r24, r1
    2086:	96 46       	sbci	r25, 0x66	; 102
    2088:	ae 4e       	sbci	r26, 0xEE	; 238
    208a:	bf 45       	sbci	r27, 0x5F	; 95
    208c:	08 f4       	brcc	.+2      	; 0x2090 <_Z23clockConfigurationCheckv+0x54>
    208e:	4f c0       	rjmp	.+158    	; 0x212e <_Z23clockConfigurationCheckv+0xf2>
    2090:	40 91 52 04 	lds	r20, 0x0452	; 0x800452 <g_event_finish_epoch>
    2094:	50 91 53 04 	lds	r21, 0x0453	; 0x800453 <g_event_finish_epoch+0x1>
    2098:	60 91 54 04 	lds	r22, 0x0454	; 0x800454 <g_event_finish_epoch+0x2>
    209c:	70 91 55 04 	lds	r23, 0x0455	; 0x800455 <g_event_finish_epoch+0x3>
    20a0:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <g_event_start_epoch>
    20a4:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <g_event_start_epoch+0x1>
    20a8:	a0 91 58 04 	lds	r26, 0x0458	; 0x800458 <g_event_start_epoch+0x2>
    20ac:	b0 91 59 04 	lds	r27, 0x0459	; 0x800459 <g_event_start_epoch+0x3>
    20b0:	84 17       	cp	r24, r20
    20b2:	95 07       	cpc	r25, r21
    20b4:	a6 07       	cpc	r26, r22
    20b6:	b7 07       	cpc	r27, r23
    20b8:	e0 f5       	brcc	.+120    	; 0x2132 <_Z23clockConfigurationCheckv+0xf6>
    20ba:	40 91 5a 04 	lds	r20, 0x045A	; 0x80045a <g_current_epoch>
    20be:	50 91 5b 04 	lds	r21, 0x045B	; 0x80045b <g_current_epoch+0x1>
    20c2:	60 91 5c 04 	lds	r22, 0x045C	; 0x80045c <g_current_epoch+0x2>
    20c6:	70 91 5d 04 	lds	r23, 0x045D	; 0x80045d <g_current_epoch+0x3>
    20ca:	80 91 52 04 	lds	r24, 0x0452	; 0x800452 <g_event_finish_epoch>
    20ce:	90 91 53 04 	lds	r25, 0x0453	; 0x800453 <g_event_finish_epoch+0x1>
    20d2:	a0 91 54 04 	lds	r26, 0x0454	; 0x800454 <g_event_finish_epoch+0x2>
    20d6:	b0 91 55 04 	lds	r27, 0x0455	; 0x800455 <g_event_finish_epoch+0x3>
    20da:	84 17       	cp	r24, r20
    20dc:	95 07       	cpc	r25, r21
    20de:	a6 07       	cpc	r26, r22
    20e0:	b7 07       	cpc	r27, r23
    20e2:	48 f1       	brcs	.+82     	; 0x2136 <_Z23clockConfigurationCheckv+0xfa>
    20e4:	40 91 5a 04 	lds	r20, 0x045A	; 0x80045a <g_current_epoch>
    20e8:	50 91 5b 04 	lds	r21, 0x045B	; 0x80045b <g_current_epoch+0x1>
    20ec:	60 91 5c 04 	lds	r22, 0x045C	; 0x80045c <g_current_epoch+0x2>
    20f0:	70 91 5d 04 	lds	r23, 0x045D	; 0x80045d <g_current_epoch+0x3>
    20f4:	80 91 56 04 	lds	r24, 0x0456	; 0x800456 <g_event_start_epoch>
    20f8:	90 91 57 04 	lds	r25, 0x0457	; 0x800457 <g_event_start_epoch+0x1>
    20fc:	a0 91 58 04 	lds	r26, 0x0458	; 0x800458 <g_event_start_epoch+0x2>
    2100:	b0 91 59 04 	lds	r27, 0x0459	; 0x800459 <g_event_start_epoch+0x3>
    2104:	84 17       	cp	r24, r20
    2106:	95 07       	cpc	r25, r21
    2108:	a6 07       	cpc	r26, r22
    210a:	b7 07       	cpc	r27, r23
    210c:	30 f4       	brcc	.+12     	; 0x211a <_Z23clockConfigurationCheckv+0xde>
    210e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <g_transmissions_disabled>
    2112:	81 11       	cpse	r24, r1
    2114:	12 c0       	rjmp	.+36     	; 0x213a <_Z23clockConfigurationCheckv+0xfe>
    2116:	85 e0       	ldi	r24, 0x05	; 5
    2118:	08 95       	ret
    211a:	80 91 32 04 	lds	r24, 0x0432	; 0x800432 <g_use_rtc_for_startstop>
    211e:	88 23       	and	r24, r24
    2120:	71 f0       	breq	.+28     	; 0x213e <_Z23clockConfigurationCheckv+0x102>
    2122:	81 e0       	ldi	r24, 0x01	; 1
    2124:	08 95       	ret
    2126:	82 e0       	ldi	r24, 0x02	; 2
    2128:	08 95       	ret
    212a:	82 e0       	ldi	r24, 0x02	; 2
    212c:	08 95       	ret
    212e:	82 e0       	ldi	r24, 0x02	; 2
    2130:	08 95       	ret
    2132:	82 e0       	ldi	r24, 0x02	; 2
    2134:	08 95       	ret
    2136:	82 e0       	ldi	r24, 0x02	; 2
    2138:	08 95       	ret
    213a:	83 e0       	ldi	r24, 0x03	; 3
    213c:	08 95       	ret
    213e:	84 e0       	ldi	r24, 0x04	; 4
    2140:	08 95       	ret

00002142 <_Z11setupForFoxP5Fox_t13EventAction_t>:
    2142:	0f 93       	push	r16
    2144:	1f 93       	push	r17
    2146:	cf 93       	push	r28
    2148:	df 93       	push	r29
    214a:	00 d0       	rcall	.+0      	; 0x214c <_Z11setupForFoxP5Fox_t13EventAction_t+0xa>
    214c:	cd b7       	in	r28, 0x3d	; 61
    214e:	de b7       	in	r29, 0x3e	; 62
    2150:	16 2f       	mov	r17, r22
    2152:	00 97       	sbiw	r24, 0x00	; 0
    2154:	31 f0       	breq	.+12     	; 0x2162 <_Z11setupForFoxP5Fox_t13EventAction_t+0x20>
    2156:	fc 01       	movw	r30, r24
    2158:	80 81       	ld	r24, Z
    215a:	82 31       	cpi	r24, 0x12	; 18
    215c:	11 f0       	breq	.+4      	; 0x2162 <_Z11setupForFoxP5Fox_t13EventAction_t+0x20>
    215e:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <g_fox>
    2162:	0e 94 a6 04 	call	0x94c	; 0x94c <_Z13RTC_get_epochv>
    2166:	60 93 5a 04 	sts	0x045A, r22	; 0x80045a <g_current_epoch>
    216a:	70 93 5b 04 	sts	0x045B, r23	; 0x80045b <g_current_epoch+0x1>
    216e:	80 93 5c 04 	sts	0x045C, r24	; 0x80045c <g_current_epoch+0x2>
    2172:	90 93 5d 04 	sts	0x045D, r25	; 0x80045d <g_current_epoch+0x3>
    2176:	10 92 42 04 	sts	0x0442, r1	; 0x800442 <g_use_ptt_periodic_reset>
    217a:	f8 94       	cli
    217c:	e0 91 64 04 	lds	r30, 0x0464	; 0x800464 <g_fox>
    2180:	8e 2f       	mov	r24, r30
    2182:	90 e0       	ldi	r25, 0x00	; 0
    2184:	fc 01       	movw	r30, r24
    2186:	31 97       	sbiw	r30, 0x01	; 1
    2188:	e3 31       	cpi	r30, 0x13	; 19
    218a:	f1 05       	cpc	r31, r1
    218c:	08 f0       	brcs	.+2      	; 0x2190 <_Z11setupForFoxP5Fox_t13EventAction_t+0x4e>
    218e:	84 c0       	rjmp	.+264    	; 0x2298 <_Z11setupForFoxP5Fox_t13EventAction_t+0x156>
    2190:	e6 59       	subi	r30, 0x96	; 150
    2192:	ff 4f       	sbci	r31, 0xFF	; 255
    2194:	0c 94 04 18 	jmp	0x3008	; 0x3008 <__tablejump2__>
    2198:	8c e3       	ldi	r24, 0x3C	; 60
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <g_on_air_interval_seconds+0x1>
    21a0:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <g_on_air_interval_seconds>
    21a4:	8c e2       	ldi	r24, 0x2C	; 44
    21a6:	91 e0       	ldi	r25, 0x01	; 1
    21a8:	90 93 4b 04 	sts	0x044B, r25	; 0x80044b <g_cycle_period_seconds+0x1>
    21ac:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <g_cycle_period_seconds>
    21b0:	25 e0       	ldi	r18, 0x05	; 5
    21b2:	30 e0       	ldi	r19, 0x00	; 0
    21b4:	30 93 49 04 	sts	0x0449, r19	; 0x800449 <g_number_of_foxes+0x1>
    21b8:	20 93 48 04 	sts	0x0448, r18	; 0x800448 <g_number_of_foxes>
    21bc:	10 92 47 04 	sts	0x0447, r1	; 0x800447 <g_fox_id_offset+0x1>
    21c0:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <g_fox_id_offset>
    21c4:	28 e0       	ldi	r18, 0x08	; 8
    21c6:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <g_pattern_codespeed>
    21ca:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <g_id_interval_seconds+0x1>
    21ce:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <g_id_interval_seconds>
    21d2:	90 c0       	rjmp	.+288    	; 0x22f4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1b2>
    21d4:	8c e0       	ldi	r24, 0x0C	; 12
    21d6:	90 e0       	ldi	r25, 0x00	; 0
    21d8:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <g_on_air_interval_seconds+0x1>
    21dc:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <g_on_air_interval_seconds>
    21e0:	8c e3       	ldi	r24, 0x3C	; 60
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	90 93 4b 04 	sts	0x044B, r25	; 0x80044b <g_cycle_period_seconds+0x1>
    21e8:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <g_cycle_period_seconds>
    21ec:	85 e0       	ldi	r24, 0x05	; 5
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <g_number_of_foxes+0x1>
    21f4:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <g_number_of_foxes>
    21f8:	88 e0       	ldi	r24, 0x08	; 8
    21fa:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <g_pattern_codespeed>
    21fe:	87 e0       	ldi	r24, 0x07	; 7
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	90 93 47 04 	sts	0x0447, r25	; 0x800447 <g_fox_id_offset+0x1>
    2206:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <g_fox_id_offset>
    220a:	88 e5       	ldi	r24, 0x58	; 88
    220c:	92 e0       	ldi	r25, 0x02	; 2
    220e:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <g_id_interval_seconds+0x1>
    2212:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <g_id_interval_seconds>
    2216:	6e c0       	rjmp	.+220    	; 0x22f4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1b2>
    2218:	8c e0       	ldi	r24, 0x0C	; 12
    221a:	90 e0       	ldi	r25, 0x00	; 0
    221c:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <g_on_air_interval_seconds+0x1>
    2220:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <g_on_air_interval_seconds>
    2224:	2c e3       	ldi	r18, 0x3C	; 60
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	30 93 4b 04 	sts	0x044B, r19	; 0x80044b <g_cycle_period_seconds+0x1>
    222c:	20 93 4a 04 	sts	0x044A, r18	; 0x80044a <g_cycle_period_seconds>
    2230:	25 e0       	ldi	r18, 0x05	; 5
    2232:	30 e0       	ldi	r19, 0x00	; 0
    2234:	30 93 49 04 	sts	0x0449, r19	; 0x800449 <g_number_of_foxes+0x1>
    2238:	20 93 48 04 	sts	0x0448, r18	; 0x800448 <g_number_of_foxes>
    223c:	2f e0       	ldi	r18, 0x0F	; 15
    223e:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <g_pattern_codespeed>
    2242:	90 93 47 04 	sts	0x0447, r25	; 0x800447 <g_fox_id_offset+0x1>
    2246:	80 93 46 04 	sts	0x0446, r24	; 0x800446 <g_fox_id_offset>
    224a:	88 e5       	ldi	r24, 0x58	; 88
    224c:	92 e0       	ldi	r25, 0x02	; 2
    224e:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <g_id_interval_seconds+0x1>
    2252:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <g_id_interval_seconds>
    2256:	4e c0       	rjmp	.+156    	; 0x22f4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1b2>
    2258:	8e e1       	ldi	r24, 0x1E	; 30
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <g_on_air_interval_seconds+0x1>
    2260:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <g_on_air_interval_seconds>
    2264:	8c e3       	ldi	r24, 0x3C	; 60
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	90 93 4b 04 	sts	0x044B, r25	; 0x80044b <g_cycle_period_seconds+0x1>
    226c:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <g_cycle_period_seconds>
    2270:	22 e0       	ldi	r18, 0x02	; 2
    2272:	30 e0       	ldi	r19, 0x00	; 0
    2274:	30 93 49 04 	sts	0x0449, r19	; 0x800449 <g_number_of_foxes+0x1>
    2278:	20 93 48 04 	sts	0x0448, r18	; 0x800448 <g_number_of_foxes>
    227c:	28 e0       	ldi	r18, 0x08	; 8
    227e:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <g_pattern_codespeed>
    2282:	22 e1       	ldi	r18, 0x12	; 18
    2284:	30 e0       	ldi	r19, 0x00	; 0
    2286:	30 93 47 04 	sts	0x0447, r19	; 0x800447 <g_fox_id_offset+0x1>
    228a:	20 93 46 04 	sts	0x0446, r18	; 0x800446 <g_fox_id_offset>
    228e:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <g_id_interval_seconds+0x1>
    2292:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <g_id_interval_seconds>
    2296:	2e c0       	rjmp	.+92     	; 0x22f4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1b2>
    2298:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <g_ptt_periodic_reset_enabled>
    229c:	80 93 42 04 	sts	0x0442, r24	; 0x800442 <g_use_ptt_periodic_reset>
    22a0:	81 e0       	ldi	r24, 0x01	; 1
    22a2:	90 e0       	ldi	r25, 0x00	; 0
    22a4:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <g_number_of_foxes+0x1>
    22a8:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <g_number_of_foxes>
    22ac:	88 e0       	ldi	r24, 0x08	; 8
    22ae:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <g_pattern_codespeed>
    22b2:	80 91 50 04 	lds	r24, 0x0450	; 0x800450 <g_ptt_periodic_reset_enabled>
    22b6:	81 11       	cpse	r24, r1
    22b8:	03 c0       	rjmp	.+6      	; 0x22c0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x17e>
    22ba:	88 e5       	ldi	r24, 0x58	; 88
    22bc:	92 e0       	ldi	r25, 0x02	; 2
    22be:	02 c0       	rjmp	.+4      	; 0x22c4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x182>
    22c0:	8c e3       	ldi	r24, 0x3C	; 60
    22c2:	90 e0       	ldi	r25, 0x00	; 0
    22c4:	90 93 45 04 	sts	0x0445, r25	; 0x800445 <g_id_interval_seconds+0x1>
    22c8:	80 93 44 04 	sts	0x0444, r24	; 0x800444 <g_id_interval_seconds>
    22cc:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <g_id_interval_seconds>
    22d0:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <g_id_interval_seconds+0x1>
    22d4:	90 93 4d 04 	sts	0x044D, r25	; 0x80044d <g_on_air_interval_seconds+0x1>
    22d8:	80 93 4c 04 	sts	0x044C, r24	; 0x80044c <g_on_air_interval_seconds>
    22dc:	10 92 47 04 	sts	0x0447, r1	; 0x800447 <g_fox_id_offset+0x1>
    22e0:	10 92 46 04 	sts	0x0446, r1	; 0x800446 <g_fox_id_offset>
    22e4:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <g_id_interval_seconds>
    22e8:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <g_id_interval_seconds+0x1>
    22ec:	90 93 4b 04 	sts	0x044B, r25	; 0x80044b <g_cycle_period_seconds+0x1>
    22f0:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <g_cycle_period_seconds>
    22f4:	11 11       	cpse	r17, r1
    22f6:	06 c0       	rjmp	.+12     	; 0x2304 <_Z11setupForFoxP5Fox_t13EventAction_t+0x1c2>
    22f8:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <g_use_rtc_for_startstop>
    22fc:	81 e0       	ldi	r24, 0x01	; 1
    22fe:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <g_transmissions_disabled>
    2302:	e0 c0       	rjmp	.+448    	; 0x24c4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x382>
    2304:	11 30       	cpi	r17, 0x01	; 1
    2306:	99 f4       	brne	.+38     	; 0x232e <_Z11setupForFoxP5Fox_t13EventAction_t+0x1ec>
    2308:	81 e0       	ldi	r24, 0x01	; 1
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <g_fox_counter+0x1>
    2310:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <g_fox_counter>
    2314:	10 92 69 04 	sts	0x0469, r1	; 0x800469 <g_seconds_since_sync>
    2318:	10 92 6a 04 	sts	0x046A, r1	; 0x80046a <g_seconds_since_sync+0x1>
    231c:	10 92 6b 04 	sts	0x046B, r1	; 0x80046b <g_seconds_since_sync+0x2>
    2320:	10 92 6c 04 	sts	0x046C, r1	; 0x80046c <g_seconds_since_sync+0x3>
    2324:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <g_use_rtc_for_startstop>
    2328:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <g_transmissions_disabled>
    232c:	cb c0       	rjmp	.+406    	; 0x24c4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x382>
    232e:	12 30       	cpi	r17, 0x02	; 2
    2330:	b9 f5       	brne	.+110    	; 0x23a0 <_Z11setupForFoxP5Fox_t13EventAction_t+0x25e>
    2332:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <g_fox>
    2336:	20 91 46 04 	lds	r18, 0x0446	; 0x800446 <g_fox_id_offset>
    233a:	30 91 47 04 	lds	r19, 0x0447	; 0x800447 <g_fox_id_offset+0x1>
    233e:	90 e0       	ldi	r25, 0x00	; 0
    2340:	82 1b       	sub	r24, r18
    2342:	93 0b       	sbc	r25, r19
    2344:	18 16       	cp	r1, r24
    2346:	19 06       	cpc	r1, r25
    2348:	14 f0       	brlt	.+4      	; 0x234e <_Z11setupForFoxP5Fox_t13EventAction_t+0x20c>
    234a:	81 e0       	ldi	r24, 0x01	; 1
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <g_fox_counter+0x1>
    2352:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <g_fox_counter>
    2356:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <g_fox_counter>
    235a:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <g_fox_counter+0x1>
    235e:	40 91 4c 04 	lds	r20, 0x044C	; 0x80044c <g_on_air_interval_seconds>
    2362:	50 91 4d 04 	lds	r21, 0x044D	; 0x80044d <g_on_air_interval_seconds+0x1>
    2366:	21 50       	subi	r18, 0x01	; 1
    2368:	31 09       	sbc	r19, r1
    236a:	24 9f       	mul	r18, r20
    236c:	c0 01       	movw	r24, r0
    236e:	25 9f       	mul	r18, r21
    2370:	90 0d       	add	r25, r0
    2372:	34 9f       	mul	r19, r20
    2374:	90 0d       	add	r25, r0
    2376:	11 24       	eor	r1, r1
    2378:	09 2e       	mov	r0, r25
    237a:	00 0c       	add	r0, r0
    237c:	aa 0b       	sbc	r26, r26
    237e:	bb 0b       	sbc	r27, r27
    2380:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <g_seconds_since_sync>
    2384:	90 93 6a 04 	sts	0x046A, r25	; 0x80046a <g_seconds_since_sync+0x1>
    2388:	a0 93 6b 04 	sts	0x046B, r26	; 0x80046b <g_seconds_since_sync+0x2>
    238c:	b0 93 6c 04 	sts	0x046C, r27	; 0x80046c <g_seconds_since_sync+0x3>
    2390:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <g_use_rtc_for_startstop>
    2394:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <g_transmissions_disabled>
    2398:	81 e0       	ldi	r24, 0x01	; 1
    239a:	80 93 43 04 	sts	0x0443, r24	; 0x800443 <g_initialize_fox_transmissions>
    239e:	92 c0       	rjmp	.+292    	; 0x24c4 <_Z11setupForFoxP5Fox_t13EventAction_t+0x382>
    23a0:	40 91 56 04 	lds	r20, 0x0456	; 0x800456 <g_event_start_epoch>
    23a4:	50 91 57 04 	lds	r21, 0x0457	; 0x800457 <g_event_start_epoch+0x1>
    23a8:	60 91 58 04 	lds	r22, 0x0458	; 0x800458 <g_event_start_epoch+0x2>
    23ac:	70 91 59 04 	lds	r23, 0x0459	; 0x800459 <g_event_start_epoch+0x3>
    23b0:	80 91 5a 04 	lds	r24, 0x045A	; 0x80045a <g_current_epoch>
    23b4:	90 91 5b 04 	lds	r25, 0x045B	; 0x80045b <g_current_epoch+0x1>
    23b8:	a0 91 5c 04 	lds	r26, 0x045C	; 0x80045c <g_current_epoch+0x2>
    23bc:	b0 91 5d 04 	lds	r27, 0x045D	; 0x80045d <g_current_epoch+0x3>
    23c0:	48 17       	cp	r20, r24
    23c2:	59 07       	cpc	r21, r25
    23c4:	6a 07       	cpc	r22, r26
    23c6:	7b 07       	cpc	r23, r27
    23c8:	08 f0       	brcs	.+2      	; 0x23cc <_Z11setupForFoxP5Fox_t13EventAction_t+0x28a>
    23ca:	69 c0       	rjmp	.+210    	; 0x249e <_Z11setupForFoxP5Fox_t13EventAction_t+0x35c>
    23cc:	80 91 5a 04 	lds	r24, 0x045A	; 0x80045a <g_current_epoch>
    23d0:	90 91 5b 04 	lds	r25, 0x045B	; 0x80045b <g_current_epoch+0x1>
    23d4:	a0 91 5c 04 	lds	r26, 0x045C	; 0x80045c <g_current_epoch+0x2>
    23d8:	b0 91 5d 04 	lds	r27, 0x045D	; 0x80045d <g_current_epoch+0x3>
    23dc:	40 91 56 04 	lds	r20, 0x0456	; 0x800456 <g_event_start_epoch>
    23e0:	50 91 57 04 	lds	r21, 0x0457	; 0x800457 <g_event_start_epoch+0x1>
    23e4:	60 91 58 04 	lds	r22, 0x0458	; 0x800458 <g_event_start_epoch+0x2>
    23e8:	70 91 59 04 	lds	r23, 0x0459	; 0x800459 <g_event_start_epoch+0x3>
    23ec:	84 1b       	sub	r24, r20
    23ee:	95 0b       	sbc	r25, r21
    23f0:	a6 0b       	sbc	r26, r22
    23f2:	b7 0b       	sbc	r27, r23
    23f4:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <g_seconds_since_sync>
    23f8:	90 93 6a 04 	sts	0x046A, r25	; 0x80046a <g_seconds_since_sync+0x1>
    23fc:	a0 93 6b 04 	sts	0x046B, r26	; 0x80046b <g_seconds_since_sync+0x2>
    2400:	b0 93 6c 04 	sts	0x046C, r27	; 0x80046c <g_seconds_since_sync+0x3>
    2404:	60 91 69 04 	lds	r22, 0x0469	; 0x800469 <g_seconds_since_sync>
    2408:	70 91 6a 04 	lds	r23, 0x046A	; 0x80046a <g_seconds_since_sync+0x1>
    240c:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <g_seconds_since_sync+0x2>
    2410:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <g_seconds_since_sync+0x3>
    2414:	20 91 4a 04 	lds	r18, 0x044A	; 0x80044a <g_cycle_period_seconds>
    2418:	30 91 4b 04 	lds	r19, 0x044B	; 0x80044b <g_cycle_period_seconds+0x1>
    241c:	00 91 4c 04 	lds	r16, 0x044C	; 0x80044c <g_on_air_interval_seconds>
    2420:	10 91 4d 04 	lds	r17, 0x044D	; 0x80044d <g_on_air_interval_seconds+0x1>
    2424:	03 2e       	mov	r0, r19
    2426:	00 0c       	add	r0, r0
    2428:	44 0b       	sbc	r20, r20
    242a:	55 0b       	sbc	r21, r21
    242c:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__divmodsi4>
    2430:	98 01       	movw	r18, r16
    2432:	11 0f       	add	r17, r17
    2434:	44 0b       	sbc	r20, r20
    2436:	55 0b       	sbc	r21, r21
    2438:	0e 94 e5 17 	call	0x2fca	; 0x2fca <__divmodsi4>
    243c:	ba 01       	movw	r22, r20
    243e:	a9 01       	movw	r20, r18
    2440:	4f 5f       	subi	r20, 0xFF	; 255
    2442:	5f 4f       	sbci	r21, 0xFF	; 255
    2444:	6f 4f       	sbci	r22, 0xFF	; 255
    2446:	7f 4f       	sbci	r23, 0xFF	; 255
    2448:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <g_number_of_foxes>
    244c:	90 91 49 04 	lds	r25, 0x0449	; 0x800449 <g_number_of_foxes+0x1>
    2450:	9a 83       	std	Y+2, r25	; 0x02
    2452:	89 83       	std	Y+1, r24	; 0x01
    2454:	89 81       	ldd	r24, Y+1	; 0x01
    2456:	9a 81       	ldd	r25, Y+2	; 0x02
    2458:	09 2e       	mov	r0, r25
    245a:	00 0c       	add	r0, r0
    245c:	aa 0b       	sbc	r26, r26
    245e:	bb 0b       	sbc	r27, r27
    2460:	84 17       	cp	r24, r20
    2462:	95 07       	cpc	r25, r21
    2464:	a6 07       	cpc	r26, r22
    2466:	b7 07       	cpc	r27, r23
    2468:	3c f4       	brge	.+14     	; 0x2478 <_Z11setupForFoxP5Fox_t13EventAction_t+0x336>
    246a:	29 81       	ldd	r18, Y+1	; 0x01
    246c:	3a 81       	ldd	r19, Y+2	; 0x02
    246e:	c9 01       	movw	r24, r18
    2470:	33 0f       	add	r19, r19
    2472:	aa 0b       	sbc	r26, r26
    2474:	bb 0b       	sbc	r27, r27
    2476:	0b c0       	rjmp	.+22     	; 0x248e <_Z11setupForFoxP5Fox_t13EventAction_t+0x34c>
    2478:	db 01       	movw	r26, r22
    247a:	ca 01       	movw	r24, r20
    247c:	14 16       	cp	r1, r20
    247e:	15 06       	cpc	r1, r21
    2480:	16 06       	cpc	r1, r22
    2482:	17 06       	cpc	r1, r23
    2484:	24 f0       	brlt	.+8      	; 0x248e <_Z11setupForFoxP5Fox_t13EventAction_t+0x34c>
    2486:	81 e0       	ldi	r24, 0x01	; 1
    2488:	90 e0       	ldi	r25, 0x00	; 0
    248a:	a0 e0       	ldi	r26, 0x00	; 0
    248c:	b0 e0       	ldi	r27, 0x00	; 0
    248e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <g_fox_counter+0x1>
    2492:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <g_fox_counter>
    2496:	83 e0       	ldi	r24, 0x03	; 3
    2498:	80 93 43 04 	sts	0x0443, r24	; 0x800443 <g_initialize_fox_transmissions>
    249c:	0e c0       	rjmp	.+28     	; 0x24ba <_Z11setupForFoxP5Fox_t13EventAction_t+0x378>
    249e:	10 92 69 04 	sts	0x0469, r1	; 0x800469 <g_seconds_since_sync>
    24a2:	10 92 6a 04 	sts	0x046A, r1	; 0x80046a <g_seconds_since_sync+0x1>
    24a6:	10 92 6b 04 	sts	0x046B, r1	; 0x80046b <g_seconds_since_sync+0x2>
    24aa:	10 92 6c 04 	sts	0x046C, r1	; 0x80046c <g_seconds_since_sync+0x3>
    24ae:	81 e0       	ldi	r24, 0x01	; 1
    24b0:	90 e0       	ldi	r25, 0x00	; 0
    24b2:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <g_fox_counter+0x1>
    24b6:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <g_fox_counter>
    24ba:	81 e0       	ldi	r24, 0x01	; 1
    24bc:	80 93 32 04 	sts	0x0432, r24	; 0x800432 <g_use_rtc_for_startstop>
    24c0:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <g_transmissions_disabled>
    24c4:	8f e2       	ldi	r24, 0x2F	; 47
    24c6:	87 bd       	out	0x27, r24	; 39
    24c8:	10 92 41 04 	sts	0x0441, r1	; 0x800441 <g_audio_tone_state>
    24cc:	10 92 62 04 	sts	0x0462, r1	; 0x800462 <g_code_throttle+0x1>
    24d0:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <g_code_throttle>
    24d4:	10 92 63 04 	sts	0x0463, r1	; 0x800463 <g_on_the_air>
    24d8:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_config_error>
    24dc:	60 e0       	ldi	r22, 0x00	; 0
    24de:	80 e1       	ldi	r24, 0x10	; 16
    24e0:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    24e4:	60 e0       	ldi	r22, 0x00	; 0
    24e6:	86 e0       	ldi	r24, 0x06	; 6
    24e8:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    24ec:	10 92 4f 04 	sts	0x044F, r1	; 0x80044f <g_sendAMmodulation>
    24f0:	10 92 5e 04 	sts	0x045E, r1	; 0x80045e <g_LED_enunciating>
    24f4:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_config_error>
    24f8:	78 94       	sei
    24fa:	0f 90       	pop	r0
    24fc:	0f 90       	pop	r0
    24fe:	df 91       	pop	r29
    2500:	cf 91       	pop	r28
    2502:	1f 91       	pop	r17
    2504:	0f 91       	pop	r16
    2506:	08 95       	ret

00002508 <_Z13startEventNow19EventActionSource_t>:
    2508:	cf 93       	push	r28
    250a:	c8 2f       	mov	r28, r24
    250c:	0e 94 1e 10 	call	0x203c	; 0x203c <_Z23clockConfigurationCheckv>
    2510:	f8 94       	cli
    2512:	c1 11       	cpse	r28, r1
    2514:	0e c0       	rjmp	.+28     	; 0x2532 <_Z13startEventNow19EventActionSource_t+0x2a>
    2516:	82 30       	cpi	r24, 0x02	; 2
    2518:	31 f4       	brne	.+12     	; 0x2526 <_Z13startEventNow19EventActionSource_t+0x1e>
    251a:	60 e0       	ldi	r22, 0x00	; 0
    251c:	80 e0       	ldi	r24, 0x00	; 0
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    2524:	3e c0       	rjmp	.+124    	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    2526:	63 e0       	ldi	r22, 0x03	; 3
    2528:	80 e0       	ldi	r24, 0x00	; 0
    252a:	90 e0       	ldi	r25, 0x00	; 0
    252c:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    2530:	38 c0       	rjmp	.+112    	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    2532:	c2 30       	cpi	r28, 0x02	; 2
    2534:	c9 f4       	brne	.+50     	; 0x2568 <_Z13startEventNow19EventActionSource_t+0x60>
    2536:	82 30       	cpi	r24, 0x02	; 2
    2538:	31 f4       	brne	.+12     	; 0x2546 <_Z13startEventNow19EventActionSource_t+0x3e>
    253a:	61 e0       	ldi	r22, 0x01	; 1
    253c:	80 e0       	ldi	r24, 0x00	; 0
    253e:	90 e0       	ldi	r25, 0x00	; 0
    2540:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    2544:	2e c0       	rjmp	.+92     	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    2546:	81 30       	cpi	r24, 0x01	; 1
    2548:	19 f0       	breq	.+6      	; 0x2550 <_Z13startEventNow19EventActionSource_t+0x48>
    254a:	83 50       	subi	r24, 0x03	; 3
    254c:	82 30       	cpi	r24, 0x02	; 2
    254e:	30 f4       	brcc	.+12     	; 0x255c <_Z13startEventNow19EventActionSource_t+0x54>
    2550:	61 e0       	ldi	r22, 0x01	; 1
    2552:	80 e0       	ldi	r24, 0x00	; 0
    2554:	90 e0       	ldi	r25, 0x00	; 0
    2556:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    255a:	23 c0       	rjmp	.+70     	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    255c:	63 e0       	ldi	r22, 0x03	; 3
    255e:	80 e0       	ldi	r24, 0x00	; 0
    2560:	90 e0       	ldi	r25, 0x00	; 0
    2562:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    2566:	1d c0       	rjmp	.+58     	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    2568:	82 30       	cpi	r24, 0x02	; 2
    256a:	31 f4       	brne	.+12     	; 0x2578 <_Z13startEventNow19EventActionSource_t+0x70>
    256c:	61 e0       	ldi	r22, 0x01	; 1
    256e:	80 e0       	ldi	r24, 0x00	; 0
    2570:	90 e0       	ldi	r25, 0x00	; 0
    2572:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    2576:	15 c0       	rjmp	.+42     	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    2578:	81 30       	cpi	r24, 0x01	; 1
    257a:	31 f4       	brne	.+12     	; 0x2588 <_Z13startEventNow19EventActionSource_t+0x80>
    257c:	62 e0       	ldi	r22, 0x02	; 2
    257e:	80 e0       	ldi	r24, 0x00	; 0
    2580:	90 e0       	ldi	r25, 0x00	; 0
    2582:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    2586:	0d c0       	rjmp	.+26     	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    2588:	84 30       	cpi	r24, 0x04	; 4
    258a:	31 f4       	brne	.+12     	; 0x2598 <_Z13startEventNow19EventActionSource_t+0x90>
    258c:	63 e0       	ldi	r22, 0x03	; 3
    258e:	80 e0       	ldi	r24, 0x00	; 0
    2590:	90 e0       	ldi	r25, 0x00	; 0
    2592:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    2596:	05 c0       	rjmp	.+10     	; 0x25a2 <_Z13startEventNow19EventActionSource_t+0x9a>
    2598:	63 e0       	ldi	r22, 0x03	; 3
    259a:	80 e0       	ldi	r24, 0x00	; 0
    259c:	90 e0       	ldi	r25, 0x00	; 0
    259e:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    25a2:	10 92 5e 04 	sts	0x045E, r1	; 0x80045e <g_LED_enunciating>
    25a6:	78 94       	sei
    25a8:	cf 91       	pop	r28
    25aa:	08 95       	ret

000025ac <_Z12stopEventNow19EventActionSource_t>:
    25ac:	cf 93       	push	r28
    25ae:	c8 2f       	mov	r28, r24
    25b0:	0e 94 1e 10 	call	0x203c	; 0x203c <_Z23clockConfigurationCheckv>
    25b4:	f8 94       	cli
    25b6:	c2 30       	cpi	r28, 0x02	; 2
    25b8:	31 f4       	brne	.+12     	; 0x25c6 <_Z12stopEventNow19EventActionSource_t+0x1a>
    25ba:	60 e0       	ldi	r22, 0x00	; 0
    25bc:	80 e0       	ldi	r24, 0x00	; 0
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    25c4:	15 c0       	rjmp	.+42     	; 0x25f0 <_Z12stopEventNow19EventActionSource_t+0x44>
    25c6:	81 30       	cpi	r24, 0x01	; 1
    25c8:	31 f4       	brne	.+12     	; 0x25d6 <_Z12stopEventNow19EventActionSource_t+0x2a>
    25ca:	62 e0       	ldi	r22, 0x02	; 2
    25cc:	80 e0       	ldi	r24, 0x00	; 0
    25ce:	90 e0       	ldi	r25, 0x00	; 0
    25d0:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    25d4:	08 c0       	rjmp	.+16     	; 0x25e6 <_Z12stopEventNow19EventActionSource_t+0x3a>
    25d6:	84 30       	cpi	r24, 0x04	; 4
    25d8:	31 f4       	brne	.+12     	; 0x25e6 <_Z12stopEventNow19EventActionSource_t+0x3a>
    25da:	60 e0       	ldi	r22, 0x00	; 0
    25dc:	80 e0       	ldi	r24, 0x00	; 0
    25de:	90 e0       	ldi	r25, 0x00	; 0
    25e0:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    25e4:	05 c0       	rjmp	.+10     	; 0x25f0 <_Z12stopEventNow19EventActionSource_t+0x44>
    25e6:	60 e0       	ldi	r22, 0x00	; 0
    25e8:	80 e0       	ldi	r24, 0x00	; 0
    25ea:	90 e0       	ldi	r25, 0x00	; 0
    25ec:	0e 94 a1 10 	call	0x2142	; 0x2142 <_Z11setupForFoxP5Fox_t13EventAction_t>
    25f0:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <g_sync_pin_stable>
    25f4:	82 30       	cpi	r24, 0x02	; 2
    25f6:	21 f4       	brne	.+8      	; 0x2600 <_Z12stopEventNow19EventActionSource_t+0x54>
    25f8:	60 e0       	ldi	r22, 0x00	; 0
    25fa:	80 e1       	ldi	r24, 0x10	; 16
    25fc:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    2600:	cf 91       	pop	r28
    2602:	08 95       	ret

00002604 <__vector_4>:
    2604:	1f 92       	push	r1
    2606:	0f 92       	push	r0
    2608:	0f b6       	in	r0, 0x3f	; 63
    260a:	0f 92       	push	r0
    260c:	11 24       	eor	r1, r1
    260e:	2f 93       	push	r18
    2610:	3f 93       	push	r19
    2612:	4f 93       	push	r20
    2614:	5f 93       	push	r21
    2616:	6f 93       	push	r22
    2618:	7f 93       	push	r23
    261a:	8f 93       	push	r24
    261c:	9f 93       	push	r25
    261e:	af 93       	push	r26
    2620:	bf 93       	push	r27
    2622:	cf 93       	push	r28
    2624:	ef 93       	push	r30
    2626:	ff 93       	push	r31
    2628:	81 e1       	ldi	r24, 0x11	; 17
    262a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <digitalRead>
    262e:	c8 2f       	mov	r28, r24
    2630:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <g_sync_pin_timer+0x1>
    2634:	10 92 3f 04 	sts	0x043F, r1	; 0x80043f <g_sync_pin_timer>
    2638:	88 23       	and	r24, r24
    263a:	91 f1       	breq	.+100    	; 0x26a0 <__vector_4+0x9c>
    263c:	80 91 fa 03 	lds	r24, 0x03FA	; 0x8003fa <_ZZ10__vector_4E10holdPinVal>
    2640:	81 11       	cpse	r24, r1
    2642:	2e c0       	rjmp	.+92     	; 0x26a0 <__vector_4+0x9c>
    2644:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <g_LED_timeout_countdown>
    2648:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <g_LED_timeout_countdown+0x1>
    264c:	89 2b       	or	r24, r25
    264e:	01 f1       	breq	.+64     	; 0x2690 <__vector_4+0x8c>
    2650:	80 91 30 04 	lds	r24, 0x0430	; 0x800430 <g_perform_EEPROM_reset>
    2654:	81 11       	cpse	r24, r1
    2656:	1e c0       	rjmp	.+60     	; 0x2694 <__vector_4+0x90>
    2658:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <g_transmissions_disabled>
    265c:	88 23       	and	r24, r24
    265e:	71 f0       	breq	.+28     	; 0x267c <__vector_4+0x78>
    2660:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <g_sync_pin_stable>
    2664:	82 30       	cpi	r24, 0x02	; 2
    2666:	b1 f4       	brne	.+44     	; 0x2694 <__vector_4+0x90>
    2668:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <g_sync_pin_stable>
    266c:	60 e0       	ldi	r22, 0x00	; 0
    266e:	80 e1       	ldi	r24, 0x10	; 16
    2670:	0e 94 b6 03 	call	0x76c	; 0x76c <digitalWrite>
    2674:	81 e0       	ldi	r24, 0x01	; 1
    2676:	0e 94 84 12 	call	0x2508	; 0x2508 <_Z13startEventNow19EventActionSource_t>
    267a:	0c c0       	rjmp	.+24     	; 0x2694 <__vector_4+0x90>
    267c:	80 91 3e 04 	lds	r24, 0x043E	; 0x80043e <g_sync_pin_stable>
    2680:	82 30       	cpi	r24, 0x02	; 2
    2682:	41 f4       	brne	.+16     	; 0x2694 <__vector_4+0x90>
    2684:	10 92 3e 04 	sts	0x043E, r1	; 0x80043e <g_sync_pin_stable>
    2688:	81 e0       	ldi	r24, 0x01	; 1
    268a:	0e 94 d6 12 	call	0x25ac	; 0x25ac <_Z12stopEventNow19EventActionSource_t>
    268e:	02 c0       	rjmp	.+4      	; 0x2694 <__vector_4+0x90>
    2690:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <g_config_error>
    2694:	8c e2       	ldi	r24, 0x2C	; 44
    2696:	91 e0       	ldi	r25, 0x01	; 1
    2698:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <g_LED_timeout_countdown+0x1>
    269c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <g_LED_timeout_countdown>
    26a0:	c0 93 fa 03 	sts	0x03FA, r28	; 0x8003fa <_ZZ10__vector_4E10holdPinVal>
    26a4:	ff 91       	pop	r31
    26a6:	ef 91       	pop	r30
    26a8:	cf 91       	pop	r28
    26aa:	bf 91       	pop	r27
    26ac:	af 91       	pop	r26
    26ae:	9f 91       	pop	r25
    26b0:	8f 91       	pop	r24
    26b2:	7f 91       	pop	r23
    26b4:	6f 91       	pop	r22
    26b6:	5f 91       	pop	r21
    26b8:	4f 91       	pop	r20
    26ba:	3f 91       	pop	r19
    26bc:	2f 91       	pop	r18
    26be:	0f 90       	pop	r0
    26c0:	0f be       	out	0x3f, r0	; 63
    26c2:	0f 90       	pop	r0
    26c4:	1f 90       	pop	r1
    26c6:	18 95       	reti

000026c8 <_GLOBAL__sub_I_ee_mgr>:
#include "ardooweeno.h"
#endif  /* ATMEL_STUDIO_7 */

#include <avr/wdt.h>

EepromManager ee_mgr;
    26c8:	8d e6       	ldi	r24, 0x6D	; 109
    26ca:	94 e0       	ldi	r25, 0x04	; 4
    26cc:	0e 94 6a 05 	call	0xad4	; 0xad4 <_ZN13EepromManagerC1Ev>
    26d0:	08 95       	ret

000026d2 <_GLOBAL__sub_D_ee_mgr>:
    26d2:	8d e6       	ldi	r24, 0x6D	; 109
    26d4:	94 e0       	ldi	r25, 0x04	; 4
    26d6:	0e 94 6b 05 	call	0xad6	; 0xad6 <_ZN13EepromManagerD1Ev>
    26da:	08 95       	ret

000026dc <_Z12getMorseCharc>:
 */
MorseCharacter getMorseChar(char c)
{
	MorseCharacter morse;

	c = toupper(c);
    26dc:	90 e0       	ldi	r25, 0x00	; 0
    26de:	0e 94 33 18 	call	0x3066	; 0x3066 <toupper>

	switch( c )
    26e2:	fc 01       	movw	r30, r24
    26e4:	ff 27       	eor	r31, r31
    26e6:	b0 97       	sbiw	r30, 0x20	; 32
    26e8:	ed 35       	cpi	r30, 0x5D	; 93
    26ea:	f1 05       	cpc	r31, r1
    26ec:	08 f0       	brcs	.+2      	; 0x26f0 <_Z12getMorseCharc+0x14>
    26ee:	e4 c0       	rjmp	.+456    	; 0x28b8 <_Z12getMorseCharc+0x1dc>
    26f0:	e3 58       	subi	r30, 0x83	; 131
    26f2:	ff 4f       	sbci	r31, 0xFF	; 255
    26f4:	0c 94 04 18 	jmp	0x3008	; 0x3008 <__tablejump2__>

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    26f8:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 4;
    26fa:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'B':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    26fc:	61 e0       	ldi	r22, 0x01	; 1
    26fe:	08 95       	ret

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    2700:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 4;
    2702:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'C':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    2704:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    2706:	08 95       	ret

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    2708:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 3;
    270a:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'D':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    270c:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    270e:	08 95       	ret

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 1;
    2710:	81 e0       	ldi	r24, 0x01	; 1
		break;

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 1;
    2712:	71 e0       	ldi	r23, 0x01	; 1
		}
		break;

		case 'E':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2714:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 1;
		}
		break;
    2716:	08 95       	ret

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    2718:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 4;
    271a:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'F':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    271c:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    271e:	08 95       	ret

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    2720:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 3;
    2722:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'G':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2724:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    2726:	08 95       	ret

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 7;
    2728:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 4;
    272a:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'H':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    272c:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 7;
		}
		break;
    272e:	08 95       	ret

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 3;
    2730:	83 e0       	ldi	r24, 0x03	; 3
		break;

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 2;
    2732:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'I':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2734:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 3;
		}
		break;
    2736:	08 95       	ret

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    2738:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
			morse.lengthInSymbols = 4;
    273a:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'J':
		{
			morse.pattern = 0x0e;   /* 0000 1110; */
    273c:	6e e0       	ldi	r22, 0x0E	; 14
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    273e:	08 95       	ret

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    2740:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
			morse.lengthInSymbols = 3;
    2742:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'K':
		{
			morse.pattern = 0x05;   /* 0000 0101; */
    2744:	65 e0       	ldi	r22, 0x05	; 5
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    2746:	08 95       	ret

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    2748:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 4;
    274a:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'L':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    274c:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    274e:	08 95       	ret

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 7;
    2750:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 2;
    2752:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'M':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    2754:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 7;
		}
		break;
    2756:	08 95       	ret

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
    2758:	85 e0       	ldi	r24, 0x05	; 5
		break;

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 2;
    275a:	72 e0       	ldi	r23, 0x02	; 2
		}
		break;

		case 'N':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    275c:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
		}
		break;
    275e:	08 95       	ret

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 11;
    2760:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 3;
    2762:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'O':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2764:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 11;
		}
		break;
    2766:	08 95       	ret

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    2768:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 4;
    276a:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'P':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    276c:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    276e:	08 95       	ret

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    2770:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
			morse.lengthInSymbols = 4;
    2772:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Q':
		{
			morse.pattern = 0x0b;   /* 0000 1011; */
    2774:	6b e0       	ldi	r22, 0x0B	; 11
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    2776:	08 95       	ret

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    2778:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 3;
    277a:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'R':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    277c:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    277e:	08 95       	ret

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 5;
    2780:	85 e0       	ldi	r24, 0x05	; 5
		break;

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 3;
    2782:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'S':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    2784:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 5;
		}
		break;
    2786:	08 95       	ret

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 3;
    2788:	83 e0       	ldi	r24, 0x03	; 3
		break;

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 1;
    278a:	71 e0       	ldi	r23, 0x01	; 1
		}
		break;

		case 'T':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    278c:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 1;
			morse.lengthInElements = 3;
		}
		break;
    278e:	08 95       	ret

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
    2790:	87 e0       	ldi	r24, 0x07	; 7
		break;

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
			morse.lengthInSymbols = 3;
    2792:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'U':
		{
			morse.pattern = 0x04;   /* 0000 0100; */
    2794:	64 e0       	ldi	r22, 0x04	; 4
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 7;
		}
		break;
    2796:	08 95       	ret

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
    2798:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
			morse.lengthInSymbols = 4;
    279a:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'V':
		{
			morse.pattern = 0x08;   /* 0000 1000; */
    279c:	68 e0       	ldi	r22, 0x08	; 8
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 9;
		}
		break;
    279e:	08 95       	ret

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
    27a0:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
			morse.lengthInSymbols = 3;
    27a2:	73 e0       	ldi	r23, 0x03	; 3
		}
		break;

		case 'W':
		{
			morse.pattern = 0x06;   /* 0000 0110; */
    27a4:	66 e0       	ldi	r22, 0x06	; 6
			morse.lengthInSymbols = 3;
			morse.lengthInElements = 9;
		}
		break;
    27a6:	08 95       	ret

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    27a8:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 4;
    27aa:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'X':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    27ac:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    27ae:	08 95       	ret

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
    27b0:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 4;
    27b2:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Y':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    27b4:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 13;
		}
		break;
    27b6:	08 95       	ret

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
    27b8:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 4;
    27ba:	74 e0       	ldi	r23, 0x04	; 4
		}
		break;

		case 'Z':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    27bc:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 4;
			morse.lengthInElements = 11;
		}
		break;
    27be:	08 95       	ret

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
    27c0:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
			morse.lengthInSymbols = 5;
    27c2:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '0':
		{
			morse.pattern = 0x1f;   /* 0001 1111; */
    27c4:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
		}
		break;
    27c6:	08 95       	ret

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
    27c8:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 5;
    27ca:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '1':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    27cc:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
		}
		break;
    27ce:	08 95       	ret

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    27d0:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
			morse.lengthInSymbols = 5;
    27d2:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '2':
		{
			morse.pattern = 0x1c;   /* 0001 1100; */
    27d4:	6c e1       	ldi	r22, 0x1C	; 28
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    27d6:	08 95       	ret

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    27d8:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
			morse.lengthInSymbols = 5;
    27da:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '3':
		{
			morse.pattern = 0x18;   /* 0001 1000; */
    27dc:	68 e1       	ldi	r22, 0x18	; 24
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    27de:	08 95       	ret

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    27e0:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
			morse.lengthInSymbols = 5;
    27e2:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '4':
		{
			morse.pattern = 0x10;   /* 0001 0000; */
    27e4:	60 e1       	ldi	r22, 0x10	; 16
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    27e6:	08 95       	ret

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 9;
    27e8:	89 e0       	ldi	r24, 0x09	; 9
		break;

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
			morse.lengthInSymbols = 5;
    27ea:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '5':
		{
			morse.pattern = 0x00;   /* 0000 0000; */
    27ec:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 9;
		}
		break;
    27ee:	08 95       	ret

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    27f0:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
			morse.lengthInSymbols = 5;
    27f2:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '6':
		{
			morse.pattern = 0x01;   /* 0000 0001; */
    27f4:	61 e0       	ldi	r22, 0x01	; 1
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    27f6:	08 95       	ret

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    27f8:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
			morse.lengthInSymbols = 5;
    27fa:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '7':
		{
			morse.pattern = 0x03;   /* 0000 0011; */
    27fc:	63 e0       	ldi	r22, 0x03	; 3
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    27fe:	08 95       	ret

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    2800:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 5;
    2802:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '8':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    2804:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    2806:	08 95       	ret

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
    2808:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
			morse.lengthInSymbols = 5;
    280a:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '9':
		{
			morse.pattern = 0x0f;   /* 0000 1111; */
    280c:	6f e0       	ldi	r22, 0x0F	; 15
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 17;
		}
		break;
    280e:	08 95       	ret

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2810:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
			morse.lengthInSymbols = 6;
    2812:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '.':
		{
			morse.pattern = 0x2a;   /* 0010 1010; */
    2814:	6a e2       	ldi	r22, 0x2A	; 42
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    2816:	08 95       	ret

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2818:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
			morse.lengthInSymbols = 6;
    281a:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ',':
		{
			morse.pattern = 0x33;   /* 0011 0011; */
    281c:	63 e3       	ldi	r22, 0x33	; 51
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    281e:	08 95       	ret

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    2820:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
			morse.lengthInSymbols = 6;
    2822:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '?':
		{
			morse.pattern = 0x0c;   /* 0000 1100; */
    2824:	6c e0       	ldi	r22, 0x0C	; 12
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    2826:	08 95       	ret

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2828:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
			morse.lengthInSymbols = 6;
    282a:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '\'':
		{
			morse.pattern = 0x1e;   /* 0001 1110; */
    282c:	6e e1       	ldi	r22, 0x1E	; 30
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    282e:	08 95       	ret

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2830:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
			morse.lengthInSymbols = 6;
    2832:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '!':
		{
			morse.pattern = 0x35;   /* 0011 0101; */
    2834:	65 e3       	ldi	r22, 0x35	; 53
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    2836:	08 95       	ret

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2838:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
			morse.lengthInSymbols = 5;
    283a:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '/':
		{
			morse.pattern = 0x09;   /* 0000 1001; */
    283c:	69 e0       	ldi	r22, 0x09	; 9
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    283e:	08 95       	ret

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
    2840:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
			morse.lengthInSymbols = 5;
    2842:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '(':
		{
			morse.pattern = 0x0d;   /* 0000 1101; */
    2844:	6d e0       	ldi	r22, 0x0D	; 13
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 15;
		}
		break;
    2846:	08 95       	ret

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
    2848:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
			morse.lengthInSymbols = 6;
    284a:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ')':
		{
			morse.pattern = 0x2d;   /* 0010 1101; */
    284c:	6d e2       	ldi	r22, 0x2D	; 45
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 19;
		}
		break;
    284e:	08 95       	ret

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
    2850:	8b e0       	ldi	r24, 0x0B	; 11
		break;

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 5;
    2852:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '&':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    2854:	62 e0       	ldi	r22, 0x02	; 2
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 11;
		}
		break;
    2856:	08 95       	ret

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2858:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
			morse.lengthInSymbols = 6;
    285a:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ':':
		{
			morse.pattern = 0x07;   /* 0000 0111; */
    285c:	67 e0       	ldi	r22, 0x07	; 7
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    285e:	08 95       	ret

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 12;
    2860:	8c e0       	ldi	r24, 0x0C	; 12
		break;

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
			morse.lengthInSymbols = 6;
    2862:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case ';':
		{
			morse.pattern = 0x15;   /* 0001 0101; */
    2864:	65 e1       	ldi	r22, 0x15	; 21
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 12;
		}
		break;
    2866:	08 95       	ret

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2868:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
			morse.lengthInSymbols = 5;
    286a:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '=':
		{
			morse.pattern = 0x11;   /* 0001 0001; */
    286c:	61 e1       	ldi	r22, 0x11	; 17
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    286e:	08 95       	ret

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
    2870:	8d e0       	ldi	r24, 0x0D	; 13
		break;

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
			morse.lengthInSymbols = 5;
    2872:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '+':
		{
			morse.pattern = 0x0a;   /* 0000 1010; */
    2874:	6a e0       	ldi	r22, 0x0A	; 10
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 13;
		}
		break;
    2876:	08 95       	ret

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    2878:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
			morse.lengthInSymbols = 6;
    287a:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '-':
		{
			morse.pattern = 0x21;   /* 0010 0001; */
    287c:	61 e2       	ldi	r22, 0x21	; 33
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    287e:	08 95       	ret

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2880:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
			morse.lengthInSymbols = 6;
    2882:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '_':
		{
			morse.pattern = 0x2c;   /* 0010 1100; */
    2884:	6c e2       	ldi	r22, 0x2C	; 44
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    2886:	08 95       	ret

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
    2888:	8f e0       	ldi	r24, 0x0F	; 15
		break;

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
			morse.lengthInSymbols = 6;
    288a:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '"':
		{
			morse.pattern = 0x12;   /* 0001 0010; */
    288c:	62 e1       	ldi	r22, 0x12	; 18
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 15;
		}
		break;
    288e:	08 95       	ret

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
			morse.lengthInSymbols = 7;
			morse.lengthInElements = 17;
    2890:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
			morse.lengthInSymbols = 7;
    2892:	77 e0       	ldi	r23, 0x07	; 7
		}
		break;

		case '$':
		{
			morse.pattern = 0x48;   /* 0100 1000; */
    2894:	68 e4       	ldi	r22, 0x48	; 72
			morse.lengthInSymbols = 7;
			morse.lengthInElements = 17;
		}
		break;
    2896:	08 95       	ret

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
    2898:	81 e1       	ldi	r24, 0x11	; 17
		break;

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
			morse.lengthInSymbols = 6;
    289a:	76 e0       	ldi	r23, 0x06	; 6
		}
		break;

		case '@':
		{
			morse.pattern = 0x16;   /* 0001 0110; */
    289c:	66 e1       	ldi	r22, 0x16	; 22
			morse.lengthInSymbols = 6;
			morse.lengthInElements = 17;
		}
		break;
    289e:	08 95       	ret

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
    28a0:	84 e0       	ldi	r24, 0x04	; 4
		}
		break;

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
    28a2:	77 e0       	ldi	r23, 0x07	; 7
			morse.lengthInElements = 17;
		}
		break;

		case '|':                       /* inter-word space */
		{ morse.pattern = 0xff;         /* 1000 0000; */
    28a4:	6f ef       	ldi	r22, 0xFF	; 255
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
		}
		break;
    28a6:	08 95       	ret

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
    28a8:	87 e0       	ldi	r24, 0x07	; 7
		}
		break;

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
		  morse.lengthInSymbols = 7;
    28aa:	77 e0       	ldi	r23, 0x07	; 7
		  morse.lengthInElements = 4;   /* adjusted by -3 to account for inter-character space */
		}
		break;

		case ' ':                       /* inter-word space */
		{ morse.pattern = 0xfe;         /* 1000 0000; */
    28ac:	6e ef       	ldi	r22, 0xFE	; 254
		  morse.lengthInSymbols = 7;
		  morse.lengthInElements = 7;   /* 4 + 3 (character space) = 7 */
		}
		break;
    28ae:	08 95       	ret

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
    28b0:	83 e1       	ldi	r24, 0x13	; 19
		break;

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
			morse.lengthInSymbols = 5;
    28b2:	75 e0       	ldi	r23, 0x05	; 5
		}
		break;

		case '<':                       /* long keydown */
		{
			morse.pattern = 0x1f;       /* 0001 1111; */
    28b4:	6f e1       	ldi	r22, 0x1F	; 31
			morse.lengthInSymbols = 5;
			morse.lengthInElements = 19;
		}
		break;
    28b6:	08 95       	ret

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
			morse.lengthInSymbols = 0;
			morse.lengthInElements = 0;
    28b8:	80 e0       	ldi	r24, 0x00	; 0
		break;

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
			morse.lengthInSymbols = 0;
    28ba:	70 e0       	ldi	r23, 0x00	; 0
		}
		break;

		default:
		{
			morse.pattern = 0x0000; /* 0000 0000; */
    28bc:	60 e0       	ldi	r22, 0x00	; 0
			morse.lengthInSymbols = 0;
			morse.lengthInElements = 0;
		}
		break;
    28be:	08 95       	ret
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 2;
			morse.lengthInElements = 5;
    28c0:	85 e0       	ldi	r24, 0x05	; 5
	switch( c )
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
			morse.lengthInSymbols = 2;
    28c2:	72 e0       	ldi	r23, 0x02	; 2

	switch( c )
	{
		case 'A':
		{
			morse.pattern = 0x02;   /* 0000 0010; */
    28c4:	62 e0       	ldi	r22, 0x02	; 2
		}
		break;
	}

	return( morse);
}
    28c6:	08 95       	ret

000028c8 <makeMorse>:
 *  Call this function with a NULL argument at intervals of 1 element of time to generate Morse code.
 *  Once loaded with a string each call to this function returns a BOOL indicating whether a CW carrier should be sent
 *  Pass in a pointer to a BOOL in the second and third arguments:
 */
BOOL makeMorse(char* s, BOOL* repeating, BOOL* finished)
{
    28c8:	cf 93       	push	r28
    28ca:	df 93       	push	r29
    28cc:	ea 01       	movw	r28, r20
	static uint8_t addedSpace;      /* adds additional time to make an inter-character space */
	static BOOL completedString = FALSE;
	static BOOL carrierOn = FALSE;
	static BOOL holdKeyDown = FALSE;

	if(s)   /* load a new NULL-terminated string to send */
    28ce:	00 97       	sbiw	r24, 0x00	; 0
    28d0:	09 f4       	brne	.+2      	; 0x28d4 <makeMorse+0xc>
    28d2:	41 c0       	rjmp	.+130    	; 0x2956 <makeMorse+0x8e>
	{
		holdKeyDown = FALSE;
    28d4:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <_ZZ9makeMorseE11holdKeyDown>

		if(repeating)
    28d8:	61 15       	cp	r22, r1
    28da:	71 05       	cpc	r23, r1
    28dc:	21 f0       	breq	.+8      	; 0x28e6 <makeMorse+0x1e>
		{
			repeat = *repeating;
    28de:	db 01       	movw	r26, r22
    28e0:	2c 91       	ld	r18, X
    28e2:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <_ZZ9makeMorseE6repeat>
		}

		if(*s)
    28e6:	fc 01       	movw	r30, r24
    28e8:	20 81       	ld	r18, Z
    28ea:	22 23       	and	r18, r18
    28ec:	31 f1       	breq	.+76     	; 0x293a <makeMorse+0x72>
		{
			if(str != s) /* Passing in the same pointer will not change the state of Morse.c */
    28ee:	40 91 77 04 	lds	r20, 0x0477	; 0x800477 <_ZZ9makeMorseE3str>
    28f2:	50 91 78 04 	lds	r21, 0x0478	; 0x800478 <_ZZ9makeMorseE3str+0x1>
    28f6:	84 17       	cp	r24, r20
    28f8:	95 07       	cpc	r25, r21
    28fa:	09 f4       	brne	.+2      	; 0x28fe <makeMorse+0x36>
    28fc:	e9 c0       	rjmp	.+466    	; 0x2ad0 <makeMorse+0x208>
			{
				str = s;
    28fe:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <_ZZ9makeMorseE3str+0x1>
    2902:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <_ZZ9makeMorseE3str>
				c = ' ';
    2906:	80 e2       	ldi	r24, 0x20	; 32
    2908:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_ZZ9makeMorseE1c>
				morseInProgress = getMorseChar(*str);
    290c:	82 2f       	mov	r24, r18
    290e:	0e 94 6e 13 	call	0x26dc	; 0x26dc <_Z12getMorseCharc>
    2912:	60 93 74 04 	sts	0x0474, r22	; 0x800474 <_ZZ9makeMorseE15morseInProgress>
    2916:	70 93 75 04 	sts	0x0475, r23	; 0x800475 <_ZZ9makeMorseE15morseInProgress+0x1>
    291a:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZZ9makeMorseE15morseInProgress+0x2>
				charIndex = 0;
    291e:	10 92 73 04 	sts	0x0473, r1	; 0x800473 <_ZZ9makeMorseE9charIndex>
				symbolIndex = 0;
    2922:	10 92 72 04 	sts	0x0472, r1	; 0x800472 <_ZZ9makeMorseE11symbolIndex>
				elementIndex = 0;
    2926:	10 92 71 04 	sts	0x0471, r1	; 0x800471 <_ZZ9makeMorseE12elementIndex>
				addedSpace = 0;
    292a:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <_ZZ9makeMorseE10addedSpace>
				completedString = FALSE;
    292e:	10 92 6f 04 	sts	0x046F, r1	; 0x80046f <_ZZ9makeMorseE15completedString>
				carrierOn = FALSE;
    2932:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <_ZZ9makeMorseE9carrierOn>
			}

			carrierOn = FALSE;
		}

		return( OFF);
    2936:	80 e0       	ldi	r24, 0x00	; 0
    2938:	d0 c0       	rjmp	.+416    	; 0x2ada <makeMorse+0x212>
				carrierOn = FALSE;
			}
		}
		else    /* a zero-length string shuts down makeMorse */
		{
			str = NULL;
    293a:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZZ9makeMorseE3str+0x1>
    293e:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <_ZZ9makeMorseE3str>
			completedString = TRUE;
    2942:	81 e0       	ldi	r24, 0x01	; 1
    2944:	80 93 6f 04 	sts	0x046F, r24	; 0x80046f <_ZZ9makeMorseE15completedString>
			if(finished)
    2948:	20 97       	sbiw	r28, 0x00	; 0
    294a:	09 f0       	breq	.+2      	; 0x294e <makeMorse+0x86>
			{
				*finished = TRUE;
    294c:	88 83       	st	Y, r24
			}

			carrierOn = FALSE;
    294e:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <_ZZ9makeMorseE9carrierOn>
		}

		return( OFF);
    2952:	80 e0       	ldi	r24, 0x00	; 0
    2954:	c2 c0       	rjmp	.+388    	; 0x2ada <makeMorse+0x212>
	}
	else if(str)
    2956:	e0 91 77 04 	lds	r30, 0x0477	; 0x800477 <_ZZ9makeMorseE3str>
    295a:	f0 91 78 04 	lds	r31, 0x0478	; 0x800478 <_ZZ9makeMorseE3str+0x1>
    295e:	30 97       	sbiw	r30, 0x00	; 0
    2960:	09 f4       	brne	.+2      	; 0x2964 <makeMorse+0x9c>
    2962:	aa c0       	rjmp	.+340    	; 0x2ab8 <makeMorse+0x1f0>
	{
		if(repeating)
    2964:	61 15       	cp	r22, r1
    2966:	71 05       	cpc	r23, r1
    2968:	21 f0       	breq	.+8      	; 0x2972 <makeMorse+0xaa>
		{
			*repeating = repeat;
    296a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_ZZ9makeMorseE6repeat>
    296e:	db 01       	movw	r26, r22
    2970:	8c 93       	st	X, r24
		}

		if(completedString)
    2972:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <_ZZ9makeMorseE15completedString>
    2976:	88 23       	and	r24, r24
    2978:	49 f0       	breq	.+18     	; 0x298c <makeMorse+0xc4>
		{
			if(finished)
    297a:	20 97       	sbiw	r28, 0x00	; 0
    297c:	09 f4       	brne	.+2      	; 0x2980 <makeMorse+0xb8>
    297e:	aa c0       	rjmp	.+340    	; 0x2ad4 <makeMorse+0x20c>
			{
				*finished = TRUE;
    2980:	81 e0       	ldi	r24, 0x01	; 1
    2982:	88 83       	st	Y, r24
				holdKeyDown = FALSE;
    2984:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <_ZZ9makeMorseE11holdKeyDown>
			}
			return( OFF);
    2988:	80 e0       	ldi	r24, 0x00	; 0
    298a:	a7 c0       	rjmp	.+334    	; 0x2ada <makeMorse+0x212>
		}

		if(elementIndex)
    298c:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <_ZZ9makeMorseE12elementIndex>
    2990:	88 23       	and	r24, r24
    2992:	21 f0       	breq	.+8      	; 0x299c <makeMorse+0xd4>
		{
			elementIndex--;
    2994:	81 50       	subi	r24, 0x01	; 1
    2996:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <_ZZ9makeMorseE12elementIndex>
    299a:	7f c0       	rjmp	.+254    	; 0x2a9a <makeMorse+0x1d2>
		}
		else if(carrierOn && !holdKeyDown)  /* carrier is on, so turn it off and wait appropriate amount of space */
    299c:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <_ZZ9makeMorseE9carrierOn>
    29a0:	88 23       	and	r24, r24
    29a2:	81 f0       	breq	.+32     	; 0x29c4 <makeMorse+0xfc>
    29a4:	80 91 79 04 	lds	r24, 0x0479	; 0x800479 <_ZZ9makeMorseE11holdKeyDown>
    29a8:	81 11       	cpse	r24, r1
    29aa:	0c c0       	rjmp	.+24     	; 0x29c4 <makeMorse+0xfc>
		{
			carrierOn = FALSE;
    29ac:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <_ZZ9makeMorseE9carrierOn>
			/* wait one element = inter-symbol space */
			if(addedSpace)
    29b0:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <_ZZ9makeMorseE10addedSpace>
    29b4:	88 23       	and	r24, r24
    29b6:	09 f4       	brne	.+2      	; 0x29ba <makeMorse+0xf2>
    29b8:	70 c0       	rjmp	.+224    	; 0x2a9a <makeMorse+0x1d2>
			{
				elementIndex = addedSpace;
    29ba:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <_ZZ9makeMorseE12elementIndex>
				addedSpace = 0;
    29be:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <_ZZ9makeMorseE10addedSpace>
    29c2:	6b c0       	rjmp	.+214    	; 0x2a9a <makeMorse+0x1d2>
			}
			/* wait inter-character space */
		}
		else    /* carrier is off, so turn it on and get next symbol */
		{
			if(symbolIndex >= morseInProgress.lengthInSymbols)
    29c4:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <_ZZ9makeMorseE15morseInProgress+0x1>
    29c8:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <_ZZ9makeMorseE11symbolIndex>
    29cc:	89 17       	cp	r24, r25
    29ce:	90 f1       	brcs	.+100    	; 0x2a34 <makeMorse+0x16c>
			{
				c = (*(str + ++charIndex));
    29d0:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <_ZZ9makeMorseE9charIndex>
    29d4:	8f 5f       	subi	r24, 0xFF	; 255
    29d6:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <_ZZ9makeMorseE9charIndex>
    29da:	df 01       	movw	r26, r30
    29dc:	a8 0f       	add	r26, r24
    29de:	b1 1d       	adc	r27, r1
    29e0:	8c 91       	ld	r24, X
    29e2:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_ZZ9makeMorseE1c>

				if(!c)  /* wrap to beginning of text */
    29e6:	81 11       	cpse	r24, r1
    29e8:	19 c0       	rjmp	.+50     	; 0x2a1c <makeMorse+0x154>
				{
					if(repeat)
    29ea:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_ZZ9makeMorseE6repeat>
    29ee:	88 23       	and	r24, r24
    29f0:	31 f0       	breq	.+12     	; 0x29fe <makeMorse+0x136>
					{
						c = *str;
    29f2:	80 81       	ld	r24, Z
    29f4:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <_ZZ9makeMorseE1c>
						charIndex = 0;
    29f8:	10 92 73 04 	sts	0x0473, r1	; 0x800473 <_ZZ9makeMorseE9charIndex>
    29fc:	0f c0       	rjmp	.+30     	; 0x2a1c <makeMorse+0x154>
					}
					else
					{
						str = NULL;
    29fe:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <_ZZ9makeMorseE3str+0x1>
    2a02:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <_ZZ9makeMorseE3str>
						carrierOn = FALSE;
    2a06:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <_ZZ9makeMorseE9carrierOn>
						completedString = TRUE;
    2a0a:	91 e0       	ldi	r25, 0x01	; 1
    2a0c:	90 93 6f 04 	sts	0x046F, r25	; 0x80046f <_ZZ9makeMorseE15completedString>
						if(finished)
    2a10:	20 97       	sbiw	r28, 0x00	; 0
    2a12:	09 f0       	breq	.+2      	; 0x2a16 <makeMorse+0x14e>
						{
							*finished = TRUE;
    2a14:	98 83       	st	Y, r25
						}
						holdKeyDown = FALSE;
    2a16:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <_ZZ9makeMorseE11holdKeyDown>
						return( OFF );
    2a1a:	5f c0       	rjmp	.+190    	; 0x2ada <makeMorse+0x212>
					}
				}

				morseInProgress = getMorseChar(c);
    2a1c:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <_ZZ9makeMorseE1c>
    2a20:	0e 94 6e 13 	call	0x26dc	; 0x26dc <_Z12getMorseCharc>
    2a24:	60 93 74 04 	sts	0x0474, r22	; 0x800474 <_ZZ9makeMorseE15morseInProgress>
    2a28:	70 93 75 04 	sts	0x0475, r23	; 0x800475 <_ZZ9makeMorseE15morseInProgress+0x1>
    2a2c:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <_ZZ9makeMorseE15morseInProgress+0x2>
				symbolIndex = 0;
    2a30:	10 92 72 04 	sts	0x0472, r1	; 0x800472 <_ZZ9makeMorseE11symbolIndex>
			}

			if(morseInProgress.pattern < INTER_WORD_SPACE)
    2a34:	20 91 74 04 	lds	r18, 0x0474	; 0x800474 <_ZZ9makeMorseE15morseInProgress>
    2a38:	2d 3f       	cpi	r18, 0xFD	; 253
    2a3a:	00 f5       	brcc	.+64     	; 0x2a7c <makeMorse+0x1b4>
			{
				BOOL isDah = morseInProgress.pattern & (1 << symbolIndex++);
    2a3c:	40 91 72 04 	lds	r20, 0x0472	; 0x800472 <_ZZ9makeMorseE11symbolIndex>
    2a40:	31 e0       	ldi	r19, 0x01	; 1
    2a42:	34 0f       	add	r19, r20
    2a44:	30 93 72 04 	sts	0x0472, r19	; 0x800472 <_ZZ9makeMorseE11symbolIndex>

				if(isDah)
    2a48:	81 e0       	ldi	r24, 0x01	; 1
    2a4a:	90 e0       	ldi	r25, 0x00	; 0
    2a4c:	02 c0       	rjmp	.+4      	; 0x2a52 <makeMorse+0x18a>
    2a4e:	88 0f       	add	r24, r24
    2a50:	99 1f       	adc	r25, r25
    2a52:	4a 95       	dec	r20
    2a54:	e2 f7       	brpl	.-8      	; 0x2a4e <makeMorse+0x186>
    2a56:	82 23       	and	r24, r18
    2a58:	21 f0       	breq	.+8      	; 0x2a62 <makeMorse+0x19a>
				{
					elementIndex = 2;
    2a5a:	82 e0       	ldi	r24, 0x02	; 2
    2a5c:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <_ZZ9makeMorseE12elementIndex>
    2a60:	02 c0       	rjmp	.+4      	; 0x2a66 <makeMorse+0x19e>
				}
				else
				{
					elementIndex = 0;
    2a62:	10 92 71 04 	sts	0x0471, r1	; 0x800471 <_ZZ9makeMorseE12elementIndex>
				}

				carrierOn = TRUE;
    2a66:	81 e0       	ldi	r24, 0x01	; 1
    2a68:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <_ZZ9makeMorseE9carrierOn>

				if(symbolIndex >= morseInProgress.lengthInSymbols)
    2a6c:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_ZZ9makeMorseE15morseInProgress+0x1>
    2a70:	38 17       	cp	r19, r24
    2a72:	98 f0       	brcs	.+38     	; 0x2a9a <makeMorse+0x1d2>
				{
					addedSpace = 2;
    2a74:	82 e0       	ldi	r24, 0x02	; 2
    2a76:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <_ZZ9makeMorseE10addedSpace>
    2a7a:	0f c0       	rjmp	.+30     	; 0x2a9a <makeMorse+0x1d2>
				}
			}
			else
			{
				uint8_t sym = morseInProgress.lengthInSymbols;
    2a7c:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <_ZZ9makeMorseE15morseInProgress+0x1>
				symbolIndex = 255;  /* ensure the next character gets read */
    2a80:	9f ef       	ldi	r25, 0xFF	; 255
    2a82:	90 93 72 04 	sts	0x0472, r25	; 0x800472 <_ZZ9makeMorseE11symbolIndex>
				carrierOn = FALSE;
    2a86:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <_ZZ9makeMorseE9carrierOn>
				if(sym >= 4 )
    2a8a:	84 30       	cpi	r24, 0x04	; 4
    2a8c:	20 f0       	brcs	.+8      	; 0x2a96 <makeMorse+0x1ce>
				{
					elementIndex = morseInProgress.lengthInSymbols - 4;
    2a8e:	84 50       	subi	r24, 0x04	; 4
    2a90:	80 93 71 04 	sts	0x0471, r24	; 0x800471 <_ZZ9makeMorseE12elementIndex>
    2a94:	02 c0       	rjmp	.+4      	; 0x2a9a <makeMorse+0x1d2>
				}
				else
				{
					elementIndex = 0;
    2a96:	10 92 71 04 	sts	0x0471, r1	; 0x800471 <_ZZ9makeMorseE12elementIndex>
				}
			}
		}

		/* Overrides for key on and key off special characters */
		if(c == '<')    /* constant tone */
    2a9a:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <_ZZ9makeMorseE1c>
    2a9e:	8c 33       	cpi	r24, 0x3C	; 60
    2aa0:	31 f4       	brne	.+12     	; 0x2aae <makeMorse+0x1e6>
		{
			holdKeyDown = TRUE;
    2aa2:	81 e0       	ldi	r24, 0x01	; 1
    2aa4:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <_ZZ9makeMorseE11holdKeyDown>
		{
			holdKeyDown = FALSE;
		}
	}

	if(finished)
    2aa8:	20 97       	sbiw	r28, 0x00	; 0
    2aaa:	41 f4       	brne	.+16     	; 0x2abc <makeMorse+0x1f4>
    2aac:	16 c0       	rjmp	.+44     	; 0x2ada <makeMorse+0x212>
		{
			holdKeyDown = TRUE;
		}
		else
		{
			holdKeyDown = FALSE;
    2aae:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <_ZZ9makeMorseE11holdKeyDown>
		}
	}

	if(finished)
    2ab2:	20 97       	sbiw	r28, 0x00	; 0
    2ab4:	19 f4       	brne	.+6      	; 0x2abc <makeMorse+0x1f4>
    2ab6:	09 c0       	rjmp	.+18     	; 0x2aca <makeMorse+0x202>
    2ab8:	20 97       	sbiw	r28, 0x00	; 0
    2aba:	19 f0       	breq	.+6      	; 0x2ac2 <makeMorse+0x1fa>
	{
		*finished = completedString;
    2abc:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <_ZZ9makeMorseE15completedString>
    2ac0:	88 83       	st	Y, r24
	}

	if(holdKeyDown)
    2ac2:	80 91 79 04 	lds	r24, 0x0479	; 0x800479 <_ZZ9makeMorseE11holdKeyDown>
    2ac6:	81 11       	cpse	r24, r1
    2ac8:	07 c0       	rjmp	.+14     	; 0x2ad8 <makeMorse+0x210>
	{
		return(TRUE);
	}
	else
	{
		return( carrierOn);
    2aca:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <_ZZ9makeMorseE9carrierOn>
    2ace:	05 c0       	rjmp	.+10     	; 0x2ada <makeMorse+0x212>
			}

			carrierOn = FALSE;
		}

		return( OFF);
    2ad0:	80 e0       	ldi	r24, 0x00	; 0
    2ad2:	03 c0       	rjmp	.+6      	; 0x2ada <makeMorse+0x212>
			if(finished)
			{
				*finished = TRUE;
				holdKeyDown = FALSE;
			}
			return( OFF);
    2ad4:	80 e0       	ldi	r24, 0x00	; 0
    2ad6:	01 c0       	rjmp	.+2      	; 0x2ada <makeMorse+0x212>
		*finished = completedString;
	}

	if(holdKeyDown)
	{
		return(TRUE);
    2ad8:	81 e0       	ldi	r24, 0x01	; 1
	}
	else
	{
		return( carrierOn);
	}
}
    2ada:	df 91       	pop	r29
    2adc:	cf 91       	pop	r28
    2ade:	08 95       	ret

00002ae0 <__subsf3>:
    2ae0:	50 58       	subi	r21, 0x80	; 128

00002ae2 <__addsf3>:
    2ae2:	bb 27       	eor	r27, r27
    2ae4:	aa 27       	eor	r26, r26
    2ae6:	0e 94 88 15 	call	0x2b10	; 0x2b10 <__addsf3x>
    2aea:	0c 94 60 16 	jmp	0x2cc0	; 0x2cc0 <__fp_round>
    2aee:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <__fp_pscA>
    2af2:	38 f0       	brcs	.+14     	; 0x2b02 <__addsf3+0x20>
    2af4:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__fp_pscB>
    2af8:	20 f0       	brcs	.+8      	; 0x2b02 <__addsf3+0x20>
    2afa:	39 f4       	brne	.+14     	; 0x2b0a <__addsf3+0x28>
    2afc:	9f 3f       	cpi	r25, 0xFF	; 255
    2afe:	19 f4       	brne	.+6      	; 0x2b06 <__addsf3+0x24>
    2b00:	26 f4       	brtc	.+8      	; 0x2b0a <__addsf3+0x28>
    2b02:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__fp_nan>
    2b06:	0e f4       	brtc	.+2      	; 0x2b0a <__addsf3+0x28>
    2b08:	e0 95       	com	r30
    2b0a:	e7 fb       	bst	r30, 7
    2b0c:	0c 94 49 16 	jmp	0x2c92	; 0x2c92 <__fp_inf>

00002b10 <__addsf3x>:
    2b10:	e9 2f       	mov	r30, r25
    2b12:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__fp_split3>
    2b16:	58 f3       	brcs	.-42     	; 0x2aee <__addsf3+0xc>
    2b18:	ba 17       	cp	r27, r26
    2b1a:	62 07       	cpc	r22, r18
    2b1c:	73 07       	cpc	r23, r19
    2b1e:	84 07       	cpc	r24, r20
    2b20:	95 07       	cpc	r25, r21
    2b22:	20 f0       	brcs	.+8      	; 0x2b2c <__addsf3x+0x1c>
    2b24:	79 f4       	brne	.+30     	; 0x2b44 <__addsf3x+0x34>
    2b26:	a6 f5       	brtc	.+104    	; 0x2b90 <__addsf3x+0x80>
    2b28:	0c 94 93 16 	jmp	0x2d26	; 0x2d26 <__fp_zero>
    2b2c:	0e f4       	brtc	.+2      	; 0x2b30 <__addsf3x+0x20>
    2b2e:	e0 95       	com	r30
    2b30:	0b 2e       	mov	r0, r27
    2b32:	ba 2f       	mov	r27, r26
    2b34:	a0 2d       	mov	r26, r0
    2b36:	0b 01       	movw	r0, r22
    2b38:	b9 01       	movw	r22, r18
    2b3a:	90 01       	movw	r18, r0
    2b3c:	0c 01       	movw	r0, r24
    2b3e:	ca 01       	movw	r24, r20
    2b40:	a0 01       	movw	r20, r0
    2b42:	11 24       	eor	r1, r1
    2b44:	ff 27       	eor	r31, r31
    2b46:	59 1b       	sub	r21, r25
    2b48:	99 f0       	breq	.+38     	; 0x2b70 <__addsf3x+0x60>
    2b4a:	59 3f       	cpi	r21, 0xF9	; 249
    2b4c:	50 f4       	brcc	.+20     	; 0x2b62 <__addsf3x+0x52>
    2b4e:	50 3e       	cpi	r21, 0xE0	; 224
    2b50:	68 f1       	brcs	.+90     	; 0x2bac <__addsf3x+0x9c>
    2b52:	1a 16       	cp	r1, r26
    2b54:	f0 40       	sbci	r31, 0x00	; 0
    2b56:	a2 2f       	mov	r26, r18
    2b58:	23 2f       	mov	r18, r19
    2b5a:	34 2f       	mov	r19, r20
    2b5c:	44 27       	eor	r20, r20
    2b5e:	58 5f       	subi	r21, 0xF8	; 248
    2b60:	f3 cf       	rjmp	.-26     	; 0x2b48 <__addsf3x+0x38>
    2b62:	46 95       	lsr	r20
    2b64:	37 95       	ror	r19
    2b66:	27 95       	ror	r18
    2b68:	a7 95       	ror	r26
    2b6a:	f0 40       	sbci	r31, 0x00	; 0
    2b6c:	53 95       	inc	r21
    2b6e:	c9 f7       	brne	.-14     	; 0x2b62 <__addsf3x+0x52>
    2b70:	7e f4       	brtc	.+30     	; 0x2b90 <__addsf3x+0x80>
    2b72:	1f 16       	cp	r1, r31
    2b74:	ba 0b       	sbc	r27, r26
    2b76:	62 0b       	sbc	r22, r18
    2b78:	73 0b       	sbc	r23, r19
    2b7a:	84 0b       	sbc	r24, r20
    2b7c:	ba f0       	brmi	.+46     	; 0x2bac <__addsf3x+0x9c>
    2b7e:	91 50       	subi	r25, 0x01	; 1
    2b80:	a1 f0       	breq	.+40     	; 0x2baa <__addsf3x+0x9a>
    2b82:	ff 0f       	add	r31, r31
    2b84:	bb 1f       	adc	r27, r27
    2b86:	66 1f       	adc	r22, r22
    2b88:	77 1f       	adc	r23, r23
    2b8a:	88 1f       	adc	r24, r24
    2b8c:	c2 f7       	brpl	.-16     	; 0x2b7e <__addsf3x+0x6e>
    2b8e:	0e c0       	rjmp	.+28     	; 0x2bac <__addsf3x+0x9c>
    2b90:	ba 0f       	add	r27, r26
    2b92:	62 1f       	adc	r22, r18
    2b94:	73 1f       	adc	r23, r19
    2b96:	84 1f       	adc	r24, r20
    2b98:	48 f4       	brcc	.+18     	; 0x2bac <__addsf3x+0x9c>
    2b9a:	87 95       	ror	r24
    2b9c:	77 95       	ror	r23
    2b9e:	67 95       	ror	r22
    2ba0:	b7 95       	ror	r27
    2ba2:	f7 95       	ror	r31
    2ba4:	9e 3f       	cpi	r25, 0xFE	; 254
    2ba6:	08 f0       	brcs	.+2      	; 0x2baa <__addsf3x+0x9a>
    2ba8:	b0 cf       	rjmp	.-160    	; 0x2b0a <__addsf3+0x28>
    2baa:	93 95       	inc	r25
    2bac:	88 0f       	add	r24, r24
    2bae:	08 f0       	brcs	.+2      	; 0x2bb2 <__addsf3x+0xa2>
    2bb0:	99 27       	eor	r25, r25
    2bb2:	ee 0f       	add	r30, r30
    2bb4:	97 95       	ror	r25
    2bb6:	87 95       	ror	r24
    2bb8:	08 95       	ret

00002bba <__fixunssfsi>:
    2bba:	0e 94 79 16 	call	0x2cf2	; 0x2cf2 <__fp_splitA>
    2bbe:	88 f0       	brcs	.+34     	; 0x2be2 <__fixunssfsi+0x28>
    2bc0:	9f 57       	subi	r25, 0x7F	; 127
    2bc2:	98 f0       	brcs	.+38     	; 0x2bea <__fixunssfsi+0x30>
    2bc4:	b9 2f       	mov	r27, r25
    2bc6:	99 27       	eor	r25, r25
    2bc8:	b7 51       	subi	r27, 0x17	; 23
    2bca:	b0 f0       	brcs	.+44     	; 0x2bf8 <__fixunssfsi+0x3e>
    2bcc:	e1 f0       	breq	.+56     	; 0x2c06 <__fixunssfsi+0x4c>
    2bce:	66 0f       	add	r22, r22
    2bd0:	77 1f       	adc	r23, r23
    2bd2:	88 1f       	adc	r24, r24
    2bd4:	99 1f       	adc	r25, r25
    2bd6:	1a f0       	brmi	.+6      	; 0x2bde <__fixunssfsi+0x24>
    2bd8:	ba 95       	dec	r27
    2bda:	c9 f7       	brne	.-14     	; 0x2bce <__fixunssfsi+0x14>
    2bdc:	14 c0       	rjmp	.+40     	; 0x2c06 <__fixunssfsi+0x4c>
    2bde:	b1 30       	cpi	r27, 0x01	; 1
    2be0:	91 f0       	breq	.+36     	; 0x2c06 <__fixunssfsi+0x4c>
    2be2:	0e 94 93 16 	call	0x2d26	; 0x2d26 <__fp_zero>
    2be6:	b1 e0       	ldi	r27, 0x01	; 1
    2be8:	08 95       	ret
    2bea:	0c 94 93 16 	jmp	0x2d26	; 0x2d26 <__fp_zero>
    2bee:	67 2f       	mov	r22, r23
    2bf0:	78 2f       	mov	r23, r24
    2bf2:	88 27       	eor	r24, r24
    2bf4:	b8 5f       	subi	r27, 0xF8	; 248
    2bf6:	39 f0       	breq	.+14     	; 0x2c06 <__fixunssfsi+0x4c>
    2bf8:	b9 3f       	cpi	r27, 0xF9	; 249
    2bfa:	cc f3       	brlt	.-14     	; 0x2bee <__fixunssfsi+0x34>
    2bfc:	86 95       	lsr	r24
    2bfe:	77 95       	ror	r23
    2c00:	67 95       	ror	r22
    2c02:	b3 95       	inc	r27
    2c04:	d9 f7       	brne	.-10     	; 0x2bfc <__fixunssfsi+0x42>
    2c06:	3e f4       	brtc	.+14     	; 0x2c16 <__fixunssfsi+0x5c>
    2c08:	90 95       	com	r25
    2c0a:	80 95       	com	r24
    2c0c:	70 95       	com	r23
    2c0e:	61 95       	neg	r22
    2c10:	7f 4f       	sbci	r23, 0xFF	; 255
    2c12:	8f 4f       	sbci	r24, 0xFF	; 255
    2c14:	9f 4f       	sbci	r25, 0xFF	; 255
    2c16:	08 95       	ret

00002c18 <__floatunsisf>:
    2c18:	e8 94       	clt
    2c1a:	09 c0       	rjmp	.+18     	; 0x2c2e <__floatsisf+0x12>

00002c1c <__floatsisf>:
    2c1c:	97 fb       	bst	r25, 7
    2c1e:	3e f4       	brtc	.+14     	; 0x2c2e <__floatsisf+0x12>
    2c20:	90 95       	com	r25
    2c22:	80 95       	com	r24
    2c24:	70 95       	com	r23
    2c26:	61 95       	neg	r22
    2c28:	7f 4f       	sbci	r23, 0xFF	; 255
    2c2a:	8f 4f       	sbci	r24, 0xFF	; 255
    2c2c:	9f 4f       	sbci	r25, 0xFF	; 255
    2c2e:	99 23       	and	r25, r25
    2c30:	a9 f0       	breq	.+42     	; 0x2c5c <__floatsisf+0x40>
    2c32:	f9 2f       	mov	r31, r25
    2c34:	96 e9       	ldi	r25, 0x96	; 150
    2c36:	bb 27       	eor	r27, r27
    2c38:	93 95       	inc	r25
    2c3a:	f6 95       	lsr	r31
    2c3c:	87 95       	ror	r24
    2c3e:	77 95       	ror	r23
    2c40:	67 95       	ror	r22
    2c42:	b7 95       	ror	r27
    2c44:	f1 11       	cpse	r31, r1
    2c46:	f8 cf       	rjmp	.-16     	; 0x2c38 <__floatsisf+0x1c>
    2c48:	fa f4       	brpl	.+62     	; 0x2c88 <__floatsisf+0x6c>
    2c4a:	bb 0f       	add	r27, r27
    2c4c:	11 f4       	brne	.+4      	; 0x2c52 <__floatsisf+0x36>
    2c4e:	60 ff       	sbrs	r22, 0
    2c50:	1b c0       	rjmp	.+54     	; 0x2c88 <__floatsisf+0x6c>
    2c52:	6f 5f       	subi	r22, 0xFF	; 255
    2c54:	7f 4f       	sbci	r23, 0xFF	; 255
    2c56:	8f 4f       	sbci	r24, 0xFF	; 255
    2c58:	9f 4f       	sbci	r25, 0xFF	; 255
    2c5a:	16 c0       	rjmp	.+44     	; 0x2c88 <__floatsisf+0x6c>
    2c5c:	88 23       	and	r24, r24
    2c5e:	11 f0       	breq	.+4      	; 0x2c64 <__floatsisf+0x48>
    2c60:	96 e9       	ldi	r25, 0x96	; 150
    2c62:	11 c0       	rjmp	.+34     	; 0x2c86 <__floatsisf+0x6a>
    2c64:	77 23       	and	r23, r23
    2c66:	21 f0       	breq	.+8      	; 0x2c70 <__floatsisf+0x54>
    2c68:	9e e8       	ldi	r25, 0x8E	; 142
    2c6a:	87 2f       	mov	r24, r23
    2c6c:	76 2f       	mov	r23, r22
    2c6e:	05 c0       	rjmp	.+10     	; 0x2c7a <__floatsisf+0x5e>
    2c70:	66 23       	and	r22, r22
    2c72:	71 f0       	breq	.+28     	; 0x2c90 <__floatsisf+0x74>
    2c74:	96 e8       	ldi	r25, 0x86	; 134
    2c76:	86 2f       	mov	r24, r22
    2c78:	70 e0       	ldi	r23, 0x00	; 0
    2c7a:	60 e0       	ldi	r22, 0x00	; 0
    2c7c:	2a f0       	brmi	.+10     	; 0x2c88 <__floatsisf+0x6c>
    2c7e:	9a 95       	dec	r25
    2c80:	66 0f       	add	r22, r22
    2c82:	77 1f       	adc	r23, r23
    2c84:	88 1f       	adc	r24, r24
    2c86:	da f7       	brpl	.-10     	; 0x2c7e <__floatsisf+0x62>
    2c88:	88 0f       	add	r24, r24
    2c8a:	96 95       	lsr	r25
    2c8c:	87 95       	ror	r24
    2c8e:	97 f9       	bld	r25, 7
    2c90:	08 95       	ret

00002c92 <__fp_inf>:
    2c92:	97 f9       	bld	r25, 7
    2c94:	9f 67       	ori	r25, 0x7F	; 127
    2c96:	80 e8       	ldi	r24, 0x80	; 128
    2c98:	70 e0       	ldi	r23, 0x00	; 0
    2c9a:	60 e0       	ldi	r22, 0x00	; 0
    2c9c:	08 95       	ret

00002c9e <__fp_nan>:
    2c9e:	9f ef       	ldi	r25, 0xFF	; 255
    2ca0:	80 ec       	ldi	r24, 0xC0	; 192
    2ca2:	08 95       	ret

00002ca4 <__fp_pscA>:
    2ca4:	00 24       	eor	r0, r0
    2ca6:	0a 94       	dec	r0
    2ca8:	16 16       	cp	r1, r22
    2caa:	17 06       	cpc	r1, r23
    2cac:	18 06       	cpc	r1, r24
    2cae:	09 06       	cpc	r0, r25
    2cb0:	08 95       	ret

00002cb2 <__fp_pscB>:
    2cb2:	00 24       	eor	r0, r0
    2cb4:	0a 94       	dec	r0
    2cb6:	12 16       	cp	r1, r18
    2cb8:	13 06       	cpc	r1, r19
    2cba:	14 06       	cpc	r1, r20
    2cbc:	05 06       	cpc	r0, r21
    2cbe:	08 95       	ret

00002cc0 <__fp_round>:
    2cc0:	09 2e       	mov	r0, r25
    2cc2:	03 94       	inc	r0
    2cc4:	00 0c       	add	r0, r0
    2cc6:	11 f4       	brne	.+4      	; 0x2ccc <__fp_round+0xc>
    2cc8:	88 23       	and	r24, r24
    2cca:	52 f0       	brmi	.+20     	; 0x2ce0 <__fp_round+0x20>
    2ccc:	bb 0f       	add	r27, r27
    2cce:	40 f4       	brcc	.+16     	; 0x2ce0 <__fp_round+0x20>
    2cd0:	bf 2b       	or	r27, r31
    2cd2:	11 f4       	brne	.+4      	; 0x2cd8 <__fp_round+0x18>
    2cd4:	60 ff       	sbrs	r22, 0
    2cd6:	04 c0       	rjmp	.+8      	; 0x2ce0 <__fp_round+0x20>
    2cd8:	6f 5f       	subi	r22, 0xFF	; 255
    2cda:	7f 4f       	sbci	r23, 0xFF	; 255
    2cdc:	8f 4f       	sbci	r24, 0xFF	; 255
    2cde:	9f 4f       	sbci	r25, 0xFF	; 255
    2ce0:	08 95       	ret

00002ce2 <__fp_split3>:
    2ce2:	57 fd       	sbrc	r21, 7
    2ce4:	90 58       	subi	r25, 0x80	; 128
    2ce6:	44 0f       	add	r20, r20
    2ce8:	55 1f       	adc	r21, r21
    2cea:	59 f0       	breq	.+22     	; 0x2d02 <__fp_splitA+0x10>
    2cec:	5f 3f       	cpi	r21, 0xFF	; 255
    2cee:	71 f0       	breq	.+28     	; 0x2d0c <__fp_splitA+0x1a>
    2cf0:	47 95       	ror	r20

00002cf2 <__fp_splitA>:
    2cf2:	88 0f       	add	r24, r24
    2cf4:	97 fb       	bst	r25, 7
    2cf6:	99 1f       	adc	r25, r25
    2cf8:	61 f0       	breq	.+24     	; 0x2d12 <__fp_splitA+0x20>
    2cfa:	9f 3f       	cpi	r25, 0xFF	; 255
    2cfc:	79 f0       	breq	.+30     	; 0x2d1c <__fp_splitA+0x2a>
    2cfe:	87 95       	ror	r24
    2d00:	08 95       	ret
    2d02:	12 16       	cp	r1, r18
    2d04:	13 06       	cpc	r1, r19
    2d06:	14 06       	cpc	r1, r20
    2d08:	55 1f       	adc	r21, r21
    2d0a:	f2 cf       	rjmp	.-28     	; 0x2cf0 <__fp_split3+0xe>
    2d0c:	46 95       	lsr	r20
    2d0e:	f1 df       	rcall	.-30     	; 0x2cf2 <__fp_splitA>
    2d10:	08 c0       	rjmp	.+16     	; 0x2d22 <__fp_splitA+0x30>
    2d12:	16 16       	cp	r1, r22
    2d14:	17 06       	cpc	r1, r23
    2d16:	18 06       	cpc	r1, r24
    2d18:	99 1f       	adc	r25, r25
    2d1a:	f1 cf       	rjmp	.-30     	; 0x2cfe <__fp_splitA+0xc>
    2d1c:	86 95       	lsr	r24
    2d1e:	71 05       	cpc	r23, r1
    2d20:	61 05       	cpc	r22, r1
    2d22:	08 94       	sec
    2d24:	08 95       	ret

00002d26 <__fp_zero>:
    2d26:	e8 94       	clt

00002d28 <__fp_szero>:
    2d28:	bb 27       	eor	r27, r27
    2d2a:	66 27       	eor	r22, r22
    2d2c:	77 27       	eor	r23, r23
    2d2e:	cb 01       	movw	r24, r22
    2d30:	97 f9       	bld	r25, 7
    2d32:	08 95       	ret

00002d34 <__mulsf3>:
    2d34:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__mulsf3x>
    2d38:	0c 94 60 16 	jmp	0x2cc0	; 0x2cc0 <__fp_round>
    2d3c:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <__fp_pscA>
    2d40:	38 f0       	brcs	.+14     	; 0x2d50 <__mulsf3+0x1c>
    2d42:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <__fp_pscB>
    2d46:	20 f0       	brcs	.+8      	; 0x2d50 <__mulsf3+0x1c>
    2d48:	95 23       	and	r25, r21
    2d4a:	11 f0       	breq	.+4      	; 0x2d50 <__mulsf3+0x1c>
    2d4c:	0c 94 49 16 	jmp	0x2c92	; 0x2c92 <__fp_inf>
    2d50:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__fp_nan>
    2d54:	11 24       	eor	r1, r1
    2d56:	0c 94 94 16 	jmp	0x2d28	; 0x2d28 <__fp_szero>

00002d5a <__mulsf3x>:
    2d5a:	0e 94 71 16 	call	0x2ce2	; 0x2ce2 <__fp_split3>
    2d5e:	70 f3       	brcs	.-36     	; 0x2d3c <__mulsf3+0x8>

00002d60 <__mulsf3_pse>:
    2d60:	95 9f       	mul	r25, r21
    2d62:	c1 f3       	breq	.-16     	; 0x2d54 <__mulsf3+0x20>
    2d64:	95 0f       	add	r25, r21
    2d66:	50 e0       	ldi	r21, 0x00	; 0
    2d68:	55 1f       	adc	r21, r21
    2d6a:	62 9f       	mul	r22, r18
    2d6c:	f0 01       	movw	r30, r0
    2d6e:	72 9f       	mul	r23, r18
    2d70:	bb 27       	eor	r27, r27
    2d72:	f0 0d       	add	r31, r0
    2d74:	b1 1d       	adc	r27, r1
    2d76:	63 9f       	mul	r22, r19
    2d78:	aa 27       	eor	r26, r26
    2d7a:	f0 0d       	add	r31, r0
    2d7c:	b1 1d       	adc	r27, r1
    2d7e:	aa 1f       	adc	r26, r26
    2d80:	64 9f       	mul	r22, r20
    2d82:	66 27       	eor	r22, r22
    2d84:	b0 0d       	add	r27, r0
    2d86:	a1 1d       	adc	r26, r1
    2d88:	66 1f       	adc	r22, r22
    2d8a:	82 9f       	mul	r24, r18
    2d8c:	22 27       	eor	r18, r18
    2d8e:	b0 0d       	add	r27, r0
    2d90:	a1 1d       	adc	r26, r1
    2d92:	62 1f       	adc	r22, r18
    2d94:	73 9f       	mul	r23, r19
    2d96:	b0 0d       	add	r27, r0
    2d98:	a1 1d       	adc	r26, r1
    2d9a:	62 1f       	adc	r22, r18
    2d9c:	83 9f       	mul	r24, r19
    2d9e:	a0 0d       	add	r26, r0
    2da0:	61 1d       	adc	r22, r1
    2da2:	22 1f       	adc	r18, r18
    2da4:	74 9f       	mul	r23, r20
    2da6:	33 27       	eor	r19, r19
    2da8:	a0 0d       	add	r26, r0
    2daa:	61 1d       	adc	r22, r1
    2dac:	23 1f       	adc	r18, r19
    2dae:	84 9f       	mul	r24, r20
    2db0:	60 0d       	add	r22, r0
    2db2:	21 1d       	adc	r18, r1
    2db4:	82 2f       	mov	r24, r18
    2db6:	76 2f       	mov	r23, r22
    2db8:	6a 2f       	mov	r22, r26
    2dba:	11 24       	eor	r1, r1
    2dbc:	9f 57       	subi	r25, 0x7F	; 127
    2dbe:	50 40       	sbci	r21, 0x00	; 0
    2dc0:	9a f0       	brmi	.+38     	; 0x2de8 <__mulsf3_pse+0x88>
    2dc2:	f1 f0       	breq	.+60     	; 0x2e00 <__mulsf3_pse+0xa0>
    2dc4:	88 23       	and	r24, r24
    2dc6:	4a f0       	brmi	.+18     	; 0x2dda <__mulsf3_pse+0x7a>
    2dc8:	ee 0f       	add	r30, r30
    2dca:	ff 1f       	adc	r31, r31
    2dcc:	bb 1f       	adc	r27, r27
    2dce:	66 1f       	adc	r22, r22
    2dd0:	77 1f       	adc	r23, r23
    2dd2:	88 1f       	adc	r24, r24
    2dd4:	91 50       	subi	r25, 0x01	; 1
    2dd6:	50 40       	sbci	r21, 0x00	; 0
    2dd8:	a9 f7       	brne	.-22     	; 0x2dc4 <__mulsf3_pse+0x64>
    2dda:	9e 3f       	cpi	r25, 0xFE	; 254
    2ddc:	51 05       	cpc	r21, r1
    2dde:	80 f0       	brcs	.+32     	; 0x2e00 <__mulsf3_pse+0xa0>
    2de0:	0c 94 49 16 	jmp	0x2c92	; 0x2c92 <__fp_inf>
    2de4:	0c 94 94 16 	jmp	0x2d28	; 0x2d28 <__fp_szero>
    2de8:	5f 3f       	cpi	r21, 0xFF	; 255
    2dea:	e4 f3       	brlt	.-8      	; 0x2de4 <__mulsf3_pse+0x84>
    2dec:	98 3e       	cpi	r25, 0xE8	; 232
    2dee:	d4 f3       	brlt	.-12     	; 0x2de4 <__mulsf3_pse+0x84>
    2df0:	86 95       	lsr	r24
    2df2:	77 95       	ror	r23
    2df4:	67 95       	ror	r22
    2df6:	b7 95       	ror	r27
    2df8:	f7 95       	ror	r31
    2dfa:	e7 95       	ror	r30
    2dfc:	9f 5f       	subi	r25, 0xFF	; 255
    2dfe:	c1 f7       	brne	.-16     	; 0x2df0 <__mulsf3_pse+0x90>
    2e00:	fe 2b       	or	r31, r30
    2e02:	88 0f       	add	r24, r24
    2e04:	91 1d       	adc	r25, r1
    2e06:	96 95       	lsr	r25
    2e08:	87 95       	ror	r24
    2e0a:	97 f9       	bld	r25, 7
    2e0c:	08 95       	ret

00002e0e <sin>:
    2e0e:	9f 93       	push	r25
    2e10:	0e 94 23 17 	call	0x2e46	; 0x2e46 <__fp_rempio2>
    2e14:	0f 90       	pop	r0
    2e16:	07 fc       	sbrc	r0, 7
    2e18:	ee 5f       	subi	r30, 0xFE	; 254
    2e1a:	0c 94 4c 17 	jmp	0x2e98	; 0x2e98 <__fp_sinus>

00002e1e <square>:
    2e1e:	9b 01       	movw	r18, r22
    2e20:	ac 01       	movw	r20, r24
    2e22:	0c 94 9a 16 	jmp	0x2d34	; 0x2d34 <__mulsf3>

00002e26 <__fp_mpack>:
    2e26:	9f 3f       	cpi	r25, 0xFF	; 255
    2e28:	31 f0       	breq	.+12     	; 0x2e36 <__fp_mpack_finite+0xc>

00002e2a <__fp_mpack_finite>:
    2e2a:	91 50       	subi	r25, 0x01	; 1
    2e2c:	20 f4       	brcc	.+8      	; 0x2e36 <__fp_mpack_finite+0xc>
    2e2e:	87 95       	ror	r24
    2e30:	77 95       	ror	r23
    2e32:	67 95       	ror	r22
    2e34:	b7 95       	ror	r27
    2e36:	88 0f       	add	r24, r24
    2e38:	91 1d       	adc	r25, r1
    2e3a:	96 95       	lsr	r25
    2e3c:	87 95       	ror	r24
    2e3e:	97 f9       	bld	r25, 7
    2e40:	08 95       	ret
    2e42:	0c 94 4f 16 	jmp	0x2c9e	; 0x2c9e <__fp_nan>

00002e46 <__fp_rempio2>:
    2e46:	0e 94 79 16 	call	0x2cf2	; 0x2cf2 <__fp_splitA>
    2e4a:	d8 f3       	brcs	.-10     	; 0x2e42 <__fp_mpack_finite+0x18>
    2e4c:	e8 94       	clt
    2e4e:	e0 e0       	ldi	r30, 0x00	; 0
    2e50:	bb 27       	eor	r27, r27
    2e52:	9f 57       	subi	r25, 0x7F	; 127
    2e54:	f0 f0       	brcs	.+60     	; 0x2e92 <__fp_rempio2+0x4c>
    2e56:	2a ed       	ldi	r18, 0xDA	; 218
    2e58:	3f e0       	ldi	r19, 0x0F	; 15
    2e5a:	49 ec       	ldi	r20, 0xC9	; 201
    2e5c:	06 c0       	rjmp	.+12     	; 0x2e6a <__fp_rempio2+0x24>
    2e5e:	ee 0f       	add	r30, r30
    2e60:	bb 0f       	add	r27, r27
    2e62:	66 1f       	adc	r22, r22
    2e64:	77 1f       	adc	r23, r23
    2e66:	88 1f       	adc	r24, r24
    2e68:	28 f0       	brcs	.+10     	; 0x2e74 <__fp_rempio2+0x2e>
    2e6a:	b2 3a       	cpi	r27, 0xA2	; 162
    2e6c:	62 07       	cpc	r22, r18
    2e6e:	73 07       	cpc	r23, r19
    2e70:	84 07       	cpc	r24, r20
    2e72:	28 f0       	brcs	.+10     	; 0x2e7e <__fp_rempio2+0x38>
    2e74:	b2 5a       	subi	r27, 0xA2	; 162
    2e76:	62 0b       	sbc	r22, r18
    2e78:	73 0b       	sbc	r23, r19
    2e7a:	84 0b       	sbc	r24, r20
    2e7c:	e3 95       	inc	r30
    2e7e:	9a 95       	dec	r25
    2e80:	72 f7       	brpl	.-36     	; 0x2e5e <__fp_rempio2+0x18>
    2e82:	80 38       	cpi	r24, 0x80	; 128
    2e84:	30 f4       	brcc	.+12     	; 0x2e92 <__fp_rempio2+0x4c>
    2e86:	9a 95       	dec	r25
    2e88:	bb 0f       	add	r27, r27
    2e8a:	66 1f       	adc	r22, r22
    2e8c:	77 1f       	adc	r23, r23
    2e8e:	88 1f       	adc	r24, r24
    2e90:	d2 f7       	brpl	.-12     	; 0x2e86 <__fp_rempio2+0x40>
    2e92:	90 48       	sbci	r25, 0x80	; 128
    2e94:	0c 94 15 17 	jmp	0x2e2a	; 0x2e2a <__fp_mpack_finite>

00002e98 <__fp_sinus>:
    2e98:	ef 93       	push	r30
    2e9a:	e0 ff       	sbrs	r30, 0
    2e9c:	07 c0       	rjmp	.+14     	; 0x2eac <__fp_sinus+0x14>
    2e9e:	a2 ea       	ldi	r26, 0xA2	; 162
    2ea0:	2a ed       	ldi	r18, 0xDA	; 218
    2ea2:	3f e0       	ldi	r19, 0x0F	; 15
    2ea4:	49 ec       	ldi	r20, 0xC9	; 201
    2ea6:	5f eb       	ldi	r21, 0xBF	; 191
    2ea8:	0e 94 88 15 	call	0x2b10	; 0x2b10 <__addsf3x>
    2eac:	0e 94 60 16 	call	0x2cc0	; 0x2cc0 <__fp_round>
    2eb0:	0f 90       	pop	r0
    2eb2:	03 94       	inc	r0
    2eb4:	01 fc       	sbrc	r0, 1
    2eb6:	90 58       	subi	r25, 0x80	; 128
    2eb8:	e4 eb       	ldi	r30, 0xB4	; 180
    2eba:	f1 e0       	ldi	r31, 0x01	; 1
    2ebc:	0c 94 60 17 	jmp	0x2ec0	; 0x2ec0 <__fp_powsodd>

00002ec0 <__fp_powsodd>:
    2ec0:	9f 93       	push	r25
    2ec2:	8f 93       	push	r24
    2ec4:	7f 93       	push	r23
    2ec6:	6f 93       	push	r22
    2ec8:	ff 93       	push	r31
    2eca:	ef 93       	push	r30
    2ecc:	9b 01       	movw	r18, r22
    2ece:	ac 01       	movw	r20, r24
    2ed0:	0e 94 9a 16 	call	0x2d34	; 0x2d34 <__mulsf3>
    2ed4:	ef 91       	pop	r30
    2ed6:	ff 91       	pop	r31
    2ed8:	0e 94 74 17 	call	0x2ee8	; 0x2ee8 <__fp_powser>
    2edc:	2f 91       	pop	r18
    2ede:	3f 91       	pop	r19
    2ee0:	4f 91       	pop	r20
    2ee2:	5f 91       	pop	r21
    2ee4:	0c 94 9a 16 	jmp	0x2d34	; 0x2d34 <__mulsf3>

00002ee8 <__fp_powser>:
    2ee8:	df 93       	push	r29
    2eea:	cf 93       	push	r28
    2eec:	1f 93       	push	r17
    2eee:	0f 93       	push	r16
    2ef0:	ff 92       	push	r15
    2ef2:	ef 92       	push	r14
    2ef4:	df 92       	push	r13
    2ef6:	7b 01       	movw	r14, r22
    2ef8:	8c 01       	movw	r16, r24
    2efa:	68 94       	set
    2efc:	06 c0       	rjmp	.+12     	; 0x2f0a <__fp_powser+0x22>
    2efe:	da 2e       	mov	r13, r26
    2f00:	ef 01       	movw	r28, r30
    2f02:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__mulsf3x>
    2f06:	fe 01       	movw	r30, r28
    2f08:	e8 94       	clt
    2f0a:	a5 91       	lpm	r26, Z+
    2f0c:	25 91       	lpm	r18, Z+
    2f0e:	35 91       	lpm	r19, Z+
    2f10:	45 91       	lpm	r20, Z+
    2f12:	55 91       	lpm	r21, Z+
    2f14:	a6 f3       	brts	.-24     	; 0x2efe <__fp_powser+0x16>
    2f16:	ef 01       	movw	r28, r30
    2f18:	0e 94 88 15 	call	0x2b10	; 0x2b10 <__addsf3x>
    2f1c:	fe 01       	movw	r30, r28
    2f1e:	97 01       	movw	r18, r14
    2f20:	a8 01       	movw	r20, r16
    2f22:	da 94       	dec	r13
    2f24:	69 f7       	brne	.-38     	; 0x2f00 <__fp_powser+0x18>
    2f26:	df 90       	pop	r13
    2f28:	ef 90       	pop	r14
    2f2a:	ff 90       	pop	r15
    2f2c:	0f 91       	pop	r16
    2f2e:	1f 91       	pop	r17
    2f30:	cf 91       	pop	r28
    2f32:	df 91       	pop	r29
    2f34:	08 95       	ret

00002f36 <__udivmodhi4>:
    2f36:	aa 1b       	sub	r26, r26
    2f38:	bb 1b       	sub	r27, r27
    2f3a:	51 e1       	ldi	r21, 0x11	; 17
    2f3c:	07 c0       	rjmp	.+14     	; 0x2f4c <__udivmodhi4_ep>

00002f3e <__udivmodhi4_loop>:
    2f3e:	aa 1f       	adc	r26, r26
    2f40:	bb 1f       	adc	r27, r27
    2f42:	a6 17       	cp	r26, r22
    2f44:	b7 07       	cpc	r27, r23
    2f46:	10 f0       	brcs	.+4      	; 0x2f4c <__udivmodhi4_ep>
    2f48:	a6 1b       	sub	r26, r22
    2f4a:	b7 0b       	sbc	r27, r23

00002f4c <__udivmodhi4_ep>:
    2f4c:	88 1f       	adc	r24, r24
    2f4e:	99 1f       	adc	r25, r25
    2f50:	5a 95       	dec	r21
    2f52:	a9 f7       	brne	.-22     	; 0x2f3e <__udivmodhi4_loop>
    2f54:	80 95       	com	r24
    2f56:	90 95       	com	r25
    2f58:	bc 01       	movw	r22, r24
    2f5a:	cd 01       	movw	r24, r26
    2f5c:	08 95       	ret

00002f5e <__divmodhi4>:
    2f5e:	97 fb       	bst	r25, 7
    2f60:	07 2e       	mov	r0, r23
    2f62:	16 f4       	brtc	.+4      	; 0x2f68 <__divmodhi4+0xa>
    2f64:	00 94       	com	r0
    2f66:	07 d0       	rcall	.+14     	; 0x2f76 <__divmodhi4_neg1>
    2f68:	77 fd       	sbrc	r23, 7
    2f6a:	09 d0       	rcall	.+18     	; 0x2f7e <__divmodhi4_neg2>
    2f6c:	0e 94 9b 17 	call	0x2f36	; 0x2f36 <__udivmodhi4>
    2f70:	07 fc       	sbrc	r0, 7
    2f72:	05 d0       	rcall	.+10     	; 0x2f7e <__divmodhi4_neg2>
    2f74:	3e f4       	brtc	.+14     	; 0x2f84 <__divmodhi4_exit>

00002f76 <__divmodhi4_neg1>:
    2f76:	90 95       	com	r25
    2f78:	81 95       	neg	r24
    2f7a:	9f 4f       	sbci	r25, 0xFF	; 255
    2f7c:	08 95       	ret

00002f7e <__divmodhi4_neg2>:
    2f7e:	70 95       	com	r23
    2f80:	61 95       	neg	r22
    2f82:	7f 4f       	sbci	r23, 0xFF	; 255

00002f84 <__divmodhi4_exit>:
    2f84:	08 95       	ret

00002f86 <__udivmodsi4>:
    2f86:	a1 e2       	ldi	r26, 0x21	; 33
    2f88:	1a 2e       	mov	r1, r26
    2f8a:	aa 1b       	sub	r26, r26
    2f8c:	bb 1b       	sub	r27, r27
    2f8e:	fd 01       	movw	r30, r26
    2f90:	0d c0       	rjmp	.+26     	; 0x2fac <__udivmodsi4_ep>

00002f92 <__udivmodsi4_loop>:
    2f92:	aa 1f       	adc	r26, r26
    2f94:	bb 1f       	adc	r27, r27
    2f96:	ee 1f       	adc	r30, r30
    2f98:	ff 1f       	adc	r31, r31
    2f9a:	a2 17       	cp	r26, r18
    2f9c:	b3 07       	cpc	r27, r19
    2f9e:	e4 07       	cpc	r30, r20
    2fa0:	f5 07       	cpc	r31, r21
    2fa2:	20 f0       	brcs	.+8      	; 0x2fac <__udivmodsi4_ep>
    2fa4:	a2 1b       	sub	r26, r18
    2fa6:	b3 0b       	sbc	r27, r19
    2fa8:	e4 0b       	sbc	r30, r20
    2faa:	f5 0b       	sbc	r31, r21

00002fac <__udivmodsi4_ep>:
    2fac:	66 1f       	adc	r22, r22
    2fae:	77 1f       	adc	r23, r23
    2fb0:	88 1f       	adc	r24, r24
    2fb2:	99 1f       	adc	r25, r25
    2fb4:	1a 94       	dec	r1
    2fb6:	69 f7       	brne	.-38     	; 0x2f92 <__udivmodsi4_loop>
    2fb8:	60 95       	com	r22
    2fba:	70 95       	com	r23
    2fbc:	80 95       	com	r24
    2fbe:	90 95       	com	r25
    2fc0:	9b 01       	movw	r18, r22
    2fc2:	ac 01       	movw	r20, r24
    2fc4:	bd 01       	movw	r22, r26
    2fc6:	cf 01       	movw	r24, r30
    2fc8:	08 95       	ret

00002fca <__divmodsi4>:
    2fca:	05 2e       	mov	r0, r21
    2fcc:	97 fb       	bst	r25, 7
    2fce:	1e f4       	brtc	.+6      	; 0x2fd6 <__divmodsi4+0xc>
    2fd0:	00 94       	com	r0
    2fd2:	0e 94 fc 17 	call	0x2ff8	; 0x2ff8 <__negsi2>
    2fd6:	57 fd       	sbrc	r21, 7
    2fd8:	07 d0       	rcall	.+14     	; 0x2fe8 <__divmodsi4_neg2>
    2fda:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <__udivmodsi4>
    2fde:	07 fc       	sbrc	r0, 7
    2fe0:	03 d0       	rcall	.+6      	; 0x2fe8 <__divmodsi4_neg2>
    2fe2:	4e f4       	brtc	.+18     	; 0x2ff6 <__divmodsi4_exit>
    2fe4:	0c 94 fc 17 	jmp	0x2ff8	; 0x2ff8 <__negsi2>

00002fe8 <__divmodsi4_neg2>:
    2fe8:	50 95       	com	r21
    2fea:	40 95       	com	r20
    2fec:	30 95       	com	r19
    2fee:	21 95       	neg	r18
    2ff0:	3f 4f       	sbci	r19, 0xFF	; 255
    2ff2:	4f 4f       	sbci	r20, 0xFF	; 255
    2ff4:	5f 4f       	sbci	r21, 0xFF	; 255

00002ff6 <__divmodsi4_exit>:
    2ff6:	08 95       	ret

00002ff8 <__negsi2>:
    2ff8:	90 95       	com	r25
    2ffa:	80 95       	com	r24
    2ffc:	70 95       	com	r23
    2ffe:	61 95       	neg	r22
    3000:	7f 4f       	sbci	r23, 0xFF	; 255
    3002:	8f 4f       	sbci	r24, 0xFF	; 255
    3004:	9f 4f       	sbci	r25, 0xFF	; 255
    3006:	08 95       	ret

00003008 <__tablejump2__>:
    3008:	ee 0f       	add	r30, r30
    300a:	ff 1f       	adc	r31, r31
    300c:	05 90       	lpm	r0, Z+
    300e:	f4 91       	lpm	r31, Z
    3010:	e0 2d       	mov	r30, r0
    3012:	09 94       	ijmp

00003014 <__umulhisi3>:
    3014:	a2 9f       	mul	r26, r18
    3016:	b0 01       	movw	r22, r0
    3018:	b3 9f       	mul	r27, r19
    301a:	c0 01       	movw	r24, r0
    301c:	a3 9f       	mul	r26, r19
    301e:	70 0d       	add	r23, r0
    3020:	81 1d       	adc	r24, r1
    3022:	11 24       	eor	r1, r1
    3024:	91 1d       	adc	r25, r1
    3026:	b2 9f       	mul	r27, r18
    3028:	70 0d       	add	r23, r0
    302a:	81 1d       	adc	r24, r1
    302c:	11 24       	eor	r1, r1
    302e:	91 1d       	adc	r25, r1
    3030:	08 95       	ret

00003032 <__usmulhisi3>:
    3032:	0e 94 0a 18 	call	0x3014	; 0x3014 <__umulhisi3>

00003036 <__usmulhisi3_tail>:
    3036:	b7 ff       	sbrs	r27, 7
    3038:	08 95       	ret
    303a:	82 1b       	sub	r24, r18
    303c:	93 0b       	sbc	r25, r19
    303e:	08 95       	ret

00003040 <__muluhisi3>:
    3040:	0e 94 0a 18 	call	0x3014	; 0x3014 <__umulhisi3>
    3044:	a5 9f       	mul	r26, r21
    3046:	90 0d       	add	r25, r0
    3048:	b4 9f       	mul	r27, r20
    304a:	90 0d       	add	r25, r0
    304c:	a4 9f       	mul	r26, r20
    304e:	80 0d       	add	r24, r0
    3050:	91 1d       	adc	r25, r1
    3052:	11 24       	eor	r1, r1
    3054:	08 95       	ret

00003056 <__mulshisi3>:
    3056:	b7 ff       	sbrs	r27, 7
    3058:	0c 94 20 18 	jmp	0x3040	; 0x3040 <__muluhisi3>

0000305c <__mulohisi3>:
    305c:	0e 94 20 18 	call	0x3040	; 0x3040 <__muluhisi3>
    3060:	82 1b       	sub	r24, r18
    3062:	93 0b       	sbc	r25, r19
    3064:	08 95       	ret

00003066 <toupper>:
    3066:	91 11       	cpse	r25, r1
    3068:	08 95       	ret
    306a:	81 56       	subi	r24, 0x61	; 97
    306c:	8a 51       	subi	r24, 0x1A	; 26
    306e:	08 f4       	brcc	.+2      	; 0x3072 <toupper+0xc>
    3070:	80 52       	subi	r24, 0x20	; 32
    3072:	85 58       	subi	r24, 0x85	; 133
    3074:	08 95       	ret

00003076 <strncpy>:
    3076:	fb 01       	movw	r30, r22
    3078:	dc 01       	movw	r26, r24
    307a:	41 50       	subi	r20, 0x01	; 1
    307c:	50 40       	sbci	r21, 0x00	; 0
    307e:	48 f0       	brcs	.+18     	; 0x3092 <strncpy+0x1c>
    3080:	01 90       	ld	r0, Z+
    3082:	0d 92       	st	X+, r0
    3084:	00 20       	and	r0, r0
    3086:	c9 f7       	brne	.-14     	; 0x307a <strncpy+0x4>
    3088:	01 c0       	rjmp	.+2      	; 0x308c <strncpy+0x16>
    308a:	1d 92       	st	X+, r1
    308c:	41 50       	subi	r20, 0x01	; 1
    308e:	50 40       	sbci	r21, 0x00	; 0
    3090:	e0 f7       	brcc	.-8      	; 0x308a <strncpy+0x14>
    3092:	08 95       	ret

00003094 <sprintf>:
    3094:	ae e0       	ldi	r26, 0x0E	; 14
    3096:	b0 e0       	ldi	r27, 0x00	; 0
    3098:	e0 e5       	ldi	r30, 0x50	; 80
    309a:	f8 e1       	ldi	r31, 0x18	; 24
    309c:	0c 94 26 1b 	jmp	0x364c	; 0x364c <__prologue_saves__+0x1c>
    30a0:	0d 89       	ldd	r16, Y+21	; 0x15
    30a2:	1e 89       	ldd	r17, Y+22	; 0x16
    30a4:	86 e0       	ldi	r24, 0x06	; 6
    30a6:	8c 83       	std	Y+4, r24	; 0x04
    30a8:	1a 83       	std	Y+2, r17	; 0x02
    30aa:	09 83       	std	Y+1, r16	; 0x01
    30ac:	8f ef       	ldi	r24, 0xFF	; 255
    30ae:	9f e7       	ldi	r25, 0x7F	; 127
    30b0:	9e 83       	std	Y+6, r25	; 0x06
    30b2:	8d 83       	std	Y+5, r24	; 0x05
    30b4:	ae 01       	movw	r20, r28
    30b6:	47 5e       	subi	r20, 0xE7	; 231
    30b8:	5f 4f       	sbci	r21, 0xFF	; 255
    30ba:	6f 89       	ldd	r22, Y+23	; 0x17
    30bc:	78 8d       	ldd	r23, Y+24	; 0x18
    30be:	ce 01       	movw	r24, r28
    30c0:	01 96       	adiw	r24, 0x01	; 1
    30c2:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <vfprintf>
    30c6:	ef 81       	ldd	r30, Y+7	; 0x07
    30c8:	f8 85       	ldd	r31, Y+8	; 0x08
    30ca:	e0 0f       	add	r30, r16
    30cc:	f1 1f       	adc	r31, r17
    30ce:	10 82       	st	Z, r1
    30d0:	2e 96       	adiw	r28, 0x0e	; 14
    30d2:	e4 e0       	ldi	r30, 0x04	; 4
    30d4:	0c 94 42 1b 	jmp	0x3684	; 0x3684 <__epilogue_restores__+0x1c>

000030d8 <vfprintf>:
    30d8:	ab e0       	ldi	r26, 0x0B	; 11
    30da:	b0 e0       	ldi	r27, 0x00	; 0
    30dc:	e2 e7       	ldi	r30, 0x72	; 114
    30de:	f8 e1       	ldi	r31, 0x18	; 24
    30e0:	0c 94 18 1b 	jmp	0x3630	; 0x3630 <__prologue_saves__>
    30e4:	6c 01       	movw	r12, r24
    30e6:	7b 01       	movw	r14, r22
    30e8:	8a 01       	movw	r16, r20
    30ea:	fc 01       	movw	r30, r24
    30ec:	17 82       	std	Z+7, r1	; 0x07
    30ee:	16 82       	std	Z+6, r1	; 0x06
    30f0:	83 81       	ldd	r24, Z+3	; 0x03
    30f2:	81 ff       	sbrs	r24, 1
    30f4:	cc c1       	rjmp	.+920    	; 0x348e <vfprintf+0x3b6>
    30f6:	ce 01       	movw	r24, r28
    30f8:	01 96       	adiw	r24, 0x01	; 1
    30fa:	3c 01       	movw	r6, r24
    30fc:	f6 01       	movw	r30, r12
    30fe:	93 81       	ldd	r25, Z+3	; 0x03
    3100:	f7 01       	movw	r30, r14
    3102:	93 fd       	sbrc	r25, 3
    3104:	85 91       	lpm	r24, Z+
    3106:	93 ff       	sbrs	r25, 3
    3108:	81 91       	ld	r24, Z+
    310a:	7f 01       	movw	r14, r30
    310c:	88 23       	and	r24, r24
    310e:	09 f4       	brne	.+2      	; 0x3112 <vfprintf+0x3a>
    3110:	ba c1       	rjmp	.+884    	; 0x3486 <vfprintf+0x3ae>
    3112:	85 32       	cpi	r24, 0x25	; 37
    3114:	39 f4       	brne	.+14     	; 0x3124 <vfprintf+0x4c>
    3116:	93 fd       	sbrc	r25, 3
    3118:	85 91       	lpm	r24, Z+
    311a:	93 ff       	sbrs	r25, 3
    311c:	81 91       	ld	r24, Z+
    311e:	7f 01       	movw	r14, r30
    3120:	85 32       	cpi	r24, 0x25	; 37
    3122:	29 f4       	brne	.+10     	; 0x312e <vfprintf+0x56>
    3124:	b6 01       	movw	r22, r12
    3126:	90 e0       	ldi	r25, 0x00	; 0
    3128:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    312c:	e7 cf       	rjmp	.-50     	; 0x30fc <vfprintf+0x24>
    312e:	91 2c       	mov	r9, r1
    3130:	21 2c       	mov	r2, r1
    3132:	31 2c       	mov	r3, r1
    3134:	ff e1       	ldi	r31, 0x1F	; 31
    3136:	f3 15       	cp	r31, r3
    3138:	d8 f0       	brcs	.+54     	; 0x3170 <vfprintf+0x98>
    313a:	8b 32       	cpi	r24, 0x2B	; 43
    313c:	79 f0       	breq	.+30     	; 0x315c <vfprintf+0x84>
    313e:	38 f4       	brcc	.+14     	; 0x314e <vfprintf+0x76>
    3140:	80 32       	cpi	r24, 0x20	; 32
    3142:	79 f0       	breq	.+30     	; 0x3162 <vfprintf+0x8a>
    3144:	83 32       	cpi	r24, 0x23	; 35
    3146:	a1 f4       	brne	.+40     	; 0x3170 <vfprintf+0x98>
    3148:	23 2d       	mov	r18, r3
    314a:	20 61       	ori	r18, 0x10	; 16
    314c:	1d c0       	rjmp	.+58     	; 0x3188 <vfprintf+0xb0>
    314e:	8d 32       	cpi	r24, 0x2D	; 45
    3150:	61 f0       	breq	.+24     	; 0x316a <vfprintf+0x92>
    3152:	80 33       	cpi	r24, 0x30	; 48
    3154:	69 f4       	brne	.+26     	; 0x3170 <vfprintf+0x98>
    3156:	23 2d       	mov	r18, r3
    3158:	21 60       	ori	r18, 0x01	; 1
    315a:	16 c0       	rjmp	.+44     	; 0x3188 <vfprintf+0xb0>
    315c:	83 2d       	mov	r24, r3
    315e:	82 60       	ori	r24, 0x02	; 2
    3160:	38 2e       	mov	r3, r24
    3162:	e3 2d       	mov	r30, r3
    3164:	e4 60       	ori	r30, 0x04	; 4
    3166:	3e 2e       	mov	r3, r30
    3168:	2a c0       	rjmp	.+84     	; 0x31be <vfprintf+0xe6>
    316a:	f3 2d       	mov	r31, r3
    316c:	f8 60       	ori	r31, 0x08	; 8
    316e:	1d c0       	rjmp	.+58     	; 0x31aa <vfprintf+0xd2>
    3170:	37 fc       	sbrc	r3, 7
    3172:	2d c0       	rjmp	.+90     	; 0x31ce <vfprintf+0xf6>
    3174:	20 ed       	ldi	r18, 0xD0	; 208
    3176:	28 0f       	add	r18, r24
    3178:	2a 30       	cpi	r18, 0x0A	; 10
    317a:	40 f0       	brcs	.+16     	; 0x318c <vfprintf+0xb4>
    317c:	8e 32       	cpi	r24, 0x2E	; 46
    317e:	b9 f4       	brne	.+46     	; 0x31ae <vfprintf+0xd6>
    3180:	36 fc       	sbrc	r3, 6
    3182:	81 c1       	rjmp	.+770    	; 0x3486 <vfprintf+0x3ae>
    3184:	23 2d       	mov	r18, r3
    3186:	20 64       	ori	r18, 0x40	; 64
    3188:	32 2e       	mov	r3, r18
    318a:	19 c0       	rjmp	.+50     	; 0x31be <vfprintf+0xe6>
    318c:	36 fe       	sbrs	r3, 6
    318e:	06 c0       	rjmp	.+12     	; 0x319c <vfprintf+0xc4>
    3190:	8a e0       	ldi	r24, 0x0A	; 10
    3192:	98 9e       	mul	r9, r24
    3194:	20 0d       	add	r18, r0
    3196:	11 24       	eor	r1, r1
    3198:	92 2e       	mov	r9, r18
    319a:	11 c0       	rjmp	.+34     	; 0x31be <vfprintf+0xe6>
    319c:	ea e0       	ldi	r30, 0x0A	; 10
    319e:	2e 9e       	mul	r2, r30
    31a0:	20 0d       	add	r18, r0
    31a2:	11 24       	eor	r1, r1
    31a4:	22 2e       	mov	r2, r18
    31a6:	f3 2d       	mov	r31, r3
    31a8:	f0 62       	ori	r31, 0x20	; 32
    31aa:	3f 2e       	mov	r3, r31
    31ac:	08 c0       	rjmp	.+16     	; 0x31be <vfprintf+0xe6>
    31ae:	8c 36       	cpi	r24, 0x6C	; 108
    31b0:	21 f4       	brne	.+8      	; 0x31ba <vfprintf+0xe2>
    31b2:	83 2d       	mov	r24, r3
    31b4:	80 68       	ori	r24, 0x80	; 128
    31b6:	38 2e       	mov	r3, r24
    31b8:	02 c0       	rjmp	.+4      	; 0x31be <vfprintf+0xe6>
    31ba:	88 36       	cpi	r24, 0x68	; 104
    31bc:	41 f4       	brne	.+16     	; 0x31ce <vfprintf+0xf6>
    31be:	f7 01       	movw	r30, r14
    31c0:	93 fd       	sbrc	r25, 3
    31c2:	85 91       	lpm	r24, Z+
    31c4:	93 ff       	sbrs	r25, 3
    31c6:	81 91       	ld	r24, Z+
    31c8:	7f 01       	movw	r14, r30
    31ca:	81 11       	cpse	r24, r1
    31cc:	b3 cf       	rjmp	.-154    	; 0x3134 <vfprintf+0x5c>
    31ce:	98 2f       	mov	r25, r24
    31d0:	9f 7d       	andi	r25, 0xDF	; 223
    31d2:	95 54       	subi	r25, 0x45	; 69
    31d4:	93 30       	cpi	r25, 0x03	; 3
    31d6:	28 f4       	brcc	.+10     	; 0x31e2 <vfprintf+0x10a>
    31d8:	0c 5f       	subi	r16, 0xFC	; 252
    31da:	1f 4f       	sbci	r17, 0xFF	; 255
    31dc:	9f e3       	ldi	r25, 0x3F	; 63
    31de:	99 83       	std	Y+1, r25	; 0x01
    31e0:	0d c0       	rjmp	.+26     	; 0x31fc <vfprintf+0x124>
    31e2:	83 36       	cpi	r24, 0x63	; 99
    31e4:	31 f0       	breq	.+12     	; 0x31f2 <vfprintf+0x11a>
    31e6:	83 37       	cpi	r24, 0x73	; 115
    31e8:	71 f0       	breq	.+28     	; 0x3206 <vfprintf+0x12e>
    31ea:	83 35       	cpi	r24, 0x53	; 83
    31ec:	09 f0       	breq	.+2      	; 0x31f0 <vfprintf+0x118>
    31ee:	59 c0       	rjmp	.+178    	; 0x32a2 <vfprintf+0x1ca>
    31f0:	21 c0       	rjmp	.+66     	; 0x3234 <vfprintf+0x15c>
    31f2:	f8 01       	movw	r30, r16
    31f4:	80 81       	ld	r24, Z
    31f6:	89 83       	std	Y+1, r24	; 0x01
    31f8:	0e 5f       	subi	r16, 0xFE	; 254
    31fa:	1f 4f       	sbci	r17, 0xFF	; 255
    31fc:	88 24       	eor	r8, r8
    31fe:	83 94       	inc	r8
    3200:	91 2c       	mov	r9, r1
    3202:	53 01       	movw	r10, r6
    3204:	13 c0       	rjmp	.+38     	; 0x322c <vfprintf+0x154>
    3206:	28 01       	movw	r4, r16
    3208:	f2 e0       	ldi	r31, 0x02	; 2
    320a:	4f 0e       	add	r4, r31
    320c:	51 1c       	adc	r5, r1
    320e:	f8 01       	movw	r30, r16
    3210:	a0 80       	ld	r10, Z
    3212:	b1 80       	ldd	r11, Z+1	; 0x01
    3214:	36 fe       	sbrs	r3, 6
    3216:	03 c0       	rjmp	.+6      	; 0x321e <vfprintf+0x146>
    3218:	69 2d       	mov	r22, r9
    321a:	70 e0       	ldi	r23, 0x00	; 0
    321c:	02 c0       	rjmp	.+4      	; 0x3222 <vfprintf+0x14a>
    321e:	6f ef       	ldi	r22, 0xFF	; 255
    3220:	7f ef       	ldi	r23, 0xFF	; 255
    3222:	c5 01       	movw	r24, r10
    3224:	0e 94 58 1a 	call	0x34b0	; 0x34b0 <strnlen>
    3228:	4c 01       	movw	r8, r24
    322a:	82 01       	movw	r16, r4
    322c:	f3 2d       	mov	r31, r3
    322e:	ff 77       	andi	r31, 0x7F	; 127
    3230:	3f 2e       	mov	r3, r31
    3232:	16 c0       	rjmp	.+44     	; 0x3260 <vfprintf+0x188>
    3234:	28 01       	movw	r4, r16
    3236:	22 e0       	ldi	r18, 0x02	; 2
    3238:	42 0e       	add	r4, r18
    323a:	51 1c       	adc	r5, r1
    323c:	f8 01       	movw	r30, r16
    323e:	a0 80       	ld	r10, Z
    3240:	b1 80       	ldd	r11, Z+1	; 0x01
    3242:	36 fe       	sbrs	r3, 6
    3244:	03 c0       	rjmp	.+6      	; 0x324c <vfprintf+0x174>
    3246:	69 2d       	mov	r22, r9
    3248:	70 e0       	ldi	r23, 0x00	; 0
    324a:	02 c0       	rjmp	.+4      	; 0x3250 <vfprintf+0x178>
    324c:	6f ef       	ldi	r22, 0xFF	; 255
    324e:	7f ef       	ldi	r23, 0xFF	; 255
    3250:	c5 01       	movw	r24, r10
    3252:	0e 94 4d 1a 	call	0x349a	; 0x349a <strnlen_P>
    3256:	4c 01       	movw	r8, r24
    3258:	f3 2d       	mov	r31, r3
    325a:	f0 68       	ori	r31, 0x80	; 128
    325c:	3f 2e       	mov	r3, r31
    325e:	82 01       	movw	r16, r4
    3260:	33 fc       	sbrc	r3, 3
    3262:	1b c0       	rjmp	.+54     	; 0x329a <vfprintf+0x1c2>
    3264:	82 2d       	mov	r24, r2
    3266:	90 e0       	ldi	r25, 0x00	; 0
    3268:	88 16       	cp	r8, r24
    326a:	99 06       	cpc	r9, r25
    326c:	b0 f4       	brcc	.+44     	; 0x329a <vfprintf+0x1c2>
    326e:	b6 01       	movw	r22, r12
    3270:	80 e2       	ldi	r24, 0x20	; 32
    3272:	90 e0       	ldi	r25, 0x00	; 0
    3274:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    3278:	2a 94       	dec	r2
    327a:	f4 cf       	rjmp	.-24     	; 0x3264 <vfprintf+0x18c>
    327c:	f5 01       	movw	r30, r10
    327e:	37 fc       	sbrc	r3, 7
    3280:	85 91       	lpm	r24, Z+
    3282:	37 fe       	sbrs	r3, 7
    3284:	81 91       	ld	r24, Z+
    3286:	5f 01       	movw	r10, r30
    3288:	b6 01       	movw	r22, r12
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    3290:	21 10       	cpse	r2, r1
    3292:	2a 94       	dec	r2
    3294:	21 e0       	ldi	r18, 0x01	; 1
    3296:	82 1a       	sub	r8, r18
    3298:	91 08       	sbc	r9, r1
    329a:	81 14       	cp	r8, r1
    329c:	91 04       	cpc	r9, r1
    329e:	71 f7       	brne	.-36     	; 0x327c <vfprintf+0x1a4>
    32a0:	e8 c0       	rjmp	.+464    	; 0x3472 <vfprintf+0x39a>
    32a2:	84 36       	cpi	r24, 0x64	; 100
    32a4:	11 f0       	breq	.+4      	; 0x32aa <vfprintf+0x1d2>
    32a6:	89 36       	cpi	r24, 0x69	; 105
    32a8:	41 f5       	brne	.+80     	; 0x32fa <vfprintf+0x222>
    32aa:	f8 01       	movw	r30, r16
    32ac:	37 fe       	sbrs	r3, 7
    32ae:	07 c0       	rjmp	.+14     	; 0x32be <vfprintf+0x1e6>
    32b0:	60 81       	ld	r22, Z
    32b2:	71 81       	ldd	r23, Z+1	; 0x01
    32b4:	82 81       	ldd	r24, Z+2	; 0x02
    32b6:	93 81       	ldd	r25, Z+3	; 0x03
    32b8:	0c 5f       	subi	r16, 0xFC	; 252
    32ba:	1f 4f       	sbci	r17, 0xFF	; 255
    32bc:	08 c0       	rjmp	.+16     	; 0x32ce <vfprintf+0x1f6>
    32be:	60 81       	ld	r22, Z
    32c0:	71 81       	ldd	r23, Z+1	; 0x01
    32c2:	07 2e       	mov	r0, r23
    32c4:	00 0c       	add	r0, r0
    32c6:	88 0b       	sbc	r24, r24
    32c8:	99 0b       	sbc	r25, r25
    32ca:	0e 5f       	subi	r16, 0xFE	; 254
    32cc:	1f 4f       	sbci	r17, 0xFF	; 255
    32ce:	f3 2d       	mov	r31, r3
    32d0:	ff 76       	andi	r31, 0x6F	; 111
    32d2:	3f 2e       	mov	r3, r31
    32d4:	97 ff       	sbrs	r25, 7
    32d6:	09 c0       	rjmp	.+18     	; 0x32ea <vfprintf+0x212>
    32d8:	90 95       	com	r25
    32da:	80 95       	com	r24
    32dc:	70 95       	com	r23
    32de:	61 95       	neg	r22
    32e0:	7f 4f       	sbci	r23, 0xFF	; 255
    32e2:	8f 4f       	sbci	r24, 0xFF	; 255
    32e4:	9f 4f       	sbci	r25, 0xFF	; 255
    32e6:	f0 68       	ori	r31, 0x80	; 128
    32e8:	3f 2e       	mov	r3, r31
    32ea:	2a e0       	ldi	r18, 0x0A	; 10
    32ec:	30 e0       	ldi	r19, 0x00	; 0
    32ee:	a3 01       	movw	r20, r6
    32f0:	0e 94 9f 1a 	call	0x353e	; 0x353e <__ultoa_invert>
    32f4:	88 2e       	mov	r8, r24
    32f6:	86 18       	sub	r8, r6
    32f8:	45 c0       	rjmp	.+138    	; 0x3384 <vfprintf+0x2ac>
    32fa:	85 37       	cpi	r24, 0x75	; 117
    32fc:	31 f4       	brne	.+12     	; 0x330a <vfprintf+0x232>
    32fe:	23 2d       	mov	r18, r3
    3300:	2f 7e       	andi	r18, 0xEF	; 239
    3302:	b2 2e       	mov	r11, r18
    3304:	2a e0       	ldi	r18, 0x0A	; 10
    3306:	30 e0       	ldi	r19, 0x00	; 0
    3308:	25 c0       	rjmp	.+74     	; 0x3354 <vfprintf+0x27c>
    330a:	93 2d       	mov	r25, r3
    330c:	99 7f       	andi	r25, 0xF9	; 249
    330e:	b9 2e       	mov	r11, r25
    3310:	8f 36       	cpi	r24, 0x6F	; 111
    3312:	c1 f0       	breq	.+48     	; 0x3344 <vfprintf+0x26c>
    3314:	18 f4       	brcc	.+6      	; 0x331c <vfprintf+0x244>
    3316:	88 35       	cpi	r24, 0x58	; 88
    3318:	79 f0       	breq	.+30     	; 0x3338 <vfprintf+0x260>
    331a:	b5 c0       	rjmp	.+362    	; 0x3486 <vfprintf+0x3ae>
    331c:	80 37       	cpi	r24, 0x70	; 112
    331e:	19 f0       	breq	.+6      	; 0x3326 <vfprintf+0x24e>
    3320:	88 37       	cpi	r24, 0x78	; 120
    3322:	21 f0       	breq	.+8      	; 0x332c <vfprintf+0x254>
    3324:	b0 c0       	rjmp	.+352    	; 0x3486 <vfprintf+0x3ae>
    3326:	e9 2f       	mov	r30, r25
    3328:	e0 61       	ori	r30, 0x10	; 16
    332a:	be 2e       	mov	r11, r30
    332c:	b4 fe       	sbrs	r11, 4
    332e:	0d c0       	rjmp	.+26     	; 0x334a <vfprintf+0x272>
    3330:	fb 2d       	mov	r31, r11
    3332:	f4 60       	ori	r31, 0x04	; 4
    3334:	bf 2e       	mov	r11, r31
    3336:	09 c0       	rjmp	.+18     	; 0x334a <vfprintf+0x272>
    3338:	34 fe       	sbrs	r3, 4
    333a:	0a c0       	rjmp	.+20     	; 0x3350 <vfprintf+0x278>
    333c:	29 2f       	mov	r18, r25
    333e:	26 60       	ori	r18, 0x06	; 6
    3340:	b2 2e       	mov	r11, r18
    3342:	06 c0       	rjmp	.+12     	; 0x3350 <vfprintf+0x278>
    3344:	28 e0       	ldi	r18, 0x08	; 8
    3346:	30 e0       	ldi	r19, 0x00	; 0
    3348:	05 c0       	rjmp	.+10     	; 0x3354 <vfprintf+0x27c>
    334a:	20 e1       	ldi	r18, 0x10	; 16
    334c:	30 e0       	ldi	r19, 0x00	; 0
    334e:	02 c0       	rjmp	.+4      	; 0x3354 <vfprintf+0x27c>
    3350:	20 e1       	ldi	r18, 0x10	; 16
    3352:	32 e0       	ldi	r19, 0x02	; 2
    3354:	f8 01       	movw	r30, r16
    3356:	b7 fe       	sbrs	r11, 7
    3358:	07 c0       	rjmp	.+14     	; 0x3368 <vfprintf+0x290>
    335a:	60 81       	ld	r22, Z
    335c:	71 81       	ldd	r23, Z+1	; 0x01
    335e:	82 81       	ldd	r24, Z+2	; 0x02
    3360:	93 81       	ldd	r25, Z+3	; 0x03
    3362:	0c 5f       	subi	r16, 0xFC	; 252
    3364:	1f 4f       	sbci	r17, 0xFF	; 255
    3366:	06 c0       	rjmp	.+12     	; 0x3374 <vfprintf+0x29c>
    3368:	60 81       	ld	r22, Z
    336a:	71 81       	ldd	r23, Z+1	; 0x01
    336c:	80 e0       	ldi	r24, 0x00	; 0
    336e:	90 e0       	ldi	r25, 0x00	; 0
    3370:	0e 5f       	subi	r16, 0xFE	; 254
    3372:	1f 4f       	sbci	r17, 0xFF	; 255
    3374:	a3 01       	movw	r20, r6
    3376:	0e 94 9f 1a 	call	0x353e	; 0x353e <__ultoa_invert>
    337a:	88 2e       	mov	r8, r24
    337c:	86 18       	sub	r8, r6
    337e:	fb 2d       	mov	r31, r11
    3380:	ff 77       	andi	r31, 0x7F	; 127
    3382:	3f 2e       	mov	r3, r31
    3384:	36 fe       	sbrs	r3, 6
    3386:	0d c0       	rjmp	.+26     	; 0x33a2 <vfprintf+0x2ca>
    3388:	23 2d       	mov	r18, r3
    338a:	2e 7f       	andi	r18, 0xFE	; 254
    338c:	a2 2e       	mov	r10, r18
    338e:	89 14       	cp	r8, r9
    3390:	58 f4       	brcc	.+22     	; 0x33a8 <vfprintf+0x2d0>
    3392:	34 fe       	sbrs	r3, 4
    3394:	0b c0       	rjmp	.+22     	; 0x33ac <vfprintf+0x2d4>
    3396:	32 fc       	sbrc	r3, 2
    3398:	09 c0       	rjmp	.+18     	; 0x33ac <vfprintf+0x2d4>
    339a:	83 2d       	mov	r24, r3
    339c:	8e 7e       	andi	r24, 0xEE	; 238
    339e:	a8 2e       	mov	r10, r24
    33a0:	05 c0       	rjmp	.+10     	; 0x33ac <vfprintf+0x2d4>
    33a2:	b8 2c       	mov	r11, r8
    33a4:	a3 2c       	mov	r10, r3
    33a6:	03 c0       	rjmp	.+6      	; 0x33ae <vfprintf+0x2d6>
    33a8:	b8 2c       	mov	r11, r8
    33aa:	01 c0       	rjmp	.+2      	; 0x33ae <vfprintf+0x2d6>
    33ac:	b9 2c       	mov	r11, r9
    33ae:	a4 fe       	sbrs	r10, 4
    33b0:	0f c0       	rjmp	.+30     	; 0x33d0 <vfprintf+0x2f8>
    33b2:	fe 01       	movw	r30, r28
    33b4:	e8 0d       	add	r30, r8
    33b6:	f1 1d       	adc	r31, r1
    33b8:	80 81       	ld	r24, Z
    33ba:	80 33       	cpi	r24, 0x30	; 48
    33bc:	21 f4       	brne	.+8      	; 0x33c6 <vfprintf+0x2ee>
    33be:	9a 2d       	mov	r25, r10
    33c0:	99 7e       	andi	r25, 0xE9	; 233
    33c2:	a9 2e       	mov	r10, r25
    33c4:	09 c0       	rjmp	.+18     	; 0x33d8 <vfprintf+0x300>
    33c6:	a2 fe       	sbrs	r10, 2
    33c8:	06 c0       	rjmp	.+12     	; 0x33d6 <vfprintf+0x2fe>
    33ca:	b3 94       	inc	r11
    33cc:	b3 94       	inc	r11
    33ce:	04 c0       	rjmp	.+8      	; 0x33d8 <vfprintf+0x300>
    33d0:	8a 2d       	mov	r24, r10
    33d2:	86 78       	andi	r24, 0x86	; 134
    33d4:	09 f0       	breq	.+2      	; 0x33d8 <vfprintf+0x300>
    33d6:	b3 94       	inc	r11
    33d8:	a3 fc       	sbrc	r10, 3
    33da:	11 c0       	rjmp	.+34     	; 0x33fe <vfprintf+0x326>
    33dc:	a0 fe       	sbrs	r10, 0
    33de:	06 c0       	rjmp	.+12     	; 0x33ec <vfprintf+0x314>
    33e0:	b2 14       	cp	r11, r2
    33e2:	88 f4       	brcc	.+34     	; 0x3406 <vfprintf+0x32e>
    33e4:	28 0c       	add	r2, r8
    33e6:	92 2c       	mov	r9, r2
    33e8:	9b 18       	sub	r9, r11
    33ea:	0e c0       	rjmp	.+28     	; 0x3408 <vfprintf+0x330>
    33ec:	b2 14       	cp	r11, r2
    33ee:	60 f4       	brcc	.+24     	; 0x3408 <vfprintf+0x330>
    33f0:	b6 01       	movw	r22, r12
    33f2:	80 e2       	ldi	r24, 0x20	; 32
    33f4:	90 e0       	ldi	r25, 0x00	; 0
    33f6:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    33fa:	b3 94       	inc	r11
    33fc:	f7 cf       	rjmp	.-18     	; 0x33ec <vfprintf+0x314>
    33fe:	b2 14       	cp	r11, r2
    3400:	18 f4       	brcc	.+6      	; 0x3408 <vfprintf+0x330>
    3402:	2b 18       	sub	r2, r11
    3404:	02 c0       	rjmp	.+4      	; 0x340a <vfprintf+0x332>
    3406:	98 2c       	mov	r9, r8
    3408:	21 2c       	mov	r2, r1
    340a:	a4 fe       	sbrs	r10, 4
    340c:	10 c0       	rjmp	.+32     	; 0x342e <vfprintf+0x356>
    340e:	b6 01       	movw	r22, r12
    3410:	80 e3       	ldi	r24, 0x30	; 48
    3412:	90 e0       	ldi	r25, 0x00	; 0
    3414:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    3418:	a2 fe       	sbrs	r10, 2
    341a:	17 c0       	rjmp	.+46     	; 0x344a <vfprintf+0x372>
    341c:	a1 fc       	sbrc	r10, 1
    341e:	03 c0       	rjmp	.+6      	; 0x3426 <vfprintf+0x34e>
    3420:	88 e7       	ldi	r24, 0x78	; 120
    3422:	90 e0       	ldi	r25, 0x00	; 0
    3424:	02 c0       	rjmp	.+4      	; 0x342a <vfprintf+0x352>
    3426:	88 e5       	ldi	r24, 0x58	; 88
    3428:	90 e0       	ldi	r25, 0x00	; 0
    342a:	b6 01       	movw	r22, r12
    342c:	0c c0       	rjmp	.+24     	; 0x3446 <vfprintf+0x36e>
    342e:	8a 2d       	mov	r24, r10
    3430:	86 78       	andi	r24, 0x86	; 134
    3432:	59 f0       	breq	.+22     	; 0x344a <vfprintf+0x372>
    3434:	a1 fe       	sbrs	r10, 1
    3436:	02 c0       	rjmp	.+4      	; 0x343c <vfprintf+0x364>
    3438:	8b e2       	ldi	r24, 0x2B	; 43
    343a:	01 c0       	rjmp	.+2      	; 0x343e <vfprintf+0x366>
    343c:	80 e2       	ldi	r24, 0x20	; 32
    343e:	a7 fc       	sbrc	r10, 7
    3440:	8d e2       	ldi	r24, 0x2D	; 45
    3442:	b6 01       	movw	r22, r12
    3444:	90 e0       	ldi	r25, 0x00	; 0
    3446:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    344a:	89 14       	cp	r8, r9
    344c:	38 f4       	brcc	.+14     	; 0x345c <vfprintf+0x384>
    344e:	b6 01       	movw	r22, r12
    3450:	80 e3       	ldi	r24, 0x30	; 48
    3452:	90 e0       	ldi	r25, 0x00	; 0
    3454:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    3458:	9a 94       	dec	r9
    345a:	f7 cf       	rjmp	.-18     	; 0x344a <vfprintf+0x372>
    345c:	8a 94       	dec	r8
    345e:	f3 01       	movw	r30, r6
    3460:	e8 0d       	add	r30, r8
    3462:	f1 1d       	adc	r31, r1
    3464:	80 81       	ld	r24, Z
    3466:	b6 01       	movw	r22, r12
    3468:	90 e0       	ldi	r25, 0x00	; 0
    346a:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    346e:	81 10       	cpse	r8, r1
    3470:	f5 cf       	rjmp	.-22     	; 0x345c <vfprintf+0x384>
    3472:	22 20       	and	r2, r2
    3474:	09 f4       	brne	.+2      	; 0x3478 <vfprintf+0x3a0>
    3476:	42 ce       	rjmp	.-892    	; 0x30fc <vfprintf+0x24>
    3478:	b6 01       	movw	r22, r12
    347a:	80 e2       	ldi	r24, 0x20	; 32
    347c:	90 e0       	ldi	r25, 0x00	; 0
    347e:	0e 94 63 1a 	call	0x34c6	; 0x34c6 <fputc>
    3482:	2a 94       	dec	r2
    3484:	f6 cf       	rjmp	.-20     	; 0x3472 <vfprintf+0x39a>
    3486:	f6 01       	movw	r30, r12
    3488:	86 81       	ldd	r24, Z+6	; 0x06
    348a:	97 81       	ldd	r25, Z+7	; 0x07
    348c:	02 c0       	rjmp	.+4      	; 0x3492 <vfprintf+0x3ba>
    348e:	8f ef       	ldi	r24, 0xFF	; 255
    3490:	9f ef       	ldi	r25, 0xFF	; 255
    3492:	2b 96       	adiw	r28, 0x0b	; 11
    3494:	e2 e1       	ldi	r30, 0x12	; 18
    3496:	0c 94 34 1b 	jmp	0x3668	; 0x3668 <__epilogue_restores__>

0000349a <strnlen_P>:
    349a:	fc 01       	movw	r30, r24
    349c:	05 90       	lpm	r0, Z+
    349e:	61 50       	subi	r22, 0x01	; 1
    34a0:	70 40       	sbci	r23, 0x00	; 0
    34a2:	01 10       	cpse	r0, r1
    34a4:	d8 f7       	brcc	.-10     	; 0x349c <strnlen_P+0x2>
    34a6:	80 95       	com	r24
    34a8:	90 95       	com	r25
    34aa:	8e 0f       	add	r24, r30
    34ac:	9f 1f       	adc	r25, r31
    34ae:	08 95       	ret

000034b0 <strnlen>:
    34b0:	fc 01       	movw	r30, r24
    34b2:	61 50       	subi	r22, 0x01	; 1
    34b4:	70 40       	sbci	r23, 0x00	; 0
    34b6:	01 90       	ld	r0, Z+
    34b8:	01 10       	cpse	r0, r1
    34ba:	d8 f7       	brcc	.-10     	; 0x34b2 <strnlen+0x2>
    34bc:	80 95       	com	r24
    34be:	90 95       	com	r25
    34c0:	8e 0f       	add	r24, r30
    34c2:	9f 1f       	adc	r25, r31
    34c4:	08 95       	ret

000034c6 <fputc>:
    34c6:	0f 93       	push	r16
    34c8:	1f 93       	push	r17
    34ca:	cf 93       	push	r28
    34cc:	df 93       	push	r29
    34ce:	fb 01       	movw	r30, r22
    34d0:	23 81       	ldd	r18, Z+3	; 0x03
    34d2:	21 fd       	sbrc	r18, 1
    34d4:	03 c0       	rjmp	.+6      	; 0x34dc <fputc+0x16>
    34d6:	8f ef       	ldi	r24, 0xFF	; 255
    34d8:	9f ef       	ldi	r25, 0xFF	; 255
    34da:	2c c0       	rjmp	.+88     	; 0x3534 <fputc+0x6e>
    34dc:	22 ff       	sbrs	r18, 2
    34de:	16 c0       	rjmp	.+44     	; 0x350c <fputc+0x46>
    34e0:	46 81       	ldd	r20, Z+6	; 0x06
    34e2:	57 81       	ldd	r21, Z+7	; 0x07
    34e4:	24 81       	ldd	r18, Z+4	; 0x04
    34e6:	35 81       	ldd	r19, Z+5	; 0x05
    34e8:	42 17       	cp	r20, r18
    34ea:	53 07       	cpc	r21, r19
    34ec:	44 f4       	brge	.+16     	; 0x34fe <fputc+0x38>
    34ee:	a0 81       	ld	r26, Z
    34f0:	b1 81       	ldd	r27, Z+1	; 0x01
    34f2:	9d 01       	movw	r18, r26
    34f4:	2f 5f       	subi	r18, 0xFF	; 255
    34f6:	3f 4f       	sbci	r19, 0xFF	; 255
    34f8:	31 83       	std	Z+1, r19	; 0x01
    34fa:	20 83       	st	Z, r18
    34fc:	8c 93       	st	X, r24
    34fe:	26 81       	ldd	r18, Z+6	; 0x06
    3500:	37 81       	ldd	r19, Z+7	; 0x07
    3502:	2f 5f       	subi	r18, 0xFF	; 255
    3504:	3f 4f       	sbci	r19, 0xFF	; 255
    3506:	37 83       	std	Z+7, r19	; 0x07
    3508:	26 83       	std	Z+6, r18	; 0x06
    350a:	14 c0       	rjmp	.+40     	; 0x3534 <fputc+0x6e>
    350c:	8b 01       	movw	r16, r22
    350e:	ec 01       	movw	r28, r24
    3510:	fb 01       	movw	r30, r22
    3512:	00 84       	ldd	r0, Z+8	; 0x08
    3514:	f1 85       	ldd	r31, Z+9	; 0x09
    3516:	e0 2d       	mov	r30, r0
    3518:	09 95       	icall
    351a:	89 2b       	or	r24, r25
    351c:	e1 f6       	brne	.-72     	; 0x34d6 <fputc+0x10>
    351e:	d8 01       	movw	r26, r16
    3520:	16 96       	adiw	r26, 0x06	; 6
    3522:	8d 91       	ld	r24, X+
    3524:	9c 91       	ld	r25, X
    3526:	17 97       	sbiw	r26, 0x07	; 7
    3528:	01 96       	adiw	r24, 0x01	; 1
    352a:	17 96       	adiw	r26, 0x07	; 7
    352c:	9c 93       	st	X, r25
    352e:	8e 93       	st	-X, r24
    3530:	16 97       	sbiw	r26, 0x06	; 6
    3532:	ce 01       	movw	r24, r28
    3534:	df 91       	pop	r29
    3536:	cf 91       	pop	r28
    3538:	1f 91       	pop	r17
    353a:	0f 91       	pop	r16
    353c:	08 95       	ret

0000353e <__ultoa_invert>:
    353e:	fa 01       	movw	r30, r20
    3540:	aa 27       	eor	r26, r26
    3542:	28 30       	cpi	r18, 0x08	; 8
    3544:	51 f1       	breq	.+84     	; 0x359a <__ultoa_invert+0x5c>
    3546:	20 31       	cpi	r18, 0x10	; 16
    3548:	81 f1       	breq	.+96     	; 0x35aa <__ultoa_invert+0x6c>
    354a:	e8 94       	clt
    354c:	6f 93       	push	r22
    354e:	6e 7f       	andi	r22, 0xFE	; 254
    3550:	6e 5f       	subi	r22, 0xFE	; 254
    3552:	7f 4f       	sbci	r23, 0xFF	; 255
    3554:	8f 4f       	sbci	r24, 0xFF	; 255
    3556:	9f 4f       	sbci	r25, 0xFF	; 255
    3558:	af 4f       	sbci	r26, 0xFF	; 255
    355a:	b1 e0       	ldi	r27, 0x01	; 1
    355c:	3e d0       	rcall	.+124    	; 0x35da <__ultoa_invert+0x9c>
    355e:	b4 e0       	ldi	r27, 0x04	; 4
    3560:	3c d0       	rcall	.+120    	; 0x35da <__ultoa_invert+0x9c>
    3562:	67 0f       	add	r22, r23
    3564:	78 1f       	adc	r23, r24
    3566:	89 1f       	adc	r24, r25
    3568:	9a 1f       	adc	r25, r26
    356a:	a1 1d       	adc	r26, r1
    356c:	68 0f       	add	r22, r24
    356e:	79 1f       	adc	r23, r25
    3570:	8a 1f       	adc	r24, r26
    3572:	91 1d       	adc	r25, r1
    3574:	a1 1d       	adc	r26, r1
    3576:	6a 0f       	add	r22, r26
    3578:	71 1d       	adc	r23, r1
    357a:	81 1d       	adc	r24, r1
    357c:	91 1d       	adc	r25, r1
    357e:	a1 1d       	adc	r26, r1
    3580:	20 d0       	rcall	.+64     	; 0x35c2 <__ultoa_invert+0x84>
    3582:	09 f4       	brne	.+2      	; 0x3586 <__ultoa_invert+0x48>
    3584:	68 94       	set
    3586:	3f 91       	pop	r19
    3588:	2a e0       	ldi	r18, 0x0A	; 10
    358a:	26 9f       	mul	r18, r22
    358c:	11 24       	eor	r1, r1
    358e:	30 19       	sub	r19, r0
    3590:	30 5d       	subi	r19, 0xD0	; 208
    3592:	31 93       	st	Z+, r19
    3594:	de f6       	brtc	.-74     	; 0x354c <__ultoa_invert+0xe>
    3596:	cf 01       	movw	r24, r30
    3598:	08 95       	ret
    359a:	46 2f       	mov	r20, r22
    359c:	47 70       	andi	r20, 0x07	; 7
    359e:	40 5d       	subi	r20, 0xD0	; 208
    35a0:	41 93       	st	Z+, r20
    35a2:	b3 e0       	ldi	r27, 0x03	; 3
    35a4:	0f d0       	rcall	.+30     	; 0x35c4 <__ultoa_invert+0x86>
    35a6:	c9 f7       	brne	.-14     	; 0x359a <__ultoa_invert+0x5c>
    35a8:	f6 cf       	rjmp	.-20     	; 0x3596 <__ultoa_invert+0x58>
    35aa:	46 2f       	mov	r20, r22
    35ac:	4f 70       	andi	r20, 0x0F	; 15
    35ae:	40 5d       	subi	r20, 0xD0	; 208
    35b0:	4a 33       	cpi	r20, 0x3A	; 58
    35b2:	18 f0       	brcs	.+6      	; 0x35ba <__ultoa_invert+0x7c>
    35b4:	49 5d       	subi	r20, 0xD9	; 217
    35b6:	31 fd       	sbrc	r19, 1
    35b8:	40 52       	subi	r20, 0x20	; 32
    35ba:	41 93       	st	Z+, r20
    35bc:	02 d0       	rcall	.+4      	; 0x35c2 <__ultoa_invert+0x84>
    35be:	a9 f7       	brne	.-22     	; 0x35aa <__ultoa_invert+0x6c>
    35c0:	ea cf       	rjmp	.-44     	; 0x3596 <__ultoa_invert+0x58>
    35c2:	b4 e0       	ldi	r27, 0x04	; 4
    35c4:	a6 95       	lsr	r26
    35c6:	97 95       	ror	r25
    35c8:	87 95       	ror	r24
    35ca:	77 95       	ror	r23
    35cc:	67 95       	ror	r22
    35ce:	ba 95       	dec	r27
    35d0:	c9 f7       	brne	.-14     	; 0x35c4 <__ultoa_invert+0x86>
    35d2:	00 97       	sbiw	r24, 0x00	; 0
    35d4:	61 05       	cpc	r22, r1
    35d6:	71 05       	cpc	r23, r1
    35d8:	08 95       	ret
    35da:	9b 01       	movw	r18, r22
    35dc:	ac 01       	movw	r20, r24
    35de:	0a 2e       	mov	r0, r26
    35e0:	06 94       	lsr	r0
    35e2:	57 95       	ror	r21
    35e4:	47 95       	ror	r20
    35e6:	37 95       	ror	r19
    35e8:	27 95       	ror	r18
    35ea:	ba 95       	dec	r27
    35ec:	c9 f7       	brne	.-14     	; 0x35e0 <__ultoa_invert+0xa2>
    35ee:	62 0f       	add	r22, r18
    35f0:	73 1f       	adc	r23, r19
    35f2:	84 1f       	adc	r24, r20
    35f4:	95 1f       	adc	r25, r21
    35f6:	a0 1d       	adc	r26, r0
    35f8:	08 95       	ret

000035fa <eeprom_write_byte>:
    35fa:	26 2f       	mov	r18, r22

000035fc <eeprom_write_r18>:
    35fc:	f9 99       	sbic	0x1f, 1	; 31
    35fe:	fe cf       	rjmp	.-4      	; 0x35fc <eeprom_write_r18>
    3600:	1f ba       	out	0x1f, r1	; 31
    3602:	92 bd       	out	0x22, r25	; 34
    3604:	81 bd       	out	0x21, r24	; 33
    3606:	20 bd       	out	0x20, r18	; 32
    3608:	0f b6       	in	r0, 0x3f	; 63
    360a:	f8 94       	cli
    360c:	fa 9a       	sbi	0x1f, 2	; 31
    360e:	f9 9a       	sbi	0x1f, 1	; 31
    3610:	0f be       	out	0x3f, r0	; 63
    3612:	01 96       	adiw	r24, 0x01	; 1
    3614:	08 95       	ret

00003616 <eeprom_write_dword>:
    3616:	24 2f       	mov	r18, r20
    3618:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <eeprom_write_r18>
    361c:	25 2f       	mov	r18, r21
    361e:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <eeprom_write_r18>
    3622:	0c 94 13 1b 	jmp	0x3626	; 0x3626 <eeprom_write_word>

00003626 <eeprom_write_word>:
    3626:	0e 94 fd 1a 	call	0x35fa	; 0x35fa <eeprom_write_byte>
    362a:	27 2f       	mov	r18, r23
    362c:	0c 94 fe 1a 	jmp	0x35fc	; 0x35fc <eeprom_write_r18>

00003630 <__prologue_saves__>:
    3630:	2f 92       	push	r2
    3632:	3f 92       	push	r3
    3634:	4f 92       	push	r4
    3636:	5f 92       	push	r5
    3638:	6f 92       	push	r6
    363a:	7f 92       	push	r7
    363c:	8f 92       	push	r8
    363e:	9f 92       	push	r9
    3640:	af 92       	push	r10
    3642:	bf 92       	push	r11
    3644:	cf 92       	push	r12
    3646:	df 92       	push	r13
    3648:	ef 92       	push	r14
    364a:	ff 92       	push	r15
    364c:	0f 93       	push	r16
    364e:	1f 93       	push	r17
    3650:	cf 93       	push	r28
    3652:	df 93       	push	r29
    3654:	cd b7       	in	r28, 0x3d	; 61
    3656:	de b7       	in	r29, 0x3e	; 62
    3658:	ca 1b       	sub	r28, r26
    365a:	db 0b       	sbc	r29, r27
    365c:	0f b6       	in	r0, 0x3f	; 63
    365e:	f8 94       	cli
    3660:	de bf       	out	0x3e, r29	; 62
    3662:	0f be       	out	0x3f, r0	; 63
    3664:	cd bf       	out	0x3d, r28	; 61
    3666:	09 94       	ijmp

00003668 <__epilogue_restores__>:
    3668:	2a 88       	ldd	r2, Y+18	; 0x12
    366a:	39 88       	ldd	r3, Y+17	; 0x11
    366c:	48 88       	ldd	r4, Y+16	; 0x10
    366e:	5f 84       	ldd	r5, Y+15	; 0x0f
    3670:	6e 84       	ldd	r6, Y+14	; 0x0e
    3672:	7d 84       	ldd	r7, Y+13	; 0x0d
    3674:	8c 84       	ldd	r8, Y+12	; 0x0c
    3676:	9b 84       	ldd	r9, Y+11	; 0x0b
    3678:	aa 84       	ldd	r10, Y+10	; 0x0a
    367a:	b9 84       	ldd	r11, Y+9	; 0x09
    367c:	c8 84       	ldd	r12, Y+8	; 0x08
    367e:	df 80       	ldd	r13, Y+7	; 0x07
    3680:	ee 80       	ldd	r14, Y+6	; 0x06
    3682:	fd 80       	ldd	r15, Y+5	; 0x05
    3684:	0c 81       	ldd	r16, Y+4	; 0x04
    3686:	1b 81       	ldd	r17, Y+3	; 0x03
    3688:	aa 81       	ldd	r26, Y+2	; 0x02
    368a:	b9 81       	ldd	r27, Y+1	; 0x01
    368c:	ce 0f       	add	r28, r30
    368e:	d1 1d       	adc	r29, r1
    3690:	0f b6       	in	r0, 0x3f	; 63
    3692:	f8 94       	cli
    3694:	de bf       	out	0x3e, r29	; 62
    3696:	0f be       	out	0x3f, r0	; 63
    3698:	cd bf       	out	0x3d, r28	; 61
    369a:	ed 01       	movw	r28, r26
    369c:	08 95       	ret

0000369e <__do_global_dtors>:
    369e:	12 e0       	ldi	r17, 0x02	; 2
    36a0:	cf e4       	ldi	r28, 0x4F	; 79
    36a2:	d2 e0       	ldi	r29, 0x02	; 2
    36a4:	04 c0       	rjmp	.+8      	; 0x36ae <__do_global_dtors+0x10>
    36a6:	fe 01       	movw	r30, r28
    36a8:	0e 94 04 18 	call	0x3008	; 0x3008 <__tablejump2__>
    36ac:	21 96       	adiw	r28, 0x01	; 1
    36ae:	c0 35       	cpi	r28, 0x50	; 80
    36b0:	d1 07       	cpc	r29, r17
    36b2:	c9 f7       	brne	.-14     	; 0x36a6 <__do_global_dtors+0x8>
    36b4:	f8 94       	cli

000036b6 <__stop_program>:
    36b6:	ff cf       	rjmp	.-2      	; 0x36b6 <__stop_program>
